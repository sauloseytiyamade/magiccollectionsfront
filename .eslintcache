[{"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\index.js":"1","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\App.js":"2","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\reportWebVitals.js":"3","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\utils\\imports.js":"4","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\Routes.js":"5","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\utils\\auth.js":"6","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\pages\\Login\\index.js":"7","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\pages\\UserCollection\\index.js":"8","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\pages\\Register\\index.js":"9","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\utils\\variaveisAmbiente.js":"10","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\utils\\messages.js":"11","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\CardView\\index.js":"12","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditCardsCollection\\index.js":"13","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\Cards\\index.js":"14","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\MenuLeft\\index.js":"15","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddCardsCollection\\index.js":"16","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditionCards\\index.js":"17","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditEditionCards\\index.js":"18","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddEditionCards\\index.js":"19","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\Users\\index.js":"20","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\DashboardAdmin\\index.js":"21","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditUser\\index.js":"22","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\Dashboard\\index.js":"23","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\Loading\\index.js":"24","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\Modals\\index.js":"25","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\ConfigUser\\index.js":"26","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\ColorsCard\\index.js":"27","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddColorsCard\\index.js":"28","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditColorsCard\\index.js":"29","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\LanguageCard\\index.js":"30","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddLanguagesCard\\index.js":"31","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditLanguagesCard\\index.js":"32","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddQualityCard\\index.js":"33","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditQualitiesCard\\index.js":"34","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\QualitiesCard\\index.js":"35","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\RaritiesCard\\index.js":"36","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddRarityCard\\index.js":"37","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditRaritiesCard\\index.js":"38","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\TypesCard\\index.js":"39","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddTypesCard\\index.js":"40","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditTypesCard\\index.js":"41","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditionsCards\\index.js":"42","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditEditionsCards\\index.js":"43","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\LogView\\index.js":"44","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\pages\\Forgot\\index.js":"45","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\pages\\Reset\\index.js":"46","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\utils\\colors.js":"47"},{"size":542,"mtime":1612744833312,"results":"48","hashOfConfig":"49"},{"size":296,"mtime":1616365697311,"results":"50","hashOfConfig":"49"},{"size":375,"mtime":1612744833314,"results":"51","hashOfConfig":"49"},{"size":2177,"mtime":1612744833315,"results":"52","hashOfConfig":"49"},{"size":778,"mtime":1614727378952,"results":"53","hashOfConfig":"49"},{"size":1136,"mtime":1613415893287,"results":"54","hashOfConfig":"49"},{"size":13876,"mtime":1616273627537,"results":"55","hashOfConfig":"49"},{"size":5972,"mtime":1614727447024,"results":"56","hashOfConfig":"49"},{"size":6336,"mtime":1616929523393,"results":"57","hashOfConfig":"49"},{"size":345,"mtime":1614550463523,"results":"58","hashOfConfig":"49"},{"size":4731,"mtime":1616272969792,"results":"59","hashOfConfig":"49"},{"size":3837,"mtime":1614554831711,"results":"60","hashOfConfig":"49"},{"size":7475,"mtime":1616274540727,"results":"61","hashOfConfig":"49"},{"size":11441,"mtime":1616281794448,"results":"62","hashOfConfig":"49"},{"size":10459,"mtime":1614735080508,"results":"63","hashOfConfig":"49"},{"size":8521,"mtime":1614818687615,"results":"64","hashOfConfig":"49"},{"size":16429,"mtime":1616281865801,"results":"65","hashOfConfig":"49"},{"size":8632,"mtime":1616277035835,"results":"66","hashOfConfig":"49"},{"size":9024,"mtime":1616275153930,"results":"67","hashOfConfig":"49"},{"size":8162,"mtime":1616282311320,"results":"68","hashOfConfig":"49"},{"size":14752,"mtime":1616286163084,"results":"69","hashOfConfig":"49"},{"size":6176,"mtime":1616929374062,"results":"70","hashOfConfig":"49"},{"size":17708,"mtime":1614555081002,"results":"71","hashOfConfig":"49"},{"size":1457,"mtime":1614469567240,"results":"72","hashOfConfig":"49"},{"size":1214,"mtime":1614813102529,"results":"73","hashOfConfig":"49"},{"size":6930,"mtime":1616929779408,"results":"74","hashOfConfig":"49"},{"size":8216,"mtime":1616281912943,"results":"75","hashOfConfig":"49"},{"size":3694,"mtime":1614737241688,"results":"76","hashOfConfig":"49"},{"size":4091,"mtime":1614737219567,"results":"77","hashOfConfig":"49"},{"size":8254,"mtime":1616281939011,"results":"78","hashOfConfig":"49"},{"size":3558,"mtime":1616273370720,"results":"79","hashOfConfig":"49"},{"size":4183,"mtime":1616285609582,"results":"80","hashOfConfig":"49"},{"size":3735,"mtime":1616271754372,"results":"81","hashOfConfig":"49"},{"size":4095,"mtime":1616285659339,"results":"82","hashOfConfig":"49"},{"size":8269,"mtime":1616281984711,"results":"83","hashOfConfig":"49"},{"size":8248,"mtime":1616282017451,"results":"84","hashOfConfig":"49"},{"size":3716,"mtime":1614737259325,"results":"85","hashOfConfig":"49"},{"size":4125,"mtime":1616285719213,"results":"86","hashOfConfig":"49"},{"size":8172,"mtime":1616282055421,"results":"87","hashOfConfig":"49"},{"size":3674,"mtime":1614737263854,"results":"88","hashOfConfig":"49"},{"size":4067,"mtime":1616285763979,"results":"89","hashOfConfig":"49"},{"size":7767,"mtime":1616282096266,"results":"90","hashOfConfig":"49"},{"size":4901,"mtime":1614737276153,"results":"91","hashOfConfig":"49"},{"size":3578,"mtime":1614555531532,"results":"92","hashOfConfig":"49"},{"size":3315,"mtime":1616929592627,"results":"93","hashOfConfig":"49"},{"size":4405,"mtime":1616336502816,"results":"94","hashOfConfig":"49"},{"size":1573,"mtime":1614038000768,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"tukzo8",{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"98"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"98"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"98"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"98"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"98"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"98"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"98"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"98"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"98"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"98"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"98"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"98"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"98"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"98"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"98"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"98"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":51,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"98"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"98"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"98"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"98"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"98"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"98"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"98"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"98"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"98"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"98"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"98"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"98"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"98"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"98"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"98"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"98"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"98"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"98"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"98"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"98"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"98"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"98"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"98"},"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\index.js",[],["230","231"],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\App.js",["232"],"import Router from './Routes'\r\nimport {AuthProvider} from './utils/auth'\r\nimport HttpsRedirect from 'react-https-redirect'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <AuthProvider>\r\n          <Router />\r\n      </AuthProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\reportWebVitals.js",[],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\utils\\imports.js",[],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\Routes.js",["233"],"import React from 'react';\r\nimport {BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom'\r\nimport Forgot from './pages/Forgot';\r\nimport Login from './pages/Login'\r\nimport Register from './pages/Register'\r\nimport Reset from './pages/Reset';\r\nimport UserCollection from './pages/UserCollection'\r\n\r\nexport default props => (\r\n    <Router>\r\n        <Switch>\r\n            <Route path='/login' exact component={Login} />\r\n            <Route path='/register' exact component={Register} />\r\n            <Route path='/forgot' exact component={Forgot} />\r\n            <Route path='/reset' component={Reset} />\r\n            <Route path='/usercollection' component={UserCollection} />\r\n            <Redirect from='*' to='/login' />\r\n        </Switch>\r\n    </Router>\r\n\r\n)","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\utils\\auth.js",["234","235","236","237"],"import { JsonWebTokenError } from 'jsonwebtoken';\r\nimport React, { useEffect, useState } from 'react';\r\nimport jwt from 'jsonwebtoken'\r\n\r\nexport const AuthContext = React.createContext()\r\n\r\nconst UseIsAuth = () => {\r\n    const [logged, setLogged] = useState()\r\n    const token = localStorage.getItem('token')\r\n    useEffect(() => {    \r\n        if(token){\r\n            setLogged(true)\r\n        }else{\r\n            setLogged(false)\r\n        }\r\n    }, [])\r\n\r\n    return logged\r\n}\r\n\r\nconst IsAdmin = () => {\r\n    const [isAdmin, setIsAdmin] = useState()\r\n    const token = localStorage.getItem('token')\r\n    const decodedToken = jwt.decode(token)\r\n    const {permission} = decodedToken || 1\r\n    useEffect(() => {\r\n        if(permission == 1){\r\n            setIsAdmin(false)\r\n        }else{\r\n            setIsAdmin(true)\r\n        }\r\n    })\r\n\r\n    return isAdmin\r\n}\r\n\r\nexport const AuthProvider = (props) => {\r\n    const logged = UseIsAuth()\r\n    const isAdmin = IsAdmin()\r\n    return(\r\n        <AuthContext.Provider value={{isAuth: logged, isAdmin: isAdmin}} >\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\n\r\n","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\pages\\Login\\index.js",["238","239","240","241","242"],"import {React, useState,} from 'react';\r\nimport Logo from '../../img/logo.png'\r\nimport axios from 'axios'\r\nimport {BASE_URL_BACK} from '../../utils/variaveisAmbiente'\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css'; \r\nimport {messages} from '../../utils/messages'\r\nimport {Link} from 'react-router-dom'\r\nimport {BASE_URL_FRONT} from '../../utils/variaveisAmbiente'\r\nimport GoogleLogin from 'react-google-login'\r\nimport FacebookLogin from 'react-facebook-login'\r\n\r\n\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport './index.css'\r\n\r\nconst Login = (props) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    //Pega os valores de e-mail e adiciona no estado\r\n    const onChangeMail = evt => {\r\n        setEmail(evt.target.value)\r\n    }\r\n\r\n    //Pega os valores de password e adiciona no estado\r\n    const onChangePass = evt => {\r\n        setPassword(evt.target.value)\r\n    }\r\n\r\n    //Envia os dados para o backend validar\r\n    const sendBack = (evt) => {\r\n        evt.preventDefault()\r\n\r\n        const data = {\r\n            email,\r\n            password\r\n        }\r\n\r\n        //Faz uma requisição post para o backend\r\n        axios.post(`${BASE_URL_BACK}/login`,data)\r\n        .then(resp => {\r\n            //Caso o login seja feito, é gerado um token e adicionado no localstorage\r\n            //Também é gerada uma mensagem para o usuário\r\n            toast.success('Seja Bem-Vindo(a)!!!')\r\n            localStorage.setItem('token', resp.data.token)\r\n            setTimeout(() => {\r\n                window.location.href = `${BASE_URL_FRONT}/usercollection/cards`\r\n            }, 5000);\r\n        })\r\n        .catch(err => {\r\n            try{\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            }catch(err){\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages('Ops'))\r\n            }\r\n        })\r\n    }\r\n\r\n    //Esta função é utilizada para fazer login pelo google\r\n    const responseGoogle = (resp) => {\r\n        // Verifica se o usuário fechou a janela da autorização\r\n        if(resp.profileObj){\r\n            const {profileObj: {email, name, googleId}} = resp\r\n            //Verifica se existe algum usuário com o e-mail cadastrado no sistema\r\n        axios.get(`${BASE_URL_BACK}/users/${email}`)\r\n        .then(resp => {\r\n            if(resp.data.message == true){\r\n                const data = {\r\n                    email,\r\n                    password: googleId,\r\n                }\r\n                //Se existir um usuário cadastrado no sistema ele tenta fazer o login\r\n                //Como existe três sistemas de login, optei por apresentar uma mensagem de erro genérica.\r\n                axios.post(`${BASE_URL_BACK}/login`,data)\r\n                .then(resp => {\r\n                    toast.success('Seja Bem-Vindo(a)!!!')\r\n                    localStorage.setItem('token', resp.data.token)\r\n                    setTimeout(() => {\r\n                        window.location.href = `${BASE_URL_FRONT}/usercollection/cards`\r\n                    }, 5000);\r\n                })\r\n                .catch(err => {\r\n                    //Caso o usuário tente fazer o login com uma conta do google e já exista um usuário com o mesmo e-mail\r\n                    // O sistema informa que já existe usuário cadastrado\r\n                    try{\r\n                        //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                        toast.info('Existe um usuário em nosso sistema com este e-mail, por favor faça o login através do sistema')\r\n                    }catch(err){\r\n                        //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                        toast.info(messages('Ops'))\r\n                    }\r\n                })\r\n\r\n            }else{\r\n                //Se não existir nenhum e-mail cadastrado no sistema\r\n                //O sistema cadastra o novo e-mail e já efetiva o login\r\n               const data = {\r\n                   name,\r\n                   email,\r\n                   password: googleId,\r\n                   external_login: 1,\r\n               } \r\n\r\n               //Criação do usuário no backend\r\n               axios.post(`${BASE_URL_BACK}/users`,data)\r\n                .then(resp => {\r\n                    if(resp.data.message == 'user created'){\r\n                        toast.success('Você foi cadastrado com sucesso!!! Aguarde um momento...')\r\n                        const data = {\r\n                            email,\r\n                            password: googleId\r\n                        }\r\n\r\n                        setTimeout(() => {\r\n                            //O sistema apresenta a mensagem do cadastro por 5 segundos e já executa o login\r\n                            axios.post(`${BASE_URL_BACK}/login`,data)\r\n                            .then(resp => {\r\n                                toast.success('Seja Bem-Vindo(a)!!!')\r\n                                localStorage.setItem('token', resp.data.token)\r\n                                setTimeout(() => {\r\n                                    window.location.href = `${BASE_URL_FRONT}/usercollection/cards`\r\n                                }, 5000);\r\n                            })\r\n                            .catch(err => {\r\n                                try{\r\n                                    //Caso dê algum problema aparece esta mensagem\r\n                                    toast.info('Opsss!! Algo deu errado, tente novamente mais tarde')\r\n                                }catch(err){\r\n                                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                                    toast.info(messages('Ops'))\r\n                                }\r\n                                \r\n                            })\r\n                        }, 5000);\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        .catch(err => {\r\n            try{\r\n                //Caso dê algum problema aparece esta mensagem\r\n                toast.info('Opsss!! Algo deu errado, tente novamente mais tarde')\r\n            }catch(err){\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages('Ops'))\r\n            }\r\n        })\r\n        }else{\r\n            return null\r\n        }\r\n        \r\n    }\r\n\r\n    //Esta função é utilizad para fazer login pelo facebook\r\n    const responseFacebook = (resp) => {\r\n        // Verifica se o usuário fechou a janela da autorização\r\n        if(resp.status != 'unknown'){\r\n            const {email, name, id } = resp\r\n\r\n            //Verifica se existe algum usuário com o e-mail cadastrado no sistema\r\n            axios.get(`${BASE_URL_BACK}/users/${email}`)\r\n            .then(resp => {\r\n                if(resp.data.message == true){\r\n                    const data = {\r\n                        email,\r\n                        password: id\r\n                    }\r\n                    //Se existir um usuário cadastrado no sistema ele tenta fazer o login\r\n                    //Como existe três sistemas de login, optei por apresentar uma mensagem de erro genérica.\r\n                    axios.post(`${BASE_URL_BACK}/login`,data)\r\n                    .then(resp => {\r\n                        toast.success('Seja Bem-Vindo(a)!!!')\r\n                        localStorage.setItem('token', resp.data.token)\r\n                        setTimeout(() => {\r\n                            window.location.href = `${BASE_URL_FRONT}/usercollection/cards`\r\n                        }, 5000);\r\n                    })\r\n                    .catch(err => {\r\n                        try{\r\n                           //Caso o usuário tente fazer o login com uma conta do facebook e já exista um usuário com o mesmo e-mail\r\n                        // O sistema informa que já existe usuário cadastrado\r\n                        toast.info('Existe um usuário em nosso sistema com este e-mail, por favor faça o login através do sistema')\r\n                        }catch(err){\r\n                            //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                            toast.info(messages('Ops'))\r\n                        }\r\n                    })\r\n\r\n                }else{\r\n                    //Se não existir nenhum e-mail cadastrado no sistema\r\n                    //O sistema cadastra o novo e-mail e já efetiva o login\r\n                    const data = {\r\n                        name,\r\n                        email,\r\n                        password: id,\r\n                        external_login: 1,\r\n                    } \r\n                    //Criação do usuário no backend\r\n                axios.post(`${BASE_URL_BACK}/users`,data)\r\n                    .then(resp => {\r\n                        if(resp.data.message == 'user created'){\r\n                            toast.success('Você foi cadastrado com sucesso!!! Aguarde um momento...')\r\n                            const data = {\r\n                                email,\r\n                                password: id\r\n                            }\r\n\r\n                            setTimeout(() => {\r\n                                //O sistema apresenta a mensagem do cadastro por 5 segundos e já executa o login\r\n                                axios.post(`${BASE_URL_BACK}/login`,data)\r\n                                .then(resp => {\r\n                                    toast.success('Seja Bem-Vindo(a)!!!')\r\n                                    localStorage.setItem('token', resp.data.token)\r\n                                    setTimeout(() => {\r\n                                        window.location.href = `${BASE_URL_FRONT}/usercollection/cards`\r\n                                    }, 5000);\r\n                                })\r\n                                .catch(err => {\r\n                                    try{\r\n                                        //Caso dê algum problema aparece esta mensagem\r\n                                        toast.info('Existe um usuário em nosso sistema com este e-mail, por favor faça o login através do sistema')\r\n                                     }catch(err){\r\n                                         //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                                         toast.info(messages('Ops'))\r\n                                     }\r\n                                })\r\n                            }, 5000);\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                try{\r\n                    //Caso dê algum problema aparece esta mensagem\r\n                    toast.info('Opsss!! Algo deu errado, tente novamente mais tarde')\r\n                 }catch(err){\r\n                     //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                     toast.info(messages('Ops'))\r\n                 }\r\n            })\r\n        }else{\r\n            return null\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className='wrapper'>\r\n        <div className='row text-center contentLogin'>\r\n        <div className='col-md-6 offset-md-3 col-10 offset-1'>\r\n            <img src={Logo} className='img-fluid' alt='Logo Magic Collections'/>\r\n            <form onSubmit={sendBack}>\r\n                <div className='row'>\r\n                    <div className='col-md-6 offset-md-3 col-10 offset-1'>\r\n                    <div className='input-group mb-3'>\r\n                        <input type='email' name='email' value={email} onChange={onChangeMail} className='form-control' placeholder='E-mail' autoFocus required />\r\n                        <div className='input-group-prepend'>\r\n                        <span className='input-group-text'><i className='fas fa-envelope'></i></span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='input-group mb-3'>\r\n                        <input type='password' value={password} onChange={onChangePass} className='form-control' placeholder='Senha' required/>\r\n                        <div className='input-group-prepend'>\r\n                        <span className='input-group-text'><i className='fas fa-unlock-alt'></i></span>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <button type='submit' className='btn btn-dark mb-2'>Entrar</button>\r\n                </div>\r\n                <div>\r\n                    <GoogleLogin\r\n                        clientId=\"791822174732-erldq4nsbg2sk70iv0i6p0gcm1gja3qf.apps.googleusercontent.com\"\r\n                        buttonText=\"Login Magic Collections\"\r\n                        onSuccess={responseGoogle}\r\n                        onFailure={responseGoogle}\r\n                        cookiePolicy={'single_host_origin'}\r\n                        className=\"mb-2\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <FacebookLogin\r\n                    appId=\"693791067965683\"\r\n                    fields=\"name,email,picture\"\r\n                    callback={responseFacebook} \r\n                    cssClass=\"my-facebook-button-class mb-2\"\r\n                    />\r\n                </div>\r\n                <p className=\"mb-1\">Não tem uma conta? <Link to='/register'>Crie sua conta agora!</Link></p>\r\n                <p className=\"mb-1\">Esqueceu a senha? <Link to='/forgot'>Esqueci minha senha</Link></p>\r\n            </form>\r\n            <ToastContainer />\r\n        </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\pages\\UserCollection\\index.js",["243","244","245","246"],"import React, { useEffect, useContext } from 'react'\r\nimport { Switch, Route, Redirect} from 'react-router-dom'\r\nimport './index.css'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport Cards from '../../components/Cards'\r\nimport AddCardsCollection from '../../components/AddCardsCollection'\r\nimport EditCardsCollection from '../../components/EditCardsCollection'\r\nimport MenuLeft from '../../components/MenuLeft'\r\nimport CardView from '../../components/CardView'\r\nimport Dashboard from '../../components/Dashboard'\r\nimport EditionCards from '../../components/EditionCards'\r\nimport EditEditionCards from '../../components/EditEditionCards'\r\nimport AddEditionCards from '../../components/AddEditionCards'\r\nimport DashboardAdmin from '../../components/DashboardAdmin'\r\nimport Users from '../../components/Users'\r\nimport EditUser from '../../components/EditUser'\r\nimport ConfigUser from '../../components/ConfigUser'\r\nimport ColorsCard from '../../components/ColorsCard'\r\nimport AddColorsCard from '../../components/AddColorsCard'\r\nimport EditColorsCard from '../../components/EditColorsCard'\r\nimport LanguageCard from '../../components/LanguageCard'\r\nimport AddLanguagesCard from '../../components/AddLanguagesCard'\r\nimport EditLanguagesCard from '../../components/EditLanguagesCard'\r\nimport QualitiesCard from '../../components/QualitiesCard'\r\nimport AddQualityCard from '../../components/AddQualityCard'\r\nimport EditQualitiesCard from '../../components/EditQualitiesCard'\r\nimport RaritiesCard from '../../components/RaritiesCard'\r\nimport AddRarityCard from '../../components/AddRarityCard'\r\nimport EditRaritiesCard from '../../components/EditRaritiesCard'\r\nimport TypesCard from '../../components/TypesCard'\r\nimport AddTypesCard from '../../components/AddTypesCard'\r\nimport EditTypesCard from '../../components/EditTypesCard'\r\nimport EditionsCard from '../../components/EditionsCards'\r\nimport EditEditionsCards from '../../components/EditEditionsCards'\r\nimport LogView from '../../components/LogView'\r\n\r\n\r\nconst UserCollection = (props) => {\r\n\r\n    let {isAuth} = useContext(AuthContext)\r\n\r\n    useEffect(() => {\r\n        const body = document.querySelector('body')\r\n        body.classList.remove('login')\r\n    })\r\n\r\n    if(isAuth == false){\r\n        window.location.href = `${BASE_URL_LOGIN}`        \r\n    }\r\n\r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"wrapper\">\r\n                <MenuLeft />\r\n                <div className=\"content-wrapper p-2\">\r\n                    <Switch>\r\n                        <Route path={`/usercollection/cards`} component={Cards} />\r\n                        <Route path={`/usercollection/addcard`} exact component={AddCardsCollection} />\r\n                        <Route path={`/usercollection/editcard/:id`} exact component={EditCardsCollection} />\r\n                        <Route path={`/usercollection/dashboard`} exact component={Dashboard} />\r\n                        <Route path={`/usercollection/dashboardadmin`} component={DashboardAdmin} />\r\n                        <Route path={`/usercollection/cardview/:id`} exact component={CardView} />\r\n                        <Route path={`/usercollection/editioncards`} exact component={EditionCards} />\r\n                        <Route path={`/usercollection/addeditioncards/:id`} exact component={AddEditionCards} />\r\n                        <Route path={`/usercollection/editioncards/:id`} component={EditEditionCards} />\r\n                        <Route path={`/usercollection/editions`} component={EditionsCard} />\r\n                        <Route path={`/usercollection/editeditionscards/:id`} component={EditEditionsCards} />\r\n                        <Route path={`/usercollection/colors`} component={ColorsCard} />\r\n                        <Route path={`/usercollection/addcolorscard`} component={AddColorsCard} />\r\n                        <Route path={`/usercollection/editcolorscard/:id`} component={EditColorsCard} />\r\n                        <Route path={`/usercollection/languages`} component={LanguageCard} />\r\n                        <Route path={`/usercollection/addlanguagescard`} component={AddLanguagesCard} />\r\n                        <Route path={`/usercollection/editlanguagescard/:id`} component={EditLanguagesCard} />\r\n                        <Route path={`/usercollection/qualities`} component={QualitiesCard} />\r\n                        <Route path={`/usercollection/addqualitiescard`} component={AddQualityCard} />\r\n                        <Route path={`/usercollection/editqualitiescard/:id`} component={EditQualitiesCard} />\r\n                        <Route path={`/usercollection/rarities`} component={RaritiesCard} />\r\n                        <Route path={`/usercollection/addraritiescard`} component={AddRarityCard} />\r\n                        <Route path={`/usercollection/editraritiescard/:id`} component={EditRaritiesCard} />\r\n                        <Route path={`/usercollection/types`} component={TypesCard} />\r\n                        <Route path={`/usercollection/addtypescard`} component={AddTypesCard} />\r\n                        <Route path={`/usercollection/edittypescard/:id`} component={EditTypesCard} />\r\n                        <Route path={`/usercollection/users`} component={Users} />\r\n                        <Route path={`/usercollection/edituser/:id`} component={EditUser} />\r\n                        <Route path={`/usercollection/configuser`} component={ConfigUser} />\r\n                        <Route path={`/usercollection/logview/:id`} component={LogView} />\r\n                    </Switch>\r\n                </div>\r\n                <footer className=\"main-footer\">\r\n                    <strong>Copyright &copy; 2020 - Magic Collections.</strong>\r\n                    All rights reserved.\r\n                </footer>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserCollection","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\pages\\Register\\index.js",["247","248","249","250","251","252"],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\utils\\variaveisAmbiente.js",[],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\utils\\messages.js",["253","254","255"],"const messages = (error) => {\r\n    switch (error) {\r\n        case 'user or password invalid':\r\n            return 'Usuário ou senha inválidos'\r\n        case 'invalid email':\r\n            return 'Seu e-mail está inválido'\r\n        case 'user exist':\r\n            return 'Este usuário já está cadastrado'\r\n        case 'user not found':\r\n            return 'Este usuário não está cadastrado'\r\n        case 'Token invalid':\r\n            return 'Houve algum problema na autenticação, você será redirecionado para a página de login'\r\n        case 'card exist collection':\r\n            return 'Este card já existe na sua coleção'\r\n        case 'card collection created':\r\n            return 'Card criado com sucesso'\r\n        case 'card collection updated':\r\n            return 'Card atualizado com sucesso'\r\n        case 'edition created':\r\n            return 'Edição criada com sucesso'\r\n        case 'edition exist':\r\n            return 'Esta edição já existe'\r\n        case 'card deleted':\r\n            return 'Card excluído com sucesso'\r\n        case 'card collection deleted':\r\n            return 'Card excluído com sucesso'\r\n        case 'card exist':\r\n            return 'Este card já existe'\r\n        case 'card created':\r\n            return 'Card criado com sucesso'\r\n        case 'card updated':\r\n            return 'Card atualizado com sucesso'\r\n        case 'user deleted':\r\n            return 'Usuário excluído com sucesso'\r\n        case 'user updated':\r\n            return 'Usuário atualizado com sucesso'\r\n        case 'file not supported':\r\n            return 'Arquivo não suportado. Apenas imagens são suportadas'\r\n        case 'No token provided':\r\n            return 'Houve algum problema no sistema!!!'\r\n        case 'color created':\r\n            return 'Cor criada com sucesso'\r\n        case 'color exist':\r\n            return 'Cor já existe'\r\n        case 'color updated':\r\n            return 'Cor atualizada com sucesso'\r\n        case 'color deleted':\r\n            return 'Cor excluída com sucesso'\r\n        case 'language created':\r\n            return 'Linguagem criada com sucesso'\r\n        case 'language exist':\r\n            return 'Linguagem já existe'\r\n        case 'language updated':\r\n            return 'Linguagem atualizada com sucesso'\r\n        case 'language deleted':\r\n            return 'Linguagem excluída com sucesso'\r\n        case 'quality created':\r\n            return 'Qualitdade criada com sucesso'\r\n        case 'quality exist':\r\n            return 'Qualitdade já existe'\r\n        case 'quality updated':\r\n            return 'Qualitdade atualizada com sucesso'\r\n        case 'quality deleted':\r\n            return 'Qualitdade excluída com sucesso'\r\n        case 'rarity created':\r\n            return 'Raridade criada com sucesso'\r\n        case 'rarity exist':\r\n            return 'Raridade já existe'\r\n        case 'rarity updated':\r\n            return 'Raridade atualizada com sucesso'\r\n        case 'rarity deleted':\r\n            return 'Raridade excluída com sucesso'\r\n        case 'type created':\r\n            return 'Tipo criado com sucesso'\r\n        case 'type exist':\r\n            return 'Tipo já existe'\r\n        case 'type updated':\r\n            return 'Tipo atualizado com sucesso'\r\n        case 'type deleted':\r\n            return 'Tipo excluído com sucesso'\r\n        case 'edition created':\r\n            return 'Edição criada com sucesso'\r\n        case 'edition exist':\r\n            return 'Edição já existe'\r\n        case 'edition updated':\r\n            return 'Edição atualizada com sucesso'\r\n        case 'edition deleted':\r\n            return 'Edição excluída com sucesso'\r\n        case 'Unauthorized':\r\n            return 'Você não é autorizado'\r\n        case 'external login':\r\n            return 'Este usuário é gerenciado pelo google ou facebook'\r\n        case 'email sent':\r\n            return 'Um email foi enviado com o link da recuperação de senha. Por favor verifique seu e-mail!'\r\n        case 'email not sent':\r\n            return 'Houve algum problema no envio do e-mail. Por favor tente novamente mais tarde!'\r\n        case 'password not changed':\r\n            return 'Não foi possível alterar sua senha. Por favor tente novamente mais tarde!'\r\n        case 'password changed':\r\n            return 'Sua senha foi alterada com sucesso'\r\n        case 'date expired':\r\n            return 'Prazo de mudança de senha foi expirado.'\r\n        case 'password not strength':\r\n            return 'A senha precisa de ter mais de 6 caracteres'\r\n        default:\r\n            return 'Houve algum problema no sistema! Descupe-nos pelo transtorno.'\r\n            break;\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    messages\r\n}","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\CardView\\index.js",["256","257","258","259","260","261","262"],"import React, {useEffect, useRef, useState, useContext} from 'react';\r\nimport Loading from '../Loading'\r\nimport axios from 'axios';\r\nimport {BASE_URL_BACK, BASE_URL_API_MAGIC, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport BackCard from '../../img/backCard.png'\r\nimport Birds from '../../img/aves_do_paraiso.png'\r\nimport jwt from 'jsonwebtoken'\r\nimport {messages} from '../../utils/messages'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport _ from 'lodash'\r\n\r\nconst CardView = (props) => {\r\n\r\n    let {isAuth} = useContext(AuthContext)\r\n    const urlId = props.match.params.id\r\n    const token = localStorage.getItem('token')\r\n    const {id} = jwt.decode(token)\r\n    const [card, setCard] = useState([])\r\n    const [imageUrl, setImageUrl] = useState('')\r\n    const refLoading = useRef()\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    // Busca informações no backend e também na API do Magic The gathering para montar a tela\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/collections/${id}`,configAxios)\r\n        .then(resp => {\r\n            const data = _.filter(resp.data, {'id': parseInt(urlId)})\r\n            setCard(data)\r\n\r\n            axios.get(`${BASE_URL_API_MAGIC}?name=${data[0].card_name}&language=Portuguese (Brazil)`)\r\n            .then(resp => {\r\n                const data = []\r\n\r\n                _.map(resp.data.cards, img => {\r\n                    if(_.has(img, 'imageUrl')){\r\n                        data.push(img)\r\n                    }\r\n                })\r\n\r\n                setImageUrl(data[0].imageUrl)\r\n                setTimeout(() => {\r\n                    refLoading.current.executeLoading()\r\n                }, 1000);\r\n\r\n            })\r\n        })\r\n        .catch(err => {\r\n            try{\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                if(err.response.data.message == 'token invalid'){\r\n                    window.location.href = `${BASE_URL_LOGIN}`\r\n                }\r\n            }catch(err){\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages('Ops'))\r\n            }\r\n            \r\n        })\r\n        \r\n    },[urlId])\r\n\r\n    // Verifica se o usuário está autenticado\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    return(\r\n        <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                    <div className=\"col-12 mt-2 mb-2\">\r\n                        <h1>{card[0]?.card_name}</h1>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-2\">\r\n                        <img src={imageUrl || BackCard} alt=\"\" width='90%'/>\r\n                    </div>\r\n                    <div className=\"col-lg-10 mt-2\">\r\n                        <p><b>Nome da Carta:</b> {card[0]?.card_name}</p>\r\n                        <p><b>Tipo da carta:</b> {card[0]?.card_type}</p>\r\n                        <p><b>Cor da carta:</b> {card[0]?.card_color}</p>\r\n                        <p><b>Edição da carta:</b> {card[0]?.edition}</p>\r\n                        <p><b>Raridade da carta:</b> {card[0]?.rarity}</p>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <Loading \r\n                    ref={refLoading}\r\n                />\r\n                <ToastContainer />\r\n            </section>\r\n\r\n    )\r\n}\r\n\r\nexport default CardView","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditCardsCollection\\index.js",["263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279"],"import React, { useEffect, useState, useRef, useContext } from 'react';\r\nimport axios from 'axios'\r\nimport jwt from 'jsonwebtoken'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport {messages} from '../../utils/messages'\r\nimport _ from 'lodash'\r\nimport { useHistory, useParams, Link, Redirect } from 'react-router-dom';\r\n\r\nconst EditCardsCollection = (props) => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    const token = localStorage.getItem('token')\r\n    const {id} = useParams()\r\n    const history = useHistory()\r\n    const [cardId, setCardId] = useState()\r\n    const [cardName, setCardName] = useState()\r\n    const [qualityId, setQualityId] = useState('')\r\n    const [cardQuality, setCardQuality] = useState([])\r\n    const [languageId, setLanguageId] = useState([])\r\n    const [cardLanguage, setCardLanguage] = useState([])\r\n    const [quantity, setQuantity] = useState('')\r\n    const [redirectPage, setRedirectPage] = useState(false)\r\n    const refQuality = useRef()\r\n    const refLanguage = useRef()\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n    const jwtId = jwt.decode(token)\r\n\r\n    // Busca informações no backend para montar o formulário\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/collections/${jwtId.id}`,configAxios)\r\n        .then(resp => {\r\n            setQualityId(resp.data.filter(card => card.id == id )[0].quality_id);\r\n            setLanguageId(resp.data.filter(card => card.id == id )[0].language_id)\r\n            setCardName(resp.data.filter(card => card.id == id )[0].card_name)\r\n            setQuantity(resp.data.filter(card => card.id == id )[0].quantity)\r\n            setCardId(resp.data.filter(card => card.id == id )[0].card_id)\r\n        })\r\n    },[])\r\n\r\n    // Busca informações no backend para montar o formulário\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardlanguages`,configAxios)\r\n            .then(resp => {\r\n                setCardLanguage(resp.data.language)\r\n            })\r\n    },[languageId])\r\n\r\n    // Busca informações no backend para montar o formulário\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardqualities`,configAxios)\r\n            .then(resp => {\r\n                    setCardQuality(resp.data.quality)\r\n            })\r\n            .catch(err => {\r\n                try{\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages(err.response.data.message))\r\n                    if(err.response.data.message == 'Token invalid'){\r\n                        setTimeout(() => {\r\n                            window.location.href = `${BASE_URL_LOGIN}`\r\n                        }, 5000);\r\n                    }\r\n                }catch(err){\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages('Ops'))\r\n                }\r\n            })\r\n    },[qualityId])\r\n\r\n    // Verifica se o usuário está autenticado\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    // Verifica se há mudança no formulário\r\n    const cardQuantity = evt => {\r\n        setQuantity(evt.target.value)\r\n    }\r\n\r\n    // Salva as informações no backend\r\n    const saveCard = (evt) => {\r\n        evt.preventDefault()\r\n        const obj = {\r\n            user_id: jwtId.id,\r\n            cardLanguage_id: parseInt(refLanguage.current.value),\r\n            cardQuality_id: parseInt(refQuality.current.value),\r\n            cards_id: cardId,\r\n            quantity: parseInt(quantity)\r\n        }\r\n        \r\n        axios.put(`${BASE_URL_BACK}/collections/${props.match.params.id}`,obj,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message = \"card collection updated\"){\r\n                    toast.success(messages('card collection updated'))\r\n                    setTimeout(() => {\r\n                        history.push('/usercollection/cards')\r\n                    }, 5000);\r\n                }\r\n            })\r\n    }\r\n\r\n    // Renderiza o select do formulário\r\n    const renderQuality = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Qualidade da Carta</label>\r\n                <select name={'quality'} className=\"form-control\" ref={refQuality} required>\r\n                   {qualityId > 0 && _.orderBy(cardQuality,[i => i.id == qualityId],['desc']).map(quality => {\r\n                        return(\r\n                            <option key={quality.id} value={quality.id}>{quality.quality}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Renderiza o select do formulário\r\n    const renderLanguage = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Idioma da Carta</label>\r\n                <select className=\"form-control\" name={'language'} ref={refLanguage} required>\r\n                    {languageId > 0 && _.orderBy(cardLanguage,[i => i.id == languageId],['desc']).map(language => {\r\n                        return(\r\n                            <option key={language.id} value={language.id}>{language.language}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                <div className=\"col-12 mt-2 mb-3\">\r\n                    <h1>Edição de Carta</h1>\r\n                </div>\r\n                </div>\r\n\r\n                <form onSubmit={saveCard}>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-4\">\r\n                        <div className=\"form-group\">\r\n                        <label>Nome da Carta</label>\r\n                        <input type=\"number\" className=\"form-control\" value={cardName || ''}  placeholder={cardName} disabled={true} />\r\n                        </div>\r\n                    </div>\r\n                    {renderQuality()}\r\n                    {renderLanguage()}\r\n                    <div className=\"col-lg-4\">\r\n                        <div className=\"form-group\">\r\n                        <label>Quantidade de Carta</label>\r\n                        <input type=\"number\" className=\"form-control\" value={quantity} onChange={cardQuantity} placeholder=\"Digite a quantidade de cartas\"  required />\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <button type=\"submit\" className=\"btn btn-dark mr-2\">Atualizar</button>\r\n                        <Link className=\"btn btn-dark mr-2\" to='/usercollection/cards'>Voltar</Link>\r\n                    </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <ToastContainer />\r\n        </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditCardsCollection","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\Cards\\index.js",["280","281","282","283","284","285","286"],"import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport './index.css'\r\nimport axios from 'axios'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {messages} from '../../utils/messages'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport jwt from 'jsonwebtoken'\r\nimport $ from 'jquery'\r\nimport Modals from '../Modals'\r\nimport Loading from '../Loading'\r\n\r\nconst Cards = () => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    const history = useHistory()\r\n    const [data, setData] = useState([])\r\n    const token = localStorage.getItem('token')\r\n    const [lineId, setLineId] = useState()\r\n    const refModal = useRef()\r\n    const refLoading = useRef()\r\n    \r\n    // Busca informações no backend para montar a tela\r\n    useEffect(() => {\r\n            // Faz a configuração a autorização\r\n            const configAxios = {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            }\r\n            // Pega o id do usuário\r\n            const {id} = jwt.decode(token) || 'error'\r\n\r\n            // Busca todas as cartas do usuário    \r\n            axios.get(`${BASE_URL_BACK}/collections/${id}`,configAxios)\r\n                .then(resp => {\r\n                    setData(resp.data)\r\n                    $(document).ready(function(){\r\n                        let dataTable = $('#dataTable').DataTable({\r\n                            \"retrieve\": true,\r\n                            \"responsive\": true,\r\n                            \"autoWidth\": false,\r\n                            \"lengthChange\": false,\r\n                            \"pageLength\": 10,\r\n                            \"bInfo\" : false,\r\n                            \"language\": {\r\n                                \"paginate\": {\r\n                                  \"previous\": \"Anterior\",\r\n                                  \"next\": \"Próxima\"\r\n                                },\r\n                                \"emptyTable\": \"Não existe dados para serem carregados\"\r\n                            },\r\n                            buttons: [\r\n                                { \r\n                                    extend: 'pdfHtml5',\r\n                                    customize: function(doc) {\r\n                                        doc.styles.tableBodyEven.alignment = 'center';\r\n                                        doc.styles.tableBodyOdd.alignment = 'center'; \r\n                                    },\r\n                                    exportOptions:{\r\n                                        columns: [0,1,2,3,4,5,6,7]\r\n                                    }\r\n                                },\r\n                                { \r\n                                    extend: 'excel',\r\n                                    exportOptions:{\r\n                                        columns: [0,1,2,3,4,5,6,7]\r\n                                    }\r\n                                }\r\n                            ]\r\n                        })\r\n\r\n                        $('#searchBarTec').on('keyup change', function () {\r\n                            dataTable.search(this.value).draw();\r\n                        })\r\n\r\n                        $('#exportExcel').on('click', function() {\r\n                            dataTable.button('.buttons-excel').trigger();\r\n                        });\r\n\r\n                        $('#exportPdf').on('click', function() {\r\n                            dataTable.button('.buttons-pdf').trigger();\r\n                        });\r\n\r\n                        $(\".dataTable\").on('click','.deleteMe', function (evt) { \r\n                            const hasClass = $('.dataTable').hasClass('collapsed')                            \r\n                            if(hasClass){\r\n                                const tr_odd = evt.target.offsetParent.parentElement.previousElementSibling\r\n                                tr_odd.classList.remove('parent')\r\n                                tr_odd.classList.add('odd')\r\n                                const line = evt.target.offsetParent\r\n                                line.style.display = 'none'\r\n                            }\r\n                            \r\n                            openModal(evt.target.dataset.id)\r\n                        });\r\n\r\n                        // Desativa o carregamento\r\n                        refLoading.current.executeLoading()\r\n                    })\r\n                })\r\n                .catch(err => {\r\n                    try{\r\n                        // Caso dê erro é gerada uma mensagem e o usuário é enviado para a página de login\r\n                        toast.info(messages(err.response.data.message))\r\n                        if(err.response.data.message == 'Token invalid'){\r\n                            setTimeout(() => {\r\n                                window.location.href = `${BASE_URL_LOGIN}`\r\n                            }, 5000);\r\n                        }\r\n                    }catch(err){\r\n                        //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                        toast.info(messages('Ops'))\r\n                    }\r\n                })\r\n    },[])\r\n\r\n    // Verifica se o usuário está autenticado\r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n    \r\n    if(isAuth == false){\r\n        window.location.href = `${BASE_URL_LOGIN}`\r\n    }\r\n\r\n    // Deleta a carta do usuário\r\n    const deleteItem = () => {\r\n        const configAxios = {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }\r\n\r\n        axios.delete(`${BASE_URL_BACK}/collections/${lineId}`,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message == 'card collection deleted'){\r\n                    toast.success(messages(resp.data.message))\r\n                    const filtered = data.filter(cards => {\r\n                        return cards.id != lineId\r\n                    })            \r\n                    setData(filtered)\r\n                    refModal.current.openModal()\r\n                }\r\n            })\r\n            .catch(err => {\r\n                try{\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages(err.response.data.message))\r\n                }catch(err){\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages('Ops'))\r\n                }\r\n            })\r\n    }\r\n\r\n    // Renderiza as linhas da tabela\r\n    const renderRow = () => {\r\n        return data.map(line => (\r\n                <tr key={line.id}>\r\n                    <td>{line.card_name}</td>\r\n                    <td className=\"text-center\">{line.card_type}</td>\r\n                    <td className=\"text-center\">{line.card_color}</td>\r\n                    <td className=\"text-center\">{line.edition}</td>\r\n                    <td className=\"text-center\">{line.rarity}</td>\r\n                    <td className=\"text-center\">{line.quality}</td>\r\n                    <td className=\"text-center\">{line.language}</td>\r\n                    <td className=\"text-center\">{line.quantity}</td>\r\n                    <td className=\"text-center\"><Link className='link_text_pen' to={`cardview/${line.id}`}><i className=\"fas fa-eye click\"></i></Link></td>\r\n                    <td className=\"text-center\"><Link className='link_text_pen' to={`editcard/${line.id}`}><i className=\"fas fa-pencil-alt click\"></i></Link></td>\r\n                    <td className=\"text-center\"><i className=\"fas fa-trash-alt click deleteMe\" data-id={line.id}></i></td>\r\n                </tr>\r\n            )\r\n        )\r\n    }\r\n\r\n    // Abre uma modal quando o usuário vai deletar uma cartas\r\n    // A modal verifica se o usuário tem certeza que deseja executar a ação\r\n    const openModal = (id) => {\r\n\r\n        setLineId(id)\r\n        refModal.current.openModal()\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            \r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                    <div className=\"col-12 mt-2 mb-2\">\r\n                        <h1>Minha Coleção</h1>\r\n                    </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-9\">\r\n                            <div className=\"input-group mb-3\">\r\n                            <input type=\"email\" className=\"form-control\" id=\"searchBarTec\" placeholder=\"Qual carta você está procurando?\" />\r\n                            <div className=\"input-group-append\">\r\n                                <div className=\"input-group-text\">\r\n                                <i className=\"fas fa-search\"></i>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-3 mb-2 mr-0\">\r\n                            <button type=\"button\" className=\"btn btn-dark mr-1\"><Link className='link_text' to='/usercollection/addcard'>Adicionar</Link></button>\r\n                            <button type=\"button\" className=\"btn btn-dark mr-1\" id='exportPdf'>PDF</button>\r\n                            <button type=\"button\" className=\"btn btn-dark mr-1\" id='exportExcel'>Excel</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <div className=\"table-responsive\">\r\n                            <table id=\"dataTable\" className=\"table table-bordered \">\r\n                            <thead>\r\n                            <tr>\r\n                                <th>Nome</th>\r\n                                <th className=\"text-center\">Tipo</th>\r\n                                <th className=\"text-center\">Cor</th>\r\n                                <th className=\"text-center\">Edição</th>\r\n                                <th className=\"text-center\">Raridade</th>\r\n                                <th className=\"text-center\">Qualidade</th>\r\n                                <th className=\"text-center\">Idioma</th>\r\n                                <th className=\"text-center\">Quantidade</th>\r\n                                <th className=\"text-center\">Visualizar</th>\r\n                                <th className=\"text-center\">Editar</th>\r\n                                <th className=\"text-center\">Remover</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {renderRow()}\r\n                            </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <ToastContainer />\r\n            <Modals \r\n                title='Exclusão de card'\r\n                body='Deseja realmente excluir este card?'\r\n                nameButton='Excluir'\r\n                deleteItem={deleteItem}\r\n                ref={refModal}\r\n            />\r\n            <Loading \r\n                ref={refLoading}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\MenuLeft\\index.js",["287","288","289","290","291","292","293","294"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport ImgDefault from '../../img/imgDefault.png'\r\nimport jwt from 'jsonwebtoken'\r\nimport {Link, Redirect, useHistory} from 'react-router-dom'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {messages} from '../../utils/messages'\r\nimport axios from 'axios';\r\nimport _ from 'lodash'\r\nimport './index.css'\r\n\r\nconst MenuLeft = () => {\r\n    const history = useHistory()\r\n    const [userName, setUserName] = useState('User')\r\n    const [photo, setPhoto] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const user = jwt.decode(token) || 0\r\n    let {isAdmin} = useContext(AuthContext)\r\n    let {isAuth} = useContext(AuthContext)\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    // Busca informações no backend para montar o formulário\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/users`,configAxios)\r\n        .then(resp => {\r\n            const userFilter = _.filter(resp.data, {'id': user.id})\r\n            const userNameFilter = userFilter[0].name\r\n            const photoFilter = userFilter[0].photo\r\n            setPhoto(photoFilter)\r\n            setUserName(userNameFilter)\r\n            \r\n        })\r\n        .catch(err => {\r\n            try{\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            }catch(err){\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info('Ops, ocorreu algum erro! Tente novamente mais tarde')\r\n            }\r\n        })\r\n    },[userName])\r\n\r\n    // Verifica se o usuário está autenticado\r\n    if (isAuth == false) {\r\n        window.location.href = `${BASE_URL_LOGIN}`\r\n    }\r\n\r\n    if (isAuth == false) {\r\n        return null\r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    //Sai do sistema quando o usuário clica em sair\r\n    const sair = () => {\r\n        localStorage.setItem('token', 'sair')\r\n        toast.info('Tchauzinho Planeswalker!!!')\r\n        setTimeout(() => {\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        }, 5000);\r\n    }\r\n    \r\n    return(\r\n        <>\r\n            <nav className=\"main-header navbar navbar-expand navbar-white navbar-light\">\r\n                <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" data-widget=\"pushmenu\" href=\"#\" role=\"button\"><i className=\"fas fa-bars\"></i></a>\r\n                </li>\r\n                </ul>\r\n            </nav>\r\n            <aside className=\"main-sidebar sidebar-dark-primary elevation-4\">\r\n                <a href=\"#\" className=\"brand-link\">\r\n                    <span className=\"brand-text font-weight-bold ml-2\">\r\n                        MAGIC COLLECTIONS\r\n                    </span>\r\n                </a>\r\n                <div className=\"sidebar\">\r\n                    <img src={photo || ImgDefault} className=\"img-circle mx-auto d-block image_avatar\" alt=\"Meu Avatar\" />\r\n                    <div className=\"text-white text-center ml-2 text-bold\">\r\n                        {isAdmin &&\r\n                            <i className=\"far fa-gem text-warning\"></i> \r\n                        } {userName}\r\n                    </div>\r\n                    <hr className=\"hrWhite\" />\r\n                    <nav>\r\n                        <ul className=\"nav nav-pills nav-sidebar flex-column\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to='/usercollection/dashboard' className=\"nav-link\">\r\n                                    <i className=\"fas fa-tachometer-alt text-white mr-2\"></i>\r\n                                    <p className=\"text-white text-bold\">Dashboard</p>\r\n                                </Link>\r\n                            </li>\r\n                            {isAdmin &&\r\n                                <li className=\"nav-item\">\r\n                                    <Link to='/usercollection/dashboardadmin' className=\"nav-link\">                                    \r\n                                        <i className=\"fas fa-user-shield text-white mr-2\"></i>\r\n                                        <p className=\"text-white text-bold\">Dashboard Admin</p>\r\n                                    </Link>\r\n                                </li>\r\n                            }\r\n                            <li className=\"nav-item\">\r\n                                <Link to='/usercollection/cards' className=\"nav-link\">                                    \r\n                                    <i className=\"fab fa-wizards-of-the-coast text-white mr-2\"></i>\r\n                                    <p className=\"text-white text-bold\">Minha Coleção</p>\r\n                                </Link>\r\n                            </li>\r\n                            {isAdmin &&\r\n                                <li className=\"nav-item\">\r\n                                    <Link to='/usercollection/editioncards' className=\"nav-link\">                                    \r\n                                        <i className=\"fas fa-user-shield text-white mr-2\"></i>\r\n                                        <p className=\"text-white text-bold\">Cadastro de cards</p>\r\n                                    </Link>\r\n                                </li>\r\n                            }\r\n                            {isAdmin &&\r\n                                <li className=\"nav-item\">\r\n                                    <Link to='/usercollection/colors' className=\"nav-link\">                                    \r\n                                        <i className=\"fas fa-user-shield text-white mr-2\"></i>\r\n                                        <p className=\"text-white text-bold\">Cadastro de cores</p>\r\n                                    </Link>\r\n                                </li>\r\n                            }\r\n                            {isAdmin &&\r\n                                <li className=\"nav-item\">\r\n                                    <Link to='/usercollection/languages' className=\"nav-link\">                                    \r\n                                        <i className=\"fas fa-user-shield text-white mr-2\"></i>\r\n                                        <p className=\"text-white text-bold\">Cadastro de idiomas</p>\r\n                                    </Link>\r\n                                </li>\r\n                            }\r\n                            {isAdmin &&\r\n                                <li className=\"nav-item\">\r\n                                    <Link to='/usercollection/qualities' className=\"nav-link\">                                    \r\n                                        <i className=\"fas fa-user-shield text-white mr-2\"></i>\r\n                                        <p className=\"text-white text-bold\">Cadastro da Qualidade</p>\r\n                                    </Link>\r\n                                </li>\r\n                            }\r\n                            {isAdmin &&\r\n                                <li className=\"nav-item\">\r\n                                    <Link to='/usercollection/rarities' className=\"nav-link\">                                    \r\n                                        <i className=\"fas fa-user-shield text-white mr-2\"></i>\r\n                                        <p className=\"text-white text-bold\">Cadastro de Raridade</p>\r\n                                    </Link>\r\n                                </li>\r\n                            }\r\n                            {isAdmin &&\r\n                                <li className=\"nav-item\">\r\n                                    <Link to='/usercollection/types' className=\"nav-link\">                                    \r\n                                        <i className=\"fas fa-user-shield text-white mr-2\"></i>\r\n                                        <p className=\"text-white text-bold\">Cadastro de Tipo</p>\r\n                                    </Link>\r\n                                </li>\r\n                            }\r\n                            {isAdmin &&\r\n                                <li className=\"nav-item\">\r\n                                    <Link to='/usercollection/editions' className=\"nav-link\">                                    \r\n                                        <i className=\"fas fa-user-shield text-white mr-2\"></i>\r\n                                        <p className=\"text-white text-bold\">Alterar edições</p>\r\n                                    </Link>\r\n                                </li>\r\n                            }\r\n                            {isAdmin &&\r\n                                <li className=\"nav-item\">\r\n                                    <Link to='/usercollection/users' className=\"nav-link\">                                    \r\n                                        <i className=\"fas fa-user-shield text-white mr-2\"></i>\r\n                                        <p className=\"text-white text-bold\">Administrar Usuários</p>\r\n                                    </Link>\r\n                                </li>\r\n                            }\r\n                            <li className=\"nav-item\">\r\n                                <Link to='/usercollection/configuser' className=\"nav-link\">                                    \r\n                                    <i className=\"fas fa-user text-white mr-2\"></i>\r\n                                    <p className=\"text-white text-bold\">Configuração do usuário</p>\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"#\" onClick={sair} className=\"nav-link\">                                    \r\n                                    <i className=\"fas fa-sign-out-alt text-white mr-2\"></i>\r\n                                    <p className=\"text-white text-bold\">sair</p>\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n                <ToastContainer />\r\n            </aside>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MenuLeft\r\n\r\n","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddCardsCollection\\index.js",["295","296","297","298","299","300"],"import React, { useEffect, useRef, useState, useContext } from 'react'\r\nimport './index.css'\r\nimport { Typeahead} from 'react-bootstrap-typeahead'\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css'\r\nimport {messages} from '../../utils/messages'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport {useHistory, Link, Redirect} from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport _ from 'lodash'\r\nimport jwt from 'jsonwebtoken'\r\n\r\nconst AddCardsCollection = () => {\r\n\r\n    let {isAuth} = useContext(AuthContext)\r\n    const history = useHistory()\r\n    const [allcards, setAllCards] = useState([])\r\n    const [cardName, setCardName] = useState([]);\r\n    const [cardSelected, setCardSelected] = useState('')\r\n    const [cardQuality, setCardQuality] = useState([])\r\n    const [cardLanguage, setCardLanguage] = useState([])\r\n    const [cadastrar, setCadastrar] = useState(false)\r\n    const refQuality = useRef()\r\n    const refLanguage = useRef()\r\n    const [quantity, setQuantity] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const user = jwt.decode(token)\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    // Buscas as informações do banco de dados para montar a tela para adição de carta\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cards`,configAxios)\r\n            .then(resp => {\r\n                setAllCards(resp.data)\r\n                const data = resp.data.map((cards, index, array) => {                    \r\n                        return `${cards.card_name} | ${cards.edition}`\r\n                })\r\n                setCardName(data)\r\n            })\r\n\r\n        axios.get(`${BASE_URL_BACK}/cardqualities`,configAxios)\r\n            .then(resp => {\r\n                setCardQuality(resp.data.quality)\r\n            })\r\n\r\n        axios.get(`${BASE_URL_BACK}/cardlanguages`,configAxios)\r\n            .then(resp => {\r\n                setCardLanguage(resp.data.language)\r\n            })\r\n            .catch(err => {\r\n                try{\r\n                    toast.info(messages(err.response.data.message))\r\n                    if(err.response.data.message == 'Token invalid'){\r\n                        setTimeout(() => {\r\n                            window.location.href = `${BASE_URL_LOGIN}`\r\n                        }, 5000);\r\n                    }\r\n                }catch(err){\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages('Ops'))\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    // Faz alteração no cardSelected caso haja alguma mudança no formulário\r\n    const handleChange = (selected) => {\r\n        setCardSelected(selected)\r\n    }\r\n\r\n    // Ativa botão cadastrar quando o usuário clica fora do input\r\n    const handleOnBlur = (selected) => {\r\n        if(selected.target.value.indexOf('|') == -1){\r\n            setCadastrar(false)\r\n        }else{\r\n            setCadastrar(true)\r\n        }\r\n    }\r\n\r\n    // Renderiza o select do formulário\r\n    const renderQuality = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Qualidade da Carta</label>\r\n                <select className=\"form-control\" ref={refQuality} required>\r\n                   {cardQuality.map(quality => {\r\n                        return(\r\n                            <option key={quality.id} value={quality.id}>{quality.quality}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Renderiza o select do formulário\r\n    const renderLanguage = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Idioma da Carta</label>\r\n                <select className=\"form-control\" ref={refLanguage} required>\r\n                    {cardLanguage.map(language => {\r\n                        return(\r\n                            <option key={language.id} value={language.id}>{language.language}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Verifica se há mudança no formulário\r\n    const cardQuantity = evt => {\r\n        setQuantity(evt.target.value)\r\n    }\r\n\r\n    // Salva as informações no backend\r\n    const saveCard = evt => {\r\n        evt.preventDefault()\r\n        \r\n        const nameArr = cardSelected[0].split('|')\r\n        const nameArrTrim = nameArr.map(name => {\r\n            return name.trim()\r\n        })\r\n        const userCardsSelected = (_.find(allcards, {card_name: nameArrTrim[0], edition: nameArrTrim[1]}));\r\n        const qualityId = refQuality.current.value\r\n        const languageId = refLanguage.current.value\r\n        const userCardsSelectedId = userCardsSelected.id\r\n        const userId = user.id\r\n        const objAddCard = {\r\n            user_id: userId,\r\n            cardLanguage_id: languageId,\r\n            cardQuality_id: qualityId,\r\n            cards_id: userCardsSelectedId,\r\n            quantity\r\n        }\r\n\r\n        axios.post(`${BASE_URL_BACK}/collections`,objAddCard,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/usercollection/cards')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                try{\r\n                    toast.info(messages(err.response.data.message))\r\n                }catch(err){\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages('Ops'))\r\n                }\r\n            })\r\n    }\r\n\r\n    // Verifica se o usuário está autenticado\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n        <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                <div className=\"col-12 mt-2 mb-3\">\r\n                    <h1>Cadastro de cartas na sua coleção</h1>\r\n                </div>\r\n                </div>\r\n\r\n                <form onSubmit={saveCard}>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-4 mb-5\">\r\n                        <div className=\"form-group\">\r\n                        <label>Nome da Carta</label>\r\n                            <Typeahead\r\n                                id=\"cardsName\"\r\n                                onChange={(selected) => {\r\n                                    handleChange(selected)\r\n                                }}\r\n\r\n                                onBlur={(selected) => {\r\n                                    handleOnBlur(selected)\r\n                                }}\r\n                                options={cardName}\r\n                                minLength={2}\r\n                                inputProps={{ required: true }}\r\n                                >\r\n                            </Typeahead>\r\n                        </div>\r\n                    </div>\r\n                    {renderQuality()}\r\n                    {renderLanguage()}\r\n                    <div className=\"col-lg-4\">\r\n                        <div className=\"form-group\">\r\n                        <label>Quantidade de Carta</label>\r\n                        <input type=\"number\" className=\"form-control\" value={quantity} placeholder=\"Digite a quantidade de cartas\" onChange={cardQuantity} required min=\"1\" />\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <button type=\"submit\" className={cadastrar ? 'btn btn-dark mr-2' : 'btn btn-dark mr-2 disabled'}>Cadastrar</button>\r\n                        <Link className=\"btn btn-dark mr-2\" to='/usercollection/cards'>Voltar</Link>\r\n                    </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <ToastContainer />\r\n        </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddCardsCollection","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditionCards\\index.js",["301","302","303","304","305","306","307","308","309","310","311"],"import React, { useEffect, useRef, useState, useContext } from 'react'\r\nimport './index.css'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport {messages} from '../../utils/messages'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport {toast, ToastContainer } from 'react-toastify'\r\nimport Loading from '../Loading'\r\nimport Modals from '../Modals'\r\nimport _ from 'lodash'\r\nimport $ from 'jquery'\r\n\r\n\r\nconst EditionCards = () => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [cardEditions, setCardEditions] = useState([])\r\n    const [cardFilterEdition, setCardFilterEdition] = useState([])\r\n    const [idEdition, setIdEdition] = useState()\r\n    const [lineId, setLineId] = useState()\r\n    const [hiddenCards, setHiddensCard] = useState(true)\r\n    const token = localStorage.getItem('token')\r\n    const refEdition = useRef()\r\n    const refModal = useRef()\r\n    const refLoading = useRef()\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    // Busca informações no backend para montar o formulário\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardeditions`,configAxios)\r\n            .then(resp => {\r\n                setCardEditions(resp.data.edition)\r\n                let dataTable = $('#dataTableEditionCards').DataTable({\r\n                    \"retrieve\": true,\r\n                    \"responsive\": true,\r\n                    \"autoWidth\": false,\r\n                    \"lengthChange\": false,\r\n                    \"pageLength\": 10,\r\n                    \"bInfo\" : false,\r\n                    \"language\": {\r\n                        \"paginate\": {\r\n                          \"previous\": \"Anterior\",\r\n                          \"next\": \"Próxima\"\r\n                        },\r\n                        \"emptyTable\": \"Não existe dados para serem carregados\"\r\n                    },\r\n                    buttons: [\r\n                        { \r\n                            extend: 'pdfHtml5',\r\n                            customize: function(doc) {\r\n                                doc.styles.tableBodyEven.alignment = 'center';\r\n                                doc.styles.tableBodyOdd.alignment = 'center'; \r\n                            },\r\n                            exportOptions:{\r\n                                columns: [0,1,2,3,4,5,6,7]\r\n                            }\r\n                        },\r\n                        { \r\n                            extend: 'excel',\r\n                            exportOptions:{\r\n                                columns: [0,1,2,3,4,5,6,7]\r\n                            }\r\n                        }\r\n                    ]\r\n                })\r\n\r\n                $('#searchBarTec').on('keyup change', function () {\r\n                    dataTable.search(this.value).draw()\r\n                })\r\n\r\n                $('#exportExcel').on('click', function() {\r\n                    dataTable.button('.buttons-excel').trigger()\r\n                })\r\n\r\n                $('#exportPdf').on('click', function() {\r\n                    dataTable.button('.buttons-pdf').trigger()\r\n                })\r\n\r\n                refLoading.current.executeLoading()\r\n            })\r\n            .catch(err => {\r\n                try{\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages(err.response.data.message))\r\n                    if(err.response.data.message == 'Token invalid'){\r\n                        setTimeout(() => {\r\n                            window.location.href = `${BASE_URL_LOGIN}`\r\n                        }, 5000);\r\n                    }\r\n                }catch(err){\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages('Ops'))\r\n                }\r\n            })\r\n    \r\n    }, [])\r\n\r\n    // Verifica se o usuário está autenticado\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    // Verifica se o usuário é administrador\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/usercollection/cards' />\r\n        )\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    // Verifica qual edição o usuário vai selecionar para apresentar para as cartas corretamente\r\n    const handleChangeOptions = (e) => {\r\n        if(e.target.value == 'Selecione uma edição'){\r\n            setIdEdition(null)\r\n            setHiddensCard(true)\r\n        }else{\r\n            setHiddensCard(false)\r\n            const idEdition = refEdition.current.value\r\n            setIdEdition(idEdition)\r\n            axios.get(`${BASE_URL_BACK}/cards`,configAxios)\r\n            .then(resp => {\r\n                $('#dataTableEditionCards').DataTable().destroy()\r\n                setCardFilterEdition(_.filter(resp.data, {'edition_id': parseInt(idEdition)}))\r\n                let dataTable = $('#dataTableEditionCards').DataTable({\r\n                    \"retrieve\": true,\r\n                    \"retrieve\": true,\r\n                    \"responsive\": true,\r\n                    \"autoWidth\": false,\r\n                    \"lengthChange\": false,\r\n                    \"pageLength\": 10,\r\n                    \"bInfo\" : false,\r\n                    \"language\": {\r\n                        \"paginate\": {\r\n                          \"previous\": \"Anterior\",\r\n                          \"next\": \"Próxima\"\r\n                        },\r\n                        \"emptyTable\": \"Não existe dados para serem carregados\"\r\n                    },\r\n                    buttons: [\r\n                        { \r\n                            extend: 'pdfHtml5',\r\n                            customize: function(doc) {\r\n                                doc.styles.tableBodyEven.alignment = 'center';\r\n                                doc.styles.tableBodyOdd.alignment = 'center'; \r\n                            },\r\n                            exportOptions:{\r\n                                columns: [0,1,2,3,4,5,6,7]\r\n                            }\r\n                        },\r\n                        { \r\n                            extend: 'excel',\r\n                            exportOptions:{\r\n                                columns: [0,1,2,3,4,5,6,7]\r\n                            }\r\n                        }\r\n                    ]\r\n                })\r\n\r\n                $('#searchBarTec').on('keyup change', function () {\r\n                    dataTable.search(this.value).draw()\r\n                })\r\n\r\n                $('#exportExcel').on('click', function() {\r\n                    dataTable.button('.buttons-excel').trigger()\r\n                })\r\n\r\n                $('#exportPdf').on('click', function() {\r\n                    dataTable.button('.buttons-pdf').trigger()\r\n                })\r\n\r\n                $(\".dataTable\").on('click','.deleteMe', function (evt) { \r\n                    const hasClass = $('.dataTable').hasClass('collapsed')                            \r\n                    if(hasClass){\r\n                        const tr_odd = evt.target.offsetParent.parentElement.previousElementSibling\r\n                        tr_odd.classList.remove('parent')\r\n                        tr_odd.classList.add('odd')\r\n                        const line = evt.target.offsetParent\r\n                        line.style.display = 'none'\r\n                    }\r\n                    \r\n                    openModal(evt.target.dataset.id)\r\n                });\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n        }\r\n    }\r\n\r\n    // Renderiza o select do formulário\r\n    const renderEditions = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mt-3\">\r\n                <div className=\"form-group\">\r\n                <label>Selecione a edição</label>\r\n                <select className=\"form-control\" ref={refEdition} onChange={e => handleChangeOptions(e)} required>\r\n                    <option>Selecione uma edição</option>\r\n                    {cardEditions.map(edition => {\r\n                        return(\r\n                            <option key={edition.id} value={edition.id}>{edition.edition}</option>\r\n                        )\r\n                    })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Renderiza as linhas da tabela\r\n    const renderRow = () => {\r\n        return cardFilterEdition.map(line => (\r\n                <tr key={line.id}>\r\n                    <td>{line.card_name}</td>\r\n                    <td className=\"text-center\">{line.card_type}</td>\r\n                    <td className=\"text-center\">{line.card_color}</td>\r\n                    <td className=\"text-center\">{line.edition}</td>\r\n                    <td className=\"text-center\">{line.rarity}</td>\r\n                    <td className=\"text-center\"><Link className='link_text_pen' to={`/usercollection/editioncards/${line.id}`}><i className=\"fas fa-pencil-alt click\"></i></Link></td>\r\n                    <td className=\"text-center\"><i className=\"fas fa-trash-alt click deleteMe\" data-id={line.id}></i></td>\r\n                </tr>\r\n            )\r\n        )\r\n    }\r\n\r\n    // Abre a modal solicitando que o usuário tenha certeza que deseja excluir aquele card\r\n    const openModal = (id) => {\r\n        setLineId(id)\r\n        refModal.current.openModal()\r\n    }\r\n\r\n    // Exclui o card\r\n    const deleteItem = () => {\r\n        axios.delete(`${BASE_URL_BACK}/cards/${lineId}`,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message == 'card deleted'){\r\n                    toast.success(messages(resp.data.message))\r\n                    const filtered = cardFilterEdition.filter(cards => {\r\n                        return cards.id != lineId\r\n                    })            \r\n                    setCardFilterEdition(filtered)\r\n                    refModal.current.openModal()\r\n                }\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }\r\n\r\n    // Salva a nova edição que o usuário cadastrou\r\n    const saveNewEdition = (evt) => {\r\n        evt.preventDefault()\r\n        const objAddEdtion = {\r\n            'edition': evt.target.newEdition.value.trim(),\r\n            'code': evt.target.codeNewEdition.value.trim()\r\n        }\r\n\r\n        axios.post(`${BASE_URL_BACK}/cardeditions`,objAddEdtion,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                axios.get(`${BASE_URL_BACK}/cardeditions`,configAxios)\r\n                    .then(resp => {\r\n                        setCardEditions(resp.data.edition)\r\n                    })\r\n\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }\r\n\r\n    return(\r\n        <section className=\"content\">\r\n           <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 mt-2 mb-3\">\r\n                    <h1>Edições e Cards</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {renderEditions()}\r\n                    <div className=\"col-lg-4 mt-5\">                \r\n                        <button type=\"button\" data-toggle=\"collapse\" href=\"#addNewEdition\" className=\"btn btn-dark mb-3\">Nova Edição</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <form onSubmit={saveNewEdition}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-4\">\r\n                            <div className=\"collapse multi-collapse\" id=\"addNewEdition\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-6\">\r\n                                        <input type=\"text\" name='newEdition' className=\"form-control mb-3\" placeholder=\"Qual o nome da edição?\" required />\r\n                                    </div>\r\n                                    <div className=\"col-lg-6\">\r\n                                        <input type=\"text\" name='codeNewEdition' className=\"form-control mb-3\" placeholder=\"Qual o código da edição?\" required />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-4\">\r\n                            <div className=\"collapse multi-collapse\" id=\"addNewEdition\">\r\n                                <button type=\"submit\" className=\"btn btn-dark mr-2\">Salvar</button>\r\n                                <a href=\"https://pt.wikipedia.org/wiki/Expans%C3%B5es_de_Magic:_The_Gathering\" target='_blank'><i className=\"fas fa-question-circle text-primary helpme\" title='Código da edição'></i></a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n                <hr className=\"mb-4\"></hr>\r\n\r\n                <div hidden={hiddenCards}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-3\">\r\n                        <h1>Cards</h1>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-11\">\r\n                            <div className=\"input-group mb-3\">\r\n                                <input type=\"email\" className=\"form-control\" id=\"searchBarTec\" placeholder=\"Qual carta você está procurando?\" />\r\n                                <div className=\"input-group-append\">\r\n                                <div className=\"input-group-text\">\r\n                                    <i className=\"fas fa-search\"></i>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-1 mb-2\">\r\n                            <Link className={idEdition ? 'btn btn-dark' : 'btn btn-dark disabled'} to={`/usercollection/addeditioncards/${idEdition}`}>Adicionar</Link>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                        <div className=\"col-lg-12\">\r\n                            <table id=\"dataTableEditionCards\" className=\"table table-bordered table-responsive-sm table-responsive-md\">\r\n                            <thead>\r\n                            <tr>\r\n                                <th>Nome</th>\r\n                                <th className=\"text-center\">Tipo</th>\r\n                                <th className=\"text-center\">Cor</th>\r\n                                <th className=\"text-center\">Edição</th>\r\n                                <th className=\"text-center\">Raridade</th>\r\n                                <th className=\"text-center\">Editar</th>\r\n                                <th className=\"text-center\">Remover</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {renderRow()}\r\n                            </tbody>\r\n                            </table>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n           </div>\r\n           <ToastContainer />\r\n           <Modals \r\n                title='Exclusão de card'\r\n                body='Deseja realmente excluir este card? Se você fizer isso, este card será removido de todos os usuários'\r\n                nameButton='Excluir'\r\n                deleteItem={deleteItem}\r\n                ref={refModal}\r\n            />\r\n            <Loading\r\n                ref={refLoading}\r\n            />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default EditionCards\r\n","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditEditionCards\\index.js",["312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327"],"import React, { useEffect, useRef, useState, useContext } from 'react';\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {messages} from '../../utils/messages'\r\nimport { useHistory, useParams, Link, Redirect } from 'react-router-dom';\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios';\r\nimport _ from 'lodash'\r\n\r\nconst EditEditionCards = (props) => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [card, setCard] = useState([])\r\n    const [cardName, setCardName] = useState('')\r\n    const [typeId, setTypeId] = useState([])\r\n    const [cardType, setCardType] = useState([])\r\n    const [cardColor, setCardColor] = useState([])\r\n    const [cardEdition, setCardEdition] = useState([])\r\n    const [idCardEdtion, setIdCardEdition] = useState()\r\n    const [cardRarity, setCardRarity] = useState([])\r\n    const token = localStorage.getItem('token')\r\n    const history = useHistory()\r\n    const {id} = props.match.params\r\n    const refCardType = useRef()\r\n    const refCardColor = useRef()\r\n    const refCardEdition = useRef()\r\n    const refCardRarity = useRef()\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    // Busca informações no backend para montar o formulário\r\n    useEffect(() => {\r\n\r\n        axios.get(`${BASE_URL_BACK}/cards`,configAxios)\r\n            .then(resp => {\r\n                setCardName(_.filter(resp.data, {'id': parseInt(id)})[0].card_name)\r\n                setCard(_.filter(resp.data, {'id': parseInt(id)})[0])\r\n                setCardEdition(_.filter(resp.data, {'id': parseInt(id)})[0].edition)\r\n                setIdCardEdition(_.filter(resp.data, {'id': parseInt(id)})[0].edition_id)\r\n\r\n            })\r\n    },[id])\r\n\r\n    // Busca informações no backend para montar o formulário\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardtypes`,configAxios)\r\n            .then(resp => {\r\n                setCardType(resp.data.type)\r\n            })\r\n    },[card.type_id])\r\n\r\n    // Busca informações no backend para montar o formulário\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardcolors`,configAxios)\r\n            .then(resp => {\r\n                setCardColor(resp.data.color)\r\n            })\r\n    }, [card.color_id])\r\n\r\n    // Busca informações no backend para montar o formulário\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardrarities`,configAxios)\r\n            .then(resp => {\r\n                setCardRarity(resp.data.rarity)\r\n            })\r\n            .catch(err => {\r\n                try{\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages(err.response.data.message))\r\n                }catch(err){\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages('Ops'))\r\n                }\r\n            })\r\n    },[card.rarity_id])\r\n\r\n    // Verifica se o usuário está autenticado\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    // Verifica se o usuário é administrador\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/usercollection/cards' />\r\n        )\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    \r\n\r\n    // Renderiza o select do formulário\r\n    const renderCardType = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Tipo da Carta</label>\r\n                <select className=\"form-control\" ref={refCardType} required>\r\n                    {card.type_id > 0 && _.orderBy(cardType,[i => i.id == card.type_id],['desc']).map(type => {\r\n                        return(\r\n                            <option key={type.id} value={type.id}>{type.type}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Renderiza o select do formulário\r\n    const renderCardColor = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Cor da Carta</label>\r\n                <select className=\"form-control\" ref={refCardColor} required>\r\n                    {card.color_id > 0 && _.orderBy(cardColor,[i => i.id == card.color_id],['desc']).map(color => {\r\n                        return(\r\n                            <option key={color.id} value={color.id}>{color.color}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Renderiza o select do formulário\r\n    const renderRarity = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Raridade da Carta</label>\r\n                <select className=\"form-control\" ref={refCardRarity} required>\r\n                    {card.rarity_id > 0 && _.orderBy(cardRarity,[i => i.id == card.rarity_id],['desc']).map(rarity => {\r\n                        return(\r\n                            <option key={rarity.id} value={rarity.id}>{rarity.rarity}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Verifica se existe alguma alteração no formulário para salvar no estado\r\n    const handleChangeName = (evt) => {\r\n        setCardName(evt.target.value)\r\n    }\r\n\r\n\r\n    // Salva os dados cadastrado pelo usuário\r\n    const saveCard = (evt) => {\r\n        evt.preventDefault()\r\n\r\n        const objAddCard = {\r\n            cardName: evt.target.cardName.value.trim(),\r\n            cardColor_id: refCardColor.current.value.trim(),\r\n            cardEdition_id: String(idCardEdtion),\r\n            cardType_id: refCardType.current.value.trim(),\r\n            cardRarity_id: refCardRarity.current.value.trim()\r\n        }\r\n\r\n        axios.put(`${BASE_URL_BACK}/cards/${id}`,objAddCard,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message == 'card updated'){\r\n                    toast.success(messages(resp.data.message))\r\n                    setTimeout(() => {\r\n                        history.push('/usercollection/editioncards')\r\n                    }, 5000);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }\r\n\r\n    return(\r\n        <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                <div className=\"col-12 mt-2 mb-3\">\r\n                    <h1>Edição de Cards</h1>\r\n                </div>\r\n                </div>\r\n\r\n                <form onSubmit={saveCard}>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-4 mb-5\">\r\n                        <div className=\"form-group\">\r\n                        <label>Nome da Carta</label>\r\n                            <input type=\"text\" name='cardName' value={cardName} onChange={handleChangeName} className=\"form-control\" placeholder=\"Digite a quantidade de cartas\" required />\r\n                        </div>\r\n                    </div>\r\n                    {renderCardType()}\r\n                    {renderCardColor()}\r\n                    <div className=\"col-lg-4 mb-5\">\r\n                        <div className=\"form-group\">\r\n                        <label>Edição da Carta</label>\r\n                            <input type=\"text\" name='cardEdition' value={cardEdition} className=\"form-control\" disabled />\r\n                        </div>\r\n                    </div>\r\n                    {renderRarity()}\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <button type=\"submit\" className=\"btn btn-dark mr-2\">Atualizar</button>\r\n                        <Link className=\"btn btn-dark mr-2\" to='/usercollection/editioncards'>Voltar</Link>\r\n                    </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <ToastContainer />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default EditEditionCards","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddEditionCards\\index.js",["328","329","330","331","332","333","334","335"],"import React, { useEffect, useRef, useState, useContext } from 'react';\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {messages} from '../../utils/messages'\r\nimport {useHistory, Link, Redirect} from 'react-router-dom'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios';\r\nimport _ from 'lodash'\r\n\r\nconst AddEditionCards = (props) => {\r\n\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [cardType, setCardType] = useState([])\r\n    const [cardColor, setCardColor] = useState([])\r\n    const [cardEdition, setCardEdition] = useState([])\r\n    const [cardRarity, setCardRarity] = useState([])\r\n    const token = localStorage.getItem('token')\r\n    const refCardType = useRef()\r\n    const refCardColor = useRef()\r\n    const refCardEdition = useRef()\r\n    const refCardRarity = useRef()\r\n    const history = useHistory()\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    // Buscas as informações do banco de dados para montar o formulário\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardtypes`,configAxios)\r\n            .then(resp => {\r\n                setCardType(resp.data.type)\r\n            })\r\n            .catch(err => {\r\n                try{\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages(err.response.data.message))\r\n                }catch(err){\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages('Ops'))\r\n                }\r\n            })\r\n\r\n        axios.get(`${BASE_URL_BACK}/cardcolors`,configAxios)\r\n            .then(resp => {\r\n                setCardColor(resp.data.color)\r\n            })\r\n            .catch(err => {\r\n                try{\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages(err.response.data.message))\r\n                }catch(err){\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages('Ops'))\r\n                }\r\n            })\r\n\r\n        axios.get(`${BASE_URL_BACK}/cardeditions`,configAxios)\r\n            .then(resp => {\r\n                const filterEdition = _.filter(resp.data.edition, {'id': parseInt(props.match.params.id)})\r\n                setCardEdition(filterEdition[0].edition)\r\n            })\r\n            .catch(err => {\r\n                try{\r\n                    toast.info(messages(err.response.data.message))\r\n                    if(err.response.data.message == 'Token invalid'){\r\n                        setTimeout(() => {\r\n                            window.location.href = `${BASE_URL_LOGIN}`\r\n                        }, 5000);\r\n                    }\r\n                }catch(err){\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages('Ops'))\r\n                }\r\n            })\r\n\r\n        axios.get(`${BASE_URL_BACK}/cardrarities`,configAxios)\r\n            .then(resp => {\r\n                setCardRarity(resp.data.rarity)\r\n            })\r\n            .catch(err => {\r\n                try{\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages(err.response.data.message))\r\n                }catch(err){\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages('Ops'))\r\n                }\r\n            })\r\n    },[])\r\n\r\n    // Verifica se o usuário está autenticado\r\n    if(isAuth == false){\r\n        return (\r\n            <Redirect to='/login' />\r\n        )\r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    // Verifica se o usuário é administrador\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/usercollection/cards' />\r\n        )\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    // Renderiza o select do formulário\r\n    const renderCardType = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Tipo da Carta</label>\r\n                <select className=\"form-control\" ref={refCardType} required>\r\n                   {cardType.map(type => {\r\n                        return(\r\n                            <option key={type.id} value={type.id}>{type.type}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Renderiza o select do formulário\r\n    const renderCardColor = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Cor da Carta</label>\r\n                <select className=\"form-control\" ref={refCardColor} required>\r\n                   {cardColor.map(color => {\r\n                        return(\r\n                            <option key={color.id} value={color.id}>{color.color}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Renderiza o select do formulário\r\n    const renderRarity = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Raridade da Carta</label>\r\n                <select className=\"form-control\" ref={refCardRarity} required>\r\n                   {cardRarity.map(rarity => {\r\n                        return(\r\n                            <option key={rarity.id} value={rarity.id}>{rarity.rarity}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Salva os dados que o usuário cadastrou\r\n    const saveCard = (evt) => {\r\n        evt.preventDefault()\r\n\r\n        const objAddCard = {\r\n            cardName: evt.target.cardName.value.trim(),\r\n            cardColor_id: refCardColor.current.value.trim(),\r\n            cardEdition_id: parseInt(props.match.params.id),\r\n            cardType_id: refCardType.current.value.trim(),\r\n            cardRarity_id: refCardRarity.current.value.trim()\r\n        }\r\n\r\n        axios.post(`${BASE_URL_BACK}/cards`,objAddCard,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message == 'card created'){\r\n                    toast.success(messages(resp.data.message))\r\n                    setTimeout(() => {\r\n                        history.push('/usercollection/editioncards')\r\n                    }, 5000);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                try{\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages(err.response.data.message))\r\n                }catch(err){\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages('Ops'))\r\n                }\r\n            })\r\n    }\r\n\r\n    return(\r\n        <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                <div className=\"col-12 mt-2 mb-3\">\r\n                    <h1>Cadastro de Cards</h1>\r\n                </div>\r\n                </div>\r\n\r\n                <form onSubmit={saveCard}>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-4 mb-5\">\r\n                        <div className=\"form-group\">\r\n                        <label>Nome da Carta</label>\r\n                            <input type=\"text\" name='cardName' className=\"form-control\" placeholder=\"Digite o nome da carta\" maxlength=\"200\" required />\r\n                        </div>\r\n                    </div>\r\n                    {renderCardType()}\r\n                    {renderCardColor()}\r\n                    <div className=\"col-lg-4 mb-5\">\r\n                        <div className=\"form-group\">\r\n                        <label>Edição da Carta</label>\r\n                            <input type=\"text\" name='cardEdition' value={cardEdition} className=\"form-control\" disabled />\r\n                        </div>\r\n                    </div>\r\n                    {renderRarity()}\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <button type=\"submit\" className=\"btn btn-dark mr-2\">Cadastrar</button>\r\n                        <Link className=\"btn btn-dark mr-2\" to='/usercollection/editioncards'>Voltar</Link>\r\n                    </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <ToastContainer />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default AddEditionCards","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\Users\\index.js",["336","337","338","339","340","341","342","343","344","345"],"import React, {useEffect, useState, useRef, useContext} from 'react';\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport Modals from '../Modals'\r\nimport {messages} from '../../utils/messages'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport _ from 'lodash'\r\nimport $ from 'jquery'\r\nimport axios from 'axios';\r\n\r\nconst Users = () => {\r\n    const token = localStorage.getItem('token')\r\n    const [data, setData] = useState([])\r\n    const [lineId, setLineId] = useState()\r\n    const refModal = useRef()\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n\r\n    // Busca informações no backend para montar a tela\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/users`,configAxios)\r\n            .then(resp => {\r\n                setData(resp.data)\r\n                $(document).ready(function(){\r\n                    let dataTable = $('#dataTableUser').DataTable({\r\n                        \"retrieve\": true,\r\n                        \"responsive\": false,\r\n                        \"autoWidth\": false,\r\n                        \"lengthChange\": false,\r\n                        \"pageLength\": 10,\r\n                        \"bInfo\" : false,\r\n                        \"language\": {\r\n                            \"paginate\": {\r\n                              \"previous\": \"Anterior\",\r\n                              \"next\": \"Próxima\"\r\n                            },\r\n                            \"emptyTable\": \"Não existe dados para serem carregados\"\r\n                        },\r\n                        buttons: [\r\n                            { \r\n                                extend: 'pdfHtml5',\r\n                                customize: function(doc) {\r\n                                    doc.styles.tableBodyEven.alignment = 'center';\r\n                                    doc.styles.tableBodyOdd.alignment = 'center'; \r\n                                },\r\n                                exportOptions:{\r\n                                    columns: [0,1,2,3,4,5,6,7]\r\n                                }\r\n                            },\r\n                            { \r\n                                extend: 'excel',\r\n                                exportOptions:{\r\n                                    columns: [0,1,2,3,4,5,6,7]\r\n                                }\r\n                            }\r\n                        ]\r\n                    })\r\n\r\n                    $('#searchBarTecUser').on('keyup change', function () {\r\n                        dataTable.search(this.value).draw();\r\n                    })\r\n                    \r\n                })\r\n            })\r\n            .catch(err => {\r\n              try{\r\n                  //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                  toast.info(messages(err.response.data.message))\r\n                  if(err.response.data.message == 'Token invalid'){\r\n                      setTimeout(() => {\r\n                          window.location.href = `${BASE_URL_LOGIN}`\r\n                      }, 5000);\r\n                  }\r\n              }catch(err){\r\n                  //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                  toast.info(messages('Ops'))\r\n              }\r\n            })\r\n    },[])\r\n\r\n    // Abre uma modal quando o usuário vai deletar uma carta\r\n    // A modal verifica se o usuário tem certeza que deseja executar a ação\r\n    const openModal = (id) => {\r\n      setLineId(id)\r\n      refModal.current.openModal()\r\n    }\r\n\r\n    // Deleta a carta do usuário\r\n    const deleteItem = () => {\r\n      const configAxios = {\r\n          headers: {\r\n              Authorization: `Bearer ${token}`\r\n          }\r\n      }\r\n\r\n      axios.get(`${BASE_URL_BACK}/users/`,configAxios)\r\n        .then(resp => {\r\n            const users = resp.data\r\n            const user = _.filter(resp.data, {'id': lineId})\r\n            const email = user[0].email\r\n            axios.delete(`${BASE_URL_BACK}/users/${email}`,configAxios)\r\n                .then(resp => {\r\n                    if(resp.data.message == 'user deleted'){\r\n                        toast.success(messages(resp.data.message))\r\n                        const filtered = _.filter(users, (o) => {\r\n                          return o.email != email\r\n                        })           \r\n                        setData(filtered)\r\n                        refModal.current.openModal()\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                  try{\r\n                      //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                      toast.info(messages(err.response.data.message))\r\n                  }catch(err){\r\n                      //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                      toast.info(messages('Ops'))\r\n                  }\r\n                })\r\n        })\r\n\r\n  }\r\n\r\n    // Verifica se o usuário está autenticado\r\n    if (isAuth == false) {\r\n      window.location.href = `${BASE_URL_LOGIN}`\r\n    }\r\n\r\n    if (isAuth == false) {\r\n        return null\r\n    }\r\n\r\n    // Verifica se o usuário é administrador\r\n    if(isAdmin == false){\r\n        return (\r\n          <Redirect to='/usercollection/cards' />\r\n        )\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    // Renderiza as linhas da tabela\r\n    const renderRow = () => {\r\n        return data.map(line => (\r\n                <tr key={line.id}>\r\n                    <td>{line.name}</td>\r\n                    <td className=\"text-center\">{line.email}</td>\r\n                    <td className=\"text-center\">{line.permission == 0 ? 'Admin' : 'User'}</td>\r\n                    <td className=\"text-center\"><Link className='link_text_pen' to={`/usercollection/edituser/${line.id}`}><i className=\"fas fa-pencil-alt click\"></i></Link></td>\r\n                    <td className=\"text-center\"><i className=\"fas fa-trash-alt click\" onClick={() => openModal(line.id)}></i></td>\r\n                </tr>\r\n            )\r\n        )\r\n    }\r\n\r\n    return (\r\n        <section className=\"content\">\r\n        <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n            <div className=\"col-12 mt-2 mb-3\">\r\n              <h1>Usuários</h1>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"input-group mb-3\">\r\n                <input type=\"email\" id=\"searchBarTecUser\" className=\"form-control\" placeholder=\"Qual usuário você está procurando?\" />\r\n                <div className=\"input-group-append\">\r\n                  <div className=\"input-group-text\">\r\n                    <i className=\"fas fa-search\"></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n              <table id=\"dataTableUser\" className=\"table table-bordered table-responsive-sm table-responsive-md\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Usuário</th>\r\n                    <th className=\"text-center\">E-mail</th>\r\n                    <th className=\"text-center\">Tipo</th>\r\n                    <th className=\"text-center\">Editar</th>\r\n                    <th className=\"text-center\">Excluir</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {renderRow()}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Modals \r\n            title='Exclusão de usuário'\r\n            body='Tem certeza que deseja excluir este usuário? Se excluir, a coleção do usuário também será excluída'\r\n            nameButton='Excluir'\r\n            deleteItem={deleteItem}\r\n            ref={refModal}\r\n        />\r\n      <ToastContainer />\r\n      </section>\r\n    )\r\n}\r\n\r\nexport default Users","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\DashboardAdmin\\index.js",["346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361"],"import React, { useEffect, useRef, useState, useContext } from 'react';\r\nimport Loading from '../Loading'\r\nimport './index.css'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport {messages} from '../../utils/messages'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport axios from 'axios';\r\nimport jwt from 'jsonwebtoken'\r\nimport _ from 'lodash'\r\nimport { Chart } from \"react-google-charts\";\r\nimport $ from 'jquery'\r\nimport moment from 'moment'\r\n\r\nconst DashboardAdmin = () => {\r\n    const token = localStorage.getItem('token')\r\n    const [users, setUsers] = useState(0)\r\n    const [cardEdition, setCardEdition] = useState([])\r\n    const [cardEditionLen, setCardEdtionLen] = useState(0)\r\n    const [card, setCard] = useState(0)\r\n    const [dataChart, setDataChart] = useState([])\r\n    const [threeCollection, setThreeCollection] = useState([])\r\n    const [logs, setLogs] = useState([])\r\n    const refLoading = useRef()\r\n    let {isAdmin} = useContext(AuthContext)\r\n    let {isAuth} = useContext(AuthContext)\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    // Busca no backend os dados de logs para montar a tabela de logs\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/logs`,configAxios)\r\n            .then(resp => {\r\n                setLogs(resp.data.logs)\r\n                $(document).ready(function(){\r\n                    let dataTable = $('#dataTable').DataTable({\r\n                        \"retrieve\": true,\r\n                        \"order\": [[ 0, \"desc\" ]],\r\n                        \"responsive\": true,\r\n                        \"autoWidth\": false,\r\n                        \"lengthChange\": false,\r\n                        \"pageLength\": 10,\r\n                        \"bInfo\" : false,\r\n                        \"language\": {\r\n                            \"paginate\": {\r\n                              \"previous\": \"Anterior\",\r\n                              \"next\": \"Próxima\"\r\n                            },\r\n                            \"emptyTable\": \"Não existe dados para serem carregados\"\r\n                        }\r\n                    })\r\n    \r\n                    $('#searchBarTec').on('keyup change', function () {\r\n                        dataTable.search(this.value).draw();\r\n                    })\r\n\r\n                    refLoading.current.executeLoading()\r\n                })\r\n            })\r\n    }, [])\r\n\r\n    // Busca informações no backend para montar os cards de edição\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardeditions`,configAxios)\r\n            .then(resp => {\r\n                setCardEdtionLen(resp.data.edition.length)\r\n                setCardEdition(_.map(resp.data.edition, i => _.pick(i, 'id', 'edition')))\r\n            })\r\n            .catch(err => {\r\n                try{\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages(err.response.data.message))\r\n                    if(err.response.data.message == 'Token invalid'){\r\n                        setTimeout(() => {\r\n                            window.location.href = `${BASE_URL_LOGIN}`\r\n                        }, 5000);\r\n                    }\r\n                }catch(err){\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages('Ops'))\r\n                }\r\n            })\r\n    },[])\r\n\r\n    // Busca informação no backend para montar o gráfico de Cartas por edição\r\n    useEffect(() => {\r\n        const arrDataChart = []\r\n        axios.get(`${BASE_URL_BACK}/cards`,configAxios)\r\n        .then(resp => {\r\n            _.map(_.groupBy(resp.data, 'edition_id'), (card, index) => {\r\n                if(_.find(cardEdition, {'id': parseInt(index)}) != undefined){\r\n                    _.find(cardEdition, {'id': parseInt(index)})['qtd'] = card.length\r\n                }\r\n            })\r\n            _.map(cardEdition, (card) => {\r\n                if(_.has(card, 'qtd') == false){\r\n                    card['qtd'] = 0\r\n                }\r\n            })\r\n\r\n            cardEdition.map(card => {\r\n                arrDataChart.push([card.edition, card.qtd])\r\n            })\r\n\r\n            setDataChart(arrDataChart)\r\n        })\r\n    },[cardEdition])\r\n\r\n\r\n    // Busca informações no backend para montar o card de usuário\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/users`,configAxios)\r\n            .then(resp => {\r\n                setUsers(resp.data.length)\r\n            })\r\n    },[])\r\n\r\n    // Busca informações no backend para montar o card do número total de cartas\r\n    useEffect(() => {\r\n        if(!isAdmin){\r\n            return null\r\n        }else{\r\n            axios.get(`${BASE_URL_BACK}/cards`,configAxios)\r\n            .then(resp => {\r\n                setCard(resp.data.length)\r\n            })\r\n        }\r\n    },[])\r\n\r\n    // Busca informações no backend para montar o gráfico de Top 3 maiores coleções\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/collections`,configAxios)\r\n            .then(resp => {\r\n                const arrObj = _.map(_.groupBy(resp.data, 'user_name'), (n) => {\r\n                    const obj = _.pick(n[0], 'user_name')\r\n                    const sum = _.sumBy(n, (a) => {return a.quantity})\r\n                    obj['qtd'] = sum\r\n                    return obj\r\n                })\r\n\r\n                const arrOrderBy = _.orderBy(arrObj, ['qtd'], ['desc'])\r\n\r\n                const arrModify = []\r\n\r\n                for (let index = 0; index < 3; index++) {\r\n                    arrModify.push(_.valuesIn(arrOrderBy[index]))\r\n                }\r\n\r\n                setThreeCollection(arrModify)\r\n\r\n            })\r\n    },[])\r\n\r\n    // Renderiza as linhas da tabela de logs\r\n    const renderRow = () => {\r\n        return logs.map(line => (\r\n                <tr key={line.id}>\r\n                    <td className=\"text-center\">{line.id}</td>\r\n                    <td className=\"text-center\">{line.user}</td>\r\n                    <td className=\"text-center\">{line.logType}</td>\r\n                    <td className=\"text-center\">{line.lineTableId}</td>\r\n                    <td className=\"text-center\">{line.tableName}</td>\r\n                    <td className=\"text-center\"><Link className='link_text_pen' to={`logview/${line.id}`}><i className=\"fas fa-eye click\"></i></Link></td>\r\n                    <td className=\"text-center\">{moment(line.dateTime).format('DD/MM/YYYY HH:mm:ss')}</td>\r\n                </tr>\r\n            )\r\n        )\r\n    }\r\n    \r\n    // Verifica se o usuário está autenticado\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }\r\n\r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n    \r\n    // Verifica se o usuário é administrador\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/usercollection/cards' />\r\n        )\r\n    }else{\r\n        \r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return(\r\n        <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                <div className=\"col-12 mt-2\">\r\n                    <h1>Dashboard Admin</h1>\r\n                </div>\r\n                </div>\r\n\r\n                <div className=\"row d-flex justify-content-center\">\r\n                    <div className=\"col-lg-3 col-12\">\r\n                        <div className=\"info-box mb-3 bg-primary\">\r\n                        <div className=\"info-box-content\">\r\n                            <span className=\"info-box-number\"><h1 className=\"text-white text-bold\">{users}</h1></span>\r\n                            <span className=\"info-box-text\"><h4 className=\"text-white text-bold\">{users > 1 ? 'Usuários' : 'Usuário'}</h4></span>\r\n                        </div>\r\n                            <span className=\"info-box-icon\"><i className=\"fas fa-users iconDashboardAdmin mr-3\"></i></span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-3 col-12\">\r\n                        <div className=\"info-box mb-3 bg-success\">\r\n                        <div className=\"info-box-content\">\r\n                            <span className=\"info-box-number\"><h1 className=\"text-white text-bold\">{cardEditionLen}</h1></span>\r\n                            <span className=\"info-box-text\"><h4 className=\"text-white text-bold\">{cardEditionLen > 1 ? 'Edições' : 'Edição'}</h4></span>\r\n                        </div>\r\n                            <span className=\"info-box-icon\"><i className=\"fas fa-wallet iconDashboardAdmin mr-3\"></i></span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-3 col-12\">\r\n                        <div className=\"info-box mb-3 bg-warning\">\r\n                        <div className=\"info-box-content\">\r\n                            <span className=\"info-box-number\"><h1 className=\"text-white text-bold\">{card}</h1></span>\r\n                            <span className=\"info-box-text\"><h4 className=\"text-white text-bold\">{card > 1 ? 'Cartas' : 'Carta'}</h4></span>\r\n                        </div>\r\n                            <span className=\"info-box-icon\"><i className=\"fab fa-wizards-of-the-coast text-white iconDashboardAdmin mr-3\"></i></span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-6\">\r\n                        <div className=\"card card-danger\">\r\n                        <div className=\"card-header\">\r\n                            <h3 className=\"card-title\">Cartas por edição</h3>\r\n                            <div className=\"card-tools\">\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"chart\">\r\n                                <div>\r\n                                    <Chart\r\n                                    chartType=\"PieChart\"\r\n                                    loader={<div>Carregando o gráfico</div>}\r\n                                    data={[\r\n                                        ['Card Type', 'Number'],\r\n                                        ...dataChart\r\n                                    ]}\r\n                                    options={{\r\n                                        chartArea: { left: 0, top: 0, right: 0, bottom: 10 },\r\n                                        legend: {position: 'right', textStyle: {fontSize: 20}}, \r\n                                        is3D: true,  \r\n                                        legend: {\r\n                                            textStyle: {fontSize: 20},\r\n                                            scrollArrows: { inactiveColor: \"black\", activeColor: \"black\" },\r\n                                            pagingTextStyle: { color: 'black'},\r\n                                        }                                     \r\n                                    }}\r\n                                    rootProps={{ 'data-testid': '1' }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-6\">\r\n                    <div className=\"card card-success\">\r\n                    <div className=\"card-header\">\r\n                        <h3 className=\"card-title\">Top 3 maiores coleções</h3>\r\n                        <div className=\"card-tools\">\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <Chart\r\n                            chartType=\"ColumnChart\"\r\n                            loader={<div>Carregando o gráfico</div>}\r\n                            data={[\r\n                                ['Pessoa', 'Cards'],\r\n                                ...threeCollection                            \r\n                            ]}\r\n                            options={{\r\n                                legend: {\r\n                                    position: 'none',\r\n                                },\r\n                                colors: ['black'],\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <div className=\"input-group mb-3\">\r\n                            <input type=\"email\" className=\"form-control\" id=\"searchBarTec\" placeholder=\"Qual log você está procurando?\" />\r\n                            <div className=\"input-group-append\">\r\n                                <div className=\"input-group-text\">\r\n                                    <i className=\"fas fa-search\"></i>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <table id=\"dataTable\" className=\"table table-bordered table-responsive-sm table-responsive-md\">\r\n                                <thead className=\"text-center\">\r\n                                    <tr>\r\n                                        <th>#</th>                                        \r\n                                        <th>Usuário</th>                                        \r\n                                        <th>Ação</th>                                        \r\n                                        <th>Linha da tabela</th>                                        \r\n                                        <th>Nome da tabela</th>\r\n                                        <th>Último valor</th>\r\n                                        <th>Data</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {renderRow()}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n                <Loading\r\n                ref={refLoading}\r\n                />   \r\n            <ToastContainer />         \r\n        </section>\r\n    )\r\n}\r\n\r\nexport default DashboardAdmin","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditUser\\index.js",["362","363","364","365","366","367","368","369","370","371","372","373"],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\Dashboard\\index.js",["374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424"],"import React, { useEffect, useRef, useState, useContext } from 'react';\r\nimport Loading from '../Loading'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport './index.css'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {messages} from '../../utils/messages'\r\nimport {colors} from '../../utils/colors'\r\nimport SwampImage from '../../img/pantano_branco.svg'\r\nimport PlainsImage from '../../img/planicie_branco.svg'\r\nimport MountainImage from '../../img/montanha_branco.svg'\r\nimport IslandImage from '../../img/ilha_branco.svg'\r\nimport FlorestImage from '../../img/floresta_branco.svg'\r\nimport MultiColorImage from '../../img/multicolor_branco.svg'\r\nimport ArtifactImage from '../../img/artefato_branco.svg'\r\nimport GenereciImage from '../../img/generic_image.svg'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport axios from 'axios';\r\nimport jwt from 'jsonwebtoken'\r\nimport _ from 'lodash'\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nconst Dashboard = () => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    const token = localStorage.getItem('token')\r\n    const {id} = jwt.decode(token) || 'error'    \r\n    const [cardRarity, setCardRarity] = useState([])\r\n    const [cardCollection, setCardCollection] = useState([])\r\n    const [cardQuality, setCardQuality] = useState([])\r\n    const [cardColors, setCardColors] = useState([])\r\n    const [cardTypes, setCardTypes] = useState([])\r\n    const [chartPercerntType, setChartPercentType] = useState([])\r\n    const [chartRarityVsQuality, setChartRarityVsQuality] = useState([])\r\n    const [chartQualityVsQuantity, setQualityVsQuantity] = useState([])\r\n    const [chartPercentColor, setChartPercentColor] = useState([])\r\n    const refLoading = useRef()\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n    \r\n    // Carrega as informações do backend para montar a dashaboard\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardrarities/`,configAxios)\r\n        .then(resp => {\r\n                setCardRarity(resp.data.rarity)\r\n            })\r\n\r\n        axios.get(`${BASE_URL_BACK}/cardqualities/`,configAxios)\r\n        .then(resp => {\r\n                setCardQuality(resp.data.quality)\r\n            })\r\n\r\n        axios.get(`${BASE_URL_BACK}/cardcolors/`,configAxios)\r\n        .then(resp => {\r\n                setCardColors(resp.data.color)\r\n            })\r\n\r\n        axios.get(`${BASE_URL_BACK}/cardtypes/`,configAxios)\r\n        .then(resp => {\r\n                setCardTypes(resp.data.type)\r\n            })\r\n        \r\n        axios.get(`${BASE_URL_BACK}/collections/${id}`,configAxios)\r\n        .then(resp => {\r\n                setCardCollection(resp.data)\r\n            })\r\n        .catch(err => {\r\n            try{\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n                if(err.response.data.message == 'Token invalid'){\r\n                    setTimeout(() => {\r\n                        window.location.href = `${BASE_URL_LOGIN}`\r\n                    }, 5000);\r\n                }\r\n            }catch(err){\r\n                try{\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages(err.response.data.message))\r\n                }catch(err){\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages('Ops'))\r\n                }\r\n            }\r\n        })\r\n    },[])\r\n\r\n    // Organiza as informações para montar o gráfico de Porcentagem por tipo de carta\r\n    useEffect(() => {\r\n        const arrTypes = []\r\n        _.map(cardTypes, data => {\r\n            const count = _.reduce(_.map(_.filter(cardCollection, {'card_type': data.type}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0\r\n            arrTypes.push([data.type, count])\r\n        })\r\n\r\n        setChartPercentType(_.sortBy(arrTypes, data => {\r\n            return -data[1]\r\n        }))\r\n    }, [cardCollection, cardTypes])\r\n\r\n    // Organiza as informações para montar o gráfico de Porcentagem por cor\r\n    useEffect(() => {\r\n        const arrColors = []\r\n        const colorPicker = []\r\n        _.map(cardColors, data => {\r\n            const count = _.reduce(_.map(_.filter(cardCollection, {'card_color': data.color}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0\r\n            arrColors.push([data.color, count])\r\n        })\r\n        setChartPercentColor(_.sortBy(arrColors, data => {\r\n            return -data[1]\r\n        }))\r\n    }, [cardCollection, cardColors])\r\n\r\n    // Organiza as informações para montar o gráfico de Qualidade vs Quantidade\r\n    useEffect(() => {\r\n        const arrQuality = []\r\n        _.map(cardQuality, data => {\r\n            const count = _.reduce(_.map(_.filter(cardCollection, {'quality': data.quality}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0\r\n            arrQuality.push([data.quality, count])\r\n            \r\n        })\r\n            setQualityVsQuantity(_.sortBy(arrQuality, data => {\r\n                return -data[1]\r\n            }))\r\n\r\n    }, [cardCollection, cardQuality])\r\n\r\n    // Organiza as informações para montar o gráfico de Raridade vs Qualidade\r\n    useEffect(() => {\r\n        const arrRarity = []\r\n        _.map(cardRarity, data => {\r\n            const count = _.reduce(_.map(_.filter(cardCollection, {'rarity': data.rarity}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0\r\n            arrRarity.push([data.rarity, count])       \r\n        })\r\n\r\n        setChartRarityVsQuality(_.sortBy(arrRarity, data => {\r\n            return -data[1]\r\n        }))\r\n\r\n        refLoading.current.executeLoading()\r\n    }, [cardCollection, cardRarity])\r\n\r\n    // Verifica se o usuário está autenticado\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    // Modifica as cores dos gráficos\r\n    const modifyColors = (arr) => {\r\n        const arrColorsModify = []\r\n        _.map(arr, data => {\r\n            arrColorsModify.push(colors(data[0]))\r\n        })\r\n        return arrColorsModify\r\n    }\r\n\r\n    // Monta os cards com as suas respectivas cores\r\n    const renderColors = () => {\r\n        return chartPercentColor.map((cardColor, index) => (\r\n            <div className=\"col-lg-3 col-12\" key={index}>\r\n                    <div className=\"info-box mb-3\" style={{background: colors(cardColor[0])}}>\r\n                    <div className=\"info-box-content\">\r\n                        <span className=\"info-box-number\"><h1 className=\"text-white text-bold\">{cardColor[1]}</h1></span>\r\n                        <span className=\"info-box-text\"><h4 className=\"text-white text-bold\">{cardColor[1] > 1 ? 'Cartas' : 'Carta'}</h4></span>\r\n                    </div>\r\n                        {(cardColor[0] == 'Vermelho') || (cardColor[0] == 'Vermelha') || (cardColor[0] == 'Red') \r\n                            ?\r\n                            <span className=\"info-box-icon\"><img src={MountainImage} alt=\"\"/></span>\r\n                            :\r\n                            ''\r\n                        }\r\n                        {(cardColor[0] == 'Preto') || (cardColor[0] == 'Preta') || (cardColor[0] == 'Black') \r\n                            ?\r\n                            <span className=\"info-box-icon\"><img src={SwampImage} alt=\"\"/></span>\r\n                            :\r\n                            ''\r\n                        }\r\n                        {(cardColor[0] == 'Branco') || (cardColor[0] == 'Branca') || (cardColor[0] == 'Amarelo') || (cardColor[0] == 'Amarela') || (cardColor[0] == 'Yellow')\r\n                            ?\r\n                            <span className=\"info-box-icon\"><img src={PlainsImage} alt=\"\"/></span>\r\n                            :\r\n                            ''\r\n                        }\r\n                        {(cardColor[0] == 'Verde') || (cardColor[0] == 'Green')\r\n                            ?\r\n                            <span className=\"info-box-icon\"><img src={FlorestImage} alt=\"\"/></span>\r\n                            :\r\n                            ''\r\n                        }\r\n                        {(cardColor[0] == 'Blue') || (cardColor[0] == 'Azul')\r\n                            ?\r\n                            <span className=\"info-box-icon\"><img src={IslandImage} alt=\"\"/></span>\r\n                            :\r\n                            ''\r\n                        }\r\n                        {(cardColor[0] == 'Incolor') || (cardColor[0] == 'Incolores') || (cardColor[0] == 'Artefato')\r\n                            ?\r\n                            <span className=\"info-box-icon\"><img src={ArtifactImage} alt=\"\"/></span>\r\n                            :\r\n                            ''\r\n                        }\r\n                        {(cardColor[0] == 'Multicolor') || (cardColor[0] == 'Muticolores') || (cardColor[0] == 'Muticoloridas') || (cardColor[0] == 'Multicolorido')\r\n                            ?\r\n                            <span className=\"info-box-icon\"><img src={MultiColorImage} alt=\"\"/></span>\r\n                            :\r\n                            ''\r\n                        }\r\n                        {\r\n                            (cardColor[0] != 'Vermelho')    && \r\n                            (cardColor[0] != 'Vermelha')    && \r\n                            (cardColor[0] != 'Red')         &&\r\n                            (cardColor[0] != 'Preto')       && \r\n                            (cardColor[0] != 'Preta')       && \r\n                            (cardColor[0] != 'Black')       &&\r\n                            (cardColor[0] != 'Branco')      && \r\n                            (cardColor[0] != 'Branca')      && \r\n                            (cardColor[0] != 'Amarelo')     && \r\n                            (cardColor[0] != 'Amarela')     && \r\n                            (cardColor[0] != 'Yellow')      &&\r\n                            (cardColor[0] != 'Verde')       && \r\n                            (cardColor[0] != 'Green')       &&\r\n                            (cardColor[0] != 'Blue')        && \r\n                            (cardColor[0] != 'Azul')        &&\r\n                            (cardColor[0] != 'Incolor')     && \r\n                            (cardColor[0] != 'Incolores')   && \r\n                            (cardColor[0] != 'Artefato')    &&\r\n                            (cardColor[0] != 'Multicolor')  && \r\n                            (cardColor[0] != 'Muticolores') && \r\n                            (cardColor[0] != 'Muticoloridas') &&\r\n                            (cardColor[0] != 'Multicolorido')\r\n                            ?\r\n                            <span className=\"info-box-icon\"><img src={GenereciImage} alt=\"\"/></span>\r\n                            :\r\n                            ''\r\n                        }\r\n\r\n                    </div>\r\n            </div>\r\n        ))\r\n    }\r\n\r\n    return(\r\n        <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                <div className=\"col-12 mt-2\">\r\n                    <h1>Dashboard</h1>\r\n                </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                {renderColors()}\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-6\">\r\n                        <div className=\"card card-danger\">\r\n                        <div className=\"card-header\">\r\n                            <h3 className=\"card-title\">Porcentagem por tipo de cartas</h3>\r\n                            <div className=\"card-tools\">\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"chart\">\r\n                                <div>\r\n                                    <Chart\r\n                                    chartType=\"PieChart\"\r\n                                    loader={<div>Carregando o gráfico</div>}\r\n                                    data={[\r\n                                        ['Card Type', 'Number'],\r\n                                        ...chartPercerntType\r\n                                    ]}\r\n                                    options={{\r\n                                        chartArea: { left: 0, top: 0, right: 0, bottom: 10 },\r\n                                        legend: {position: 'right', textStyle: {fontSize: 20}}, \r\n                                        is3D: true,  \r\n                                        colors: modifyColors(chartPercentColor)                       \r\n                                    }}\r\n                                    rootProps={{ 'data-testid': '1' }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-6\">\r\n                        <div className=\"card card-danger\">\r\n                        <div className=\"card-header\">\r\n                            <h3 className=\"card-title\">Porcentagem de cartas por cor</h3>\r\n                            <div className=\"card-tools\">\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"chart\">\r\n                                <div>\r\n                                    <Chart\r\n                                    chartType=\"PieChart\"\r\n                                    loader={<div>Carregando o gráfico</div>}\r\n                                    data={[\r\n                                        ['Card Type', 'Number'],\r\n                                        ...chartPercentColor\r\n                                    ]}\r\n                                    options={{\r\n                                        chartArea: { left: 0, top: 0, right: 0, bottom: 10 },\r\n                                        legend: {\r\n                                            position: 'right', \r\n                                            textStyle: {fontSize: 20},\r\n                                            scrollArrows: { inactiveColor: \"black\", activeColor: \"black\" },\r\n                                            pagingTextStyle: { color: 'black'},\r\n                                        },\r\n                                        is3D: true,\r\n                                        colors: modifyColors(chartPercentColor)\r\n                                    }}\r\n                                    rootProps={{ 'data-testid': '2' }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n                <div className=\"row\">\r\n                <div className=\"col-lg-6\">\r\n                    <div className=\"card card-success\">\r\n                    <div className=\"card-header\">\r\n                        <h3 className=\"card-title\">Qualidade vs Quantidade</h3>\r\n                        <div className=\"card-tools\">\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <Chart\r\n                            chartType=\"ColumnChart\"\r\n                            loader={<div>Carregando o gráfico</div>}\r\n                            data={[\r\n                            ['Qualidade', 'Quantidade'],\r\n                            ...chartQualityVsQuantity\r\n                            ]}\r\n                            options={{\r\n                                legend: {\r\n                                    position: 'none',\r\n                                },\r\n                                colors: ['black'],\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-6\">\r\n                    <div className=\"card card-success\">\r\n                    <div className=\"card-header\">\r\n                        <h3 className=\"card-title\">Raridade vs Quantidade</h3>\r\n\r\n                        <div className=\"card-tools\">\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <Chart\r\n                            chartType=\"ColumnChart\"\r\n                            loader={<div>Carregando o gráfico</div>}\r\n                            data={[\r\n                            ['Raridade', 'Quantidade'],\r\n                            ...chartRarityVsQuality\r\n                            ]}\r\n                            options={{\r\n                                legend: {\r\n                                    position: 'none',\r\n                                },\r\n                                colors: ['black'],\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <Loading\r\n                    ref={refLoading}\r\n                />\r\n                <ToastContainer />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Dashboard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\Loading\\index.js",["425","426","427"],"import React, { forwardRef, useImperativeHandle, useState } from 'react';\r\nimport './index.css'\r\n\r\nconst Loading = forwardRef((props, ref) => {\r\n\r\n    const [showLoading, setShowLoading] = useState(true)\r\n\r\n    // Verifica se o loading está ativo e desativa\r\n    useImperativeHandle(\r\n        ref,\r\n        () => ({\r\n            executeLoading(){\r\n                {showLoading == false ? setShowLoading(true) : setShowLoading(false)}\r\n                \r\n            }\r\n        })\r\n    )\r\n\r\n    if(showLoading == false){\r\n        return null\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n            <div className=\"d-flex justify-content-center loading\">\r\n                <div className=\"spinner-grow text-dark\" role=\"status\">\r\n                </div>\r\n                <div className=\"spinner-grow text-dark\" role=\"status\">\r\n                </div>\r\n                <div className=\"spinner-grow text-dark\" role=\"status\">\r\n                </div>\r\n                <div className=\"spinner-grow text-dark\" role=\"status\">\r\n                </div>\r\n                <div className=\"spinner-grow text-dark\" role=\"status\">\r\n                </div>\r\n                <div className=\"spinner-grow text-dark\" role=\"status\">\r\n                </div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-center loading-text\">\r\n                <h5>{props.title ? props.title : 'Carregando...'}</h5>\r\n            </div>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default Loading","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\Modals\\index.js",["428","429"],"import React, { useState, useImperativeHandle, forwardRef } from 'react';\r\nimport {Modal, Button} from 'react-bootstrap'\r\n\r\nconst Modals = forwardRef((props, ref) => {\r\n\r\n    const [showModal, setShow] = useState(false)\r\n    const handleClose = () => setShow(false)\r\n    \r\n\r\n    // Verifica se a modal está aberta e fecha a modal\r\n    useImperativeHandle(\r\n        ref,\r\n        () => ({\r\n            openModal () {\r\n                {showModal == true ? setShow(false) : setShow(true)}\r\n            }\r\n        })\r\n    )\r\n\r\n    return(\r\n        <>\r\n            \r\n            <Modal show={showModal} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>{props.title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>{props.body}</Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"btn btn-dark\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"btn btn-dark\" onClick={props.deleteItem}>\r\n                    {props.nameButton}\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default Modals","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\ConfigUser\\index.js",["430","431","432","433","434","435","436","437"],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\ColorsCard\\index.js",["438","439","440","441","442","443","444","445","446"],"import React, { useEffect, useContext, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../../utils/auth'\r\nimport { BASE_URL_BACK, BASE_URL_LOGIN } from '../../utils/variaveisAmbiente'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport {messages} from '../../utils/messages'\r\nimport Loading from '../Loading'\r\nimport Modals from '../Modals'\r\nimport $ from 'jquery'\r\n\r\nconst ColorsCard = () => {\r\n    const [data, setData] = useState([])\r\n    const [lineId, setLineId] = useState()\r\n    const token = localStorage.getItem('token')\r\n    const refLoading = useRef()\r\n    const refModal = useRef()\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    // Busca informações no backend para montar a tela\r\n    useEffect(() => {\r\n        if(!isAdmin){\r\n            return null\r\n        }\r\n        axios.get(`${BASE_URL_BACK}/cardcolors`, configAxios)\r\n        .then(resp => {\r\n            setData(resp.data.color)\r\n            $(document).ready(function(){\r\n                let dataTable = $('#dataTable').DataTable({\r\n                    \"retrieve\": true,\r\n                    \"responsive\": true,\r\n                    \"autoWidth\": false,\r\n                    \"lengthChange\": false,\r\n                    \"pageLength\": 10,\r\n                    \"bInfo\" : false,\r\n                    \"language\": {\r\n                        \"paginate\": {\r\n                          \"previous\": \"Anterior\",\r\n                          \"next\": \"Próxima\"\r\n                        },\r\n                        \"emptyTable\": \"Não existe dados para serem carregados\"\r\n                    }\r\n                })\r\n\r\n                $('#searchBarTec').on('keyup change', function () {\r\n                    dataTable.search(this.value).draw();\r\n                })\r\n                \r\n                $(\".dataTable\").on('click','.deleteMe', function (evt) { \r\n                    const hasClass = $('.dataTable').hasClass('collapsed')                            \r\n                    if(hasClass){\r\n                        const tr_odd = evt.target.offsetParent.parentElement.previousElementSibling\r\n                        tr_odd.classList.remove('parent')\r\n                        tr_odd.classList.add('odd')\r\n                        const line = evt.target.offsetParent\r\n                        line.style.display = 'none'\r\n                    }\r\n                    \r\n                    openModal(evt.target.dataset.id)\r\n                });\r\n\r\n                refLoading.current.executeLoading()\r\n            })\r\n        })\r\n        .catch(err => {\r\n            try{\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n                if(err.response.data.message == 'Token invalid'){\r\n                    setTimeout(() => {\r\n                        window.location.href = `${BASE_URL_LOGIN}`\r\n                    }, 5000);\r\n                }\r\n            }catch(err){\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages('Ops'))\r\n            }\r\n        })\r\n    },[isAdmin])\r\n\r\n    // Renderiza as linhas da tabela\r\n    const renderRow = () => {\r\n        return data.map(line => (\r\n                <tr key={line.id}>\r\n                    <td>{line.color}</td>\r\n                    <td className=\"text-center\"><Link className='link_text_pen' to={`editcolorscard/${line.id}`}><i className=\"fas fa-pencil-alt click\"></i></Link></td>\r\n                    <td className=\"text-center\"><i className=\"fas fa-trash-alt click deleteMe\" data-id={line.id}></i></td>\r\n                </tr>\r\n            )\r\n        )\r\n    }\r\n\r\n    // Abre uma modal quando o usuário vai deletar uma carta\r\n    // A modal verifica se o usuário tem certeza que deseja executar a ação\r\n    const openModal = (id) => {\r\n        setLineId(id)\r\n        refModal.current.openModal()\r\n    }\r\n\r\n    // Deleta a carta do usuário\r\n    const deleteItem = () => {\r\n        axios.delete(`${BASE_URL_BACK}/cardcolors/${lineId}`,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message == 'color deleted'){\r\n                    toast.success(messages(resp.data.message))\r\n                    const filtered = data.filter(color => {\r\n                        return color.id != lineId\r\n                    })            \r\n                    setData(filtered)\r\n                    refModal.current.openModal()\r\n                }\r\n            })\r\n            .catch(err => {\r\n                try{\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages(err.response.data.message))\r\n                }catch(err){\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages('Ops'))\r\n                }\r\n            })\r\n    }\r\n\r\n    // Verifica se o usuário está autenticado\r\n    if (isAuth == false) {\r\n        window.location.href = `${BASE_URL_LOGIN}`\r\n    }\r\n\r\n    if (isAuth == false) {\r\n        return null\r\n    }\r\n\r\n    // Verifica se o usuário é administrador\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/usercollection/cards' />\r\n        )\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-2\">\r\n                            <h1>Cores das cartas</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-9\">\r\n                            <div className=\"input-group mb-3\">\r\n                                <input type=\"email\" className=\"form-control\" id=\"searchBarTec\" placeholder=\"Qual cor você está procurando?\" />\r\n                                <div className=\"input-group-append\">\r\n                                    <div className=\"input-group-text\">\r\n                                        <i className=\"fas fa-search\"></i>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-3 mb-2 mr-0\">\r\n                            <button type=\"button\" className=\"btn btn-dark mr-1\"><Link className='link_text' to='/usercollection/addcolorscard'>Adicionar</Link></button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <table id=\"dataTable\" className=\"table table-bordered table-responsive-sm table-responsive-md\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Cor</th>\r\n                                        <th className=\"text-center\">Editar</th>\r\n                                        <th className=\"text-center\">Remover</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {renderRow()}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <ToastContainer />\r\n            <Modals\r\n                title='Exclusão de cor'\r\n                body='Deseja realmente excluir esta cor? Se excluir, todo os cards desta cor serão removidos automaticamente'\r\n                nameButton='Excluir'\r\n                deleteItem={deleteItem}\r\n                ref={refModal}\r\n            />\r\n            <Loading\r\n                ref={refLoading}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ColorsCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddColorsCard\\index.js",["447","448","449","450"],"import React, { useState, useContext } from 'react';\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios'\r\nimport {messages} from '../../utils/messages'\r\n\r\nconst AddColorsCard = () => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [color, setColor] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const history = useHistory()\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    // Verifica se existe alguma alteração no formulário para salvar no estado\r\n    const changeColor = evt => {\r\n        setColor(evt.target.value)\r\n    }\r\n\r\n    // Salva os dados cadastrado pelo usuário\r\n    const saveColor = evt => {\r\n        evt.preventDefault()\r\n\r\n        const objColorCard ={\r\n            color\r\n        }\r\n\r\n        axios.post(`${BASE_URL_BACK}/cardcolors`,objColorCard,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/usercollection/colors')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                try{\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages(err.response.data.message))\r\n                }catch(err){\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages('Ops'))\r\n                }\r\n            })\r\n        \r\n    }\r\n\r\n    // Verifica se o usuário está autenticado\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    // Verifica se o usuário é administrador\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/usercollection/cards' />\r\n        )\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-3\">\r\n                            <h1>Cadastrar Cores</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <form onSubmit={saveColor}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Nome da cor</label>\r\n                                    <input type=\"text\" className=\"form-control\" value={color} placeholder=\"Digite a cor\" onChange={changeColor} maxLength=\"45\" required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <button type=\"submit\" className=\"btn btn-dark mr-2\">Cadastrar</button>\r\n                                <Link className=\"btn btn-dark mr-2\" to='/usercollection/colors'>Voltar</Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <ToastContainer />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddColorsCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditColorsCard\\index.js",["451","452","453","454","455"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios'\r\nimport {messages} from '../../utils/messages'\r\nimport _ from 'lodash'\r\n\r\nconst EditColorsCard = (props) => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [color, setColor] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const history = useHistory()\r\n    const {id} = props.match.params\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    // Busca informações no backend para montar o formulário\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardcolors`,configAxios)\r\n            .then(resp => {\r\n                const colorFilter = _.filter(resp.data.color, {'id': parseInt(id)})\r\n                setColor(colorFilter[0].color)\r\n            })\r\n    },[id])\r\n\r\n    // Verifica se existe alguma alteração no formulário para salvar no estado\r\n    const changeColor = evt => {\r\n        setColor(evt.target.value)\r\n    }\r\n\r\n    // Salva os dados cadastrado pelo usuário\r\n    const saveColor = evt => {\r\n        evt.preventDefault()\r\n\r\n        const objColorCard ={\r\n            color\r\n        }\r\n\r\n        axios.put(`${BASE_URL_BACK}/cardcolors/${id}`,objColorCard,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/usercollection/colors')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                try{\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages(err.response.data.message))\r\n                }catch(err){\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages('Ops'))\r\n                }\r\n            })\r\n        \r\n    }\r\n\r\n    // Verifica se o usuário está autenticado\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    // Verifica se o usuário é administrador\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/usercollection/cards' />\r\n        )\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-3\">\r\n                            <h1>Editar cor</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <form onSubmit={saveColor}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Cor</label>\r\n                                    <input type=\"text\" className=\"form-control\" value={color} placeholder=\"Digite a cor\" onChange={changeColor} required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <button type=\"submit\" className=\"btn btn-dark mr-2\">Alterar</button>\r\n                                <Link className=\"btn btn-dark mr-2\" to='/usercollection/colors'>Voltar</Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <ToastContainer />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditColorsCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\LanguageCard\\index.js",["456","457","458","459","460","461","462","463","464"],"import React, { useEffect, useContext, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../../utils/auth'\r\nimport { BASE_URL_BACK, BASE_URL_LOGIN } from '../../utils/variaveisAmbiente'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport {messages} from '../../utils/messages'\r\nimport Loading from '../Loading'\r\nimport Modals from '../Modals'\r\nimport $ from 'jquery'\r\n\r\nconst LanguageCard = () => {\r\n    const [data, setData] = useState([])\r\n    const [lineId, setLineId] = useState()\r\n    const token = localStorage.getItem('token')\r\n    const refLoading = useRef()\r\n    const refModal = useRef()\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    // Busca informações no backend para montar a tela\r\n    useEffect(() => {\r\n        if(!isAdmin){\r\n            return null\r\n        }\r\n        axios.get(`${BASE_URL_BACK}/cardlanguages`, configAxios)\r\n        .then(resp => {\r\n            setData(resp.data.language)\r\n            $(document).ready(function(){\r\n                let dataTable = $('#dataTable').DataTable({\r\n                    \"retrieve\": true,\r\n                    \"responsive\": true,\r\n                    \"autoWidth\": false,\r\n                    \"lengthChange\": false,\r\n                    \"pageLength\": 10,\r\n                    \"bInfo\" : false,\r\n                    \"language\": {\r\n                        \"paginate\": {\r\n                          \"previous\": \"Anterior\",\r\n                          \"next\": \"Próxima\"\r\n                        },\r\n                        \"emptyTable\": \"Não existe dados para serem carregados\"\r\n                    }\r\n                })\r\n\r\n                $('#searchBarTec').on('keyup change', function () {\r\n                    dataTable.search(this.value).draw();\r\n                })\r\n\r\n                $(\".dataTable\").on('click','.deleteMe', function (evt) { \r\n                    const hasClass = $('.dataTable').hasClass('collapsed')                            \r\n                    if(hasClass){\r\n                        const tr_odd = evt.target.offsetParent.parentElement.previousElementSibling\r\n                        tr_odd.classList.remove('parent')\r\n                        tr_odd.classList.add('odd')\r\n                        const line = evt.target.offsetParent\r\n                        line.style.display = 'none'\r\n                    }\r\n                    \r\n                    openModal(evt.target.dataset.id)\r\n                });\r\n\r\n                refLoading.current.executeLoading()\r\n            })\r\n        })\r\n        .catch(err => {\r\n            try{\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n                if(err.response.data.message == 'Token invalid'){\r\n                    setTimeout(() => {\r\n                        window.location.href = `${BASE_URL_LOGIN}`\r\n                    }, 5000);\r\n                }\r\n            }catch(err){\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages('Ops'))\r\n            }\r\n        })\r\n    },[isAdmin])\r\n\r\n    // Renderiza as linhas da tabela\r\n    const renderRow = () => {\r\n        return data.map(line => (\r\n                <tr key={line.id}>\r\n                    <td>{line.language}</td>\r\n                    <td className=\"text-center\"><Link className='link_text_pen' to={`editlanguagescard/${line.id}`}><i className=\"fas fa-pencil-alt click\"></i></Link></td>\r\n                    <td className=\"text-center\"><i className=\"fas fa-trash-alt click deleteMe\" data-id={line.id}></i></td>\r\n                </tr>\r\n            )\r\n        )\r\n    }\r\n\r\n    // Abre uma modal quando o usuário vai deletar uma carta\r\n    // A modal verifica se o usuário tem certeza que deseja executar a ação\r\n    const openModal = (id) => {\r\n        setLineId(id)\r\n        refModal.current.openModal()\r\n    }\r\n\r\n    // Deleta a carta do usuário\r\n    const deleteItem = () => {\r\n        axios.delete(`${BASE_URL_BACK}/cardlanguages/${lineId}`,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message == 'language deleted'){\r\n                    toast.success(messages(resp.data.message))\r\n                    const filtered = data.filter(language => {\r\n                        return language.id != lineId\r\n                    })            \r\n                    setData(filtered)\r\n                    refModal.current.openModal()\r\n                }\r\n            })\r\n            .catch(err => {\r\n                try{\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages(err.response.data.message))\r\n                }catch(err){\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages('Ops'))\r\n                }\r\n            })\r\n    }\r\n\r\n    // Verifica se o usuário está autenticado\r\n    if (isAuth == false) {\r\n        window.location.href = `${BASE_URL_LOGIN}`\r\n    }\r\n\r\n    if (isAuth == false) {\r\n        return null\r\n    }\r\n\r\n    // Verifica se o usuário é administrador\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/usercollection/cards' />\r\n        )\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-2\">\r\n                            <h1>Idiomas das cartas</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-9\">\r\n                            <div className=\"input-group mb-3\">\r\n                                <input type=\"email\" className=\"form-control\" id=\"searchBarTec\" placeholder=\"Qual idioma você está procurando?\" />\r\n                                <div className=\"input-group-append\">\r\n                                    <div className=\"input-group-text\">\r\n                                        <i className=\"fas fa-search\"></i>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-3 mb-2 mr-0\">\r\n                            <button type=\"button\" className=\"btn btn-dark mr-1\"><Link className='link_text' to='/usercollection/addlanguagescard'>Adicionar</Link></button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <table id=\"dataTable\" className=\"table table-bordered table-responsive-sm table-responsive-md\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Linguagem</th>\r\n                                        <th className=\"text-center\">Editar</th>\r\n                                        <th className=\"text-center\">Remover</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {renderRow()}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <ToastContainer />\r\n            <Modals\r\n                title='Exclusão de idioma'\r\n                body='Deseja realmente excluir este idioma? Se excluir, todo os cards com este idioma serão removidos automaticamente'\r\n                nameButton='Excluir'\r\n                deleteItem={deleteItem}\r\n                ref={refModal}\r\n            />\r\n            <Loading\r\n                ref={refLoading}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LanguageCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddLanguagesCard\\index.js",["465","466","467","468"],"import React, { useState, useContext } from 'react';\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios'\r\nimport {messages} from '../../utils/messages'\r\n\r\nconst AddLanguagesCard = () => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [language, setLanguage] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const history = useHistory()\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    const changeLanguage = evt => {\r\n        setLanguage(evt.target.value)\r\n    }\r\n\r\n    const saveLanguage = evt => {\r\n        evt.preventDefault()\r\n\r\n        const objLanguage ={\r\n            language\r\n        }\r\n\r\n        axios.post(`${BASE_URL_BACK}/cardlanguages`,objLanguage,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/usercollection/languages')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                try{\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages(err.response.data.message))\r\n                }catch(err){\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages('Ops'))\r\n                }\r\n            })\r\n        \r\n    }\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/usercollection/cards' />\r\n        )\r\n    }else{\r\n        \r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-3\">\r\n                            <h1>Cadastrar Idiomas</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <form onSubmit={saveLanguage}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Nome do idioma</label>\r\n                                    <input type=\"text\" className=\"form-control\" value={language} placeholder=\"Digite o idioma\" onChange={changeLanguage} maxLength=\"45\" required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <button type=\"submit\" className=\"btn btn-dark mr-2\">Cadastrar</button>\r\n                                <Link className=\"btn btn-dark mr-2\" to='/usercollection/languages'>Voltar</Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <ToastContainer />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddLanguagesCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditLanguagesCard\\index.js",["469","470","471","472","473"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios'\r\nimport {messages} from '../../utils/messages'\r\nimport _ from 'lodash'\r\n\r\nconst EditLanguagesCard = (props) => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [language, setLanguage] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const history = useHistory()\r\n    const {id} = props.match.params\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    // Busca informações no backend para montar o formulário\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardlanguages`,configAxios)\r\n            .then(resp => {\r\n                const colorFilter = _.filter(resp.data.language, {'id': parseInt(id)})\r\n                setLanguage(colorFilter[0].language)\r\n            })\r\n    },[id])\r\n\r\n    // Verifica se existe alguma alteração no formulário para salvar no estado\r\n    const changeLanguage = evt => {\r\n        setLanguage(evt.target.value)\r\n    }\r\n\r\n    // Salva as informações no backend\r\n    const saveLanguage = evt => {\r\n        evt.preventDefault()\r\n\r\n        const objLanguage ={\r\n            language \r\n        }\r\n\r\n        axios.put(`${BASE_URL_BACK}/cardlanguages/${id}`,objLanguage,configAxios)\r\n            .then(resp => {\r\n                console.log(resp.data);\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/usercollection/languages')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                try{\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages(err.response.data.message))\r\n                }catch(err){\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages('Ops'))\r\n                }\r\n            })\r\n        \r\n    }\r\n\r\n   // Verifica se o usuário está autenticado\r\n   if(isAuth == false){\r\n    return (\r\n        window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }\r\n\r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    // Verifica se o usuário é administrador\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/usercollection/cards' />\r\n        )\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-3\">\r\n                            <h1>Editar linguagem</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <form onSubmit={saveLanguage}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Linguagem</label>\r\n                                    <input type=\"text\" className=\"form-control\" value={language} placeholder=\"Digite a linguagem\" onChange={changeLanguage} required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <button type=\"submit\" className=\"btn btn-dark mr-2\">Alterar</button>\r\n                                <Link className=\"btn btn-dark mr-2\" to='/usercollection/languages'>Voltar</Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <ToastContainer />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditLanguagesCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddQualityCard\\index.js",["474","475","476","477"],"import React, { useState, useContext } from 'react';\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios'\r\nimport {messages} from '../../utils/messages'\r\n\r\nconst AddQualityCard = () => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [quality, setQuality] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const history = useHistory()\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    // Verifica se existe alguma alteração no formulário para salvar no estado\r\n    const changeQuality = evt => {\r\n        setQuality(evt.target.value)\r\n    }\r\n\r\n    // Salva os dados cadastrado pelo usuário\r\n    const saveQuality = evt => {\r\n        evt.preventDefault()\r\n\r\n        const objQuality ={\r\n            quality\r\n        }\r\n\r\n        axios.post(`${BASE_URL_BACK}/cardqualities`,objQuality,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/usercollection/qualities')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                try{\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages(err.response.data.message))\r\n                }catch(err){\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages('Ops'))\r\n                }\r\n            })\r\n        \r\n    }\r\n\r\n    // Verifica se o usuário está autenticado\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    // Verifica se o usuário é administrador\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/usercollection/cards' />\r\n        )\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-3\">\r\n                            <h1>Cadastrar Qualidade</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <form onSubmit={saveQuality}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Nome da qualidade</label>\r\n                                    <input type=\"text\" className=\"form-control\" value={quality} placeholder=\"Digite a qualidade\" onChange={changeQuality} maxLength=\"45\" required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <button type=\"submit\" className=\"btn btn-dark mr-2\">Cadastrar</button>\r\n                                <Link className=\"btn btn-dark mr-2\" to='/usercollection/qualities'>Voltar</Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <ToastContainer />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddQualityCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditQualitiesCard\\index.js",["478","479","480","481","482"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios'\r\nimport {messages} from '../../utils/messages'\r\nimport _ from 'lodash'\r\n\r\nconst EditQualitiesCard = (props) => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [quality, setQuality] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const history = useHistory()\r\n    const {id} = props.match.params\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    // Busca informações no backend para montar o formulário\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardqualities`,configAxios)\r\n            .then(resp => {\r\n                const colorFilter = _.filter(resp.data.quality, {'id': parseInt(id)})\r\n                setQuality(colorFilter[0].quality)\r\n            })\r\n    },[id])\r\n\r\n    // Verifica se existe alguma alteração no formulário para salvar no estado\r\n    const changeQuality = evt => {\r\n        setQuality(evt.target.value)\r\n    }\r\n\r\n    // Salva os dados cadastrado pelo usuário\r\n    const saveQuality = evt => {\r\n        evt.preventDefault()\r\n\r\n        const objQuality ={\r\n            quality \r\n        }\r\n\r\n        axios.put(`${BASE_URL_BACK}/cardqualities/${id}`,objQuality,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/usercollection/qualities')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                try{\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages(err.response.data.message))\r\n                }catch(err){\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages('Ops'))\r\n                }\r\n            })\r\n        \r\n    }\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/usercollection/cards' />\r\n        )\r\n    }else{\r\n        \r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-3\">\r\n                            <h1>Editar qualidade</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <form onSubmit={saveQuality}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Qualidade</label>\r\n                                    <input type=\"text\" className=\"form-control\" value={quality} placeholder=\"Digite a qualidade\" onChange={changeQuality} required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <button type=\"submit\" className=\"btn btn-dark mr-2\">Alterar</button>\r\n                                <Link className=\"btn btn-dark mr-2\" to='/usercollection/qualities'>Voltar</Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <ToastContainer />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditQualitiesCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\QualitiesCard\\index.js",["483","484","485","486","487","488","489","490","491"],"import React, { useEffect, useContext, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../../utils/auth'\r\nimport { BASE_URL_BACK, BASE_URL_LOGIN } from '../../utils/variaveisAmbiente'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport {messages} from '../../utils/messages'\r\nimport Loading from '../Loading'\r\nimport Modals from '../Modals'\r\nimport $ from 'jquery'\r\n\r\nconst QualitiesCard = () => {\r\n    const [data, setData] = useState([])\r\n    const [lineId, setLineId] = useState()\r\n    const token = localStorage.getItem('token')\r\n    const refLoading = useRef()\r\n    const refModal = useRef()\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    // Busca informações no backend para montar a tela\r\n    useEffect(() => {\r\n        if(!isAdmin){\r\n            return null\r\n        }\r\n        axios.get(`${BASE_URL_BACK}/cardqualities`, configAxios)\r\n        .then(resp => {\r\n            setData(resp.data.quality)\r\n            $(document).ready(function(){\r\n                let dataTable = $('#dataTable').DataTable({\r\n                    \"retrieve\": true,\r\n                    \"responsive\": true,\r\n                    \"autoWidth\": false,\r\n                    \"lengthChange\": false,\r\n                    \"pageLength\": 10,\r\n                    \"bInfo\" : false,\r\n                    \"language\": {\r\n                        \"paginate\": {\r\n                          \"previous\": \"Anterior\",\r\n                          \"next\": \"Próxima\"\r\n                        },\r\n                        \"emptyTable\": \"Não existe dados para serem carregados\"\r\n                    }\r\n                })\r\n\r\n                $('#searchBarTec').on('keyup change', function () {\r\n                    dataTable.search(this.value).draw();\r\n                })\r\n\r\n                $(\".dataTable\").on('click','.deleteMe', function (evt) { \r\n                    const hasClass = $('.dataTable').hasClass('collapsed')                            \r\n                    if(hasClass){\r\n                        const tr_odd = evt.target.offsetParent.parentElement.previousElementSibling\r\n                        tr_odd.classList.remove('parent')\r\n                        tr_odd.classList.add('odd')\r\n                        const line = evt.target.offsetParent\r\n                        line.style.display = 'none'\r\n                    }\r\n                    \r\n                    openModal(evt.target.dataset.id)\r\n                });\r\n\r\n                refLoading.current.executeLoading()\r\n            })\r\n        })\r\n        .catch(err => {\r\n            try{\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n                if(err.response.data.message == 'Token invalid'){\r\n                    setTimeout(() => {\r\n                        window.location.href = `${BASE_URL_LOGIN}`\r\n                    }, 5000);\r\n                }\r\n            }catch(err){\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages('Ops'))\r\n            }\r\n        })\r\n    },[isAdmin])\r\n\r\n    // Renderiza as linhas da tabela\r\n    const renderRow = () => {\r\n        return data.map(line => (\r\n                <tr key={line.id}>\r\n                    <td>{line.quality}</td>\r\n                    <td className=\"text-center\"><Link className='link_text_pen' to={`editqualitiescard/${line.id}`}><i className=\"fas fa-pencil-alt click\"></i></Link></td>\r\n                    <td className=\"text-center\"><i className=\"fas fa-trash-alt click deleteMe\" data-id={line.id}></i></td>\r\n                </tr>\r\n            )\r\n        )\r\n    }\r\n\r\n    // Abre uma modal quando o usuário vai deletar uma carta\r\n    // A modal verifica se o usuário tem certeza que deseja executar a ação\r\n    const openModal = (id) => {\r\n        setLineId(id)\r\n        refModal.current.openModal()\r\n    }\r\n\r\n    // Deleta a carta do usuário\r\n    const deleteItem = () => {\r\n        axios.delete(`${BASE_URL_BACK}/cardqualities/${lineId}`,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message == 'quality deleted'){\r\n                    toast.success(messages(resp.data.message))\r\n                    const filtered = data.filter(qualities => {\r\n                        return qualities.id != lineId\r\n                    })            \r\n                    setData(filtered)\r\n                    refModal.current.openModal()\r\n                }\r\n            })\r\n            .catch(err => {\r\n                try{\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages(err.response.data.message))\r\n                }catch(err){\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages('Ops'))\r\n                }\r\n            })\r\n    }\r\n\r\n    // Verifica se o usuário está autenticado\r\n    if (isAuth == false) {\r\n        window.location.href = `${BASE_URL_LOGIN}`\r\n    }\r\n\r\n    if (isAuth == false) {\r\n        return null\r\n    }\r\n\r\n    // Verifica se o usuário é administrador\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/usercollection/cards' />\r\n        )\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-2\">\r\n                            <h1>Qualidade das cartas</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-9\">\r\n                            <div className=\"input-group mb-3\">\r\n                                <input type=\"email\" className=\"form-control\" id=\"searchBarTec\" placeholder=\"Qual qualidade você está procurando?\" />\r\n                                <div className=\"input-group-append\">\r\n                                    <div className=\"input-group-text\">\r\n                                        <i className=\"fas fa-search\"></i>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-3 mb-2 mr-0\">\r\n                            <button type=\"button\" className=\"btn btn-dark mr-1\"><Link className='link_text' to='/usercollection/addqualitiescard'>Adicionar</Link></button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <table id=\"dataTable\" className=\"table table-bordered table-responsive-sm table-responsive-md\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Qualidade</th>\r\n                                        <th className=\"text-center\">Editar</th>\r\n                                        <th className=\"text-center\">Remover</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {renderRow()}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <ToastContainer />\r\n            <Modals\r\n                title='Exclusão de qualidade'\r\n                body='Deseja realmente excluir esta qualidade? Se excluir, todo os cards com esta qualidade serão removidos automaticamente'\r\n                nameButton='Excluir'\r\n                deleteItem={deleteItem}\r\n                ref={refModal}\r\n            />\r\n            <Loading\r\n                ref={refLoading}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QualitiesCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\RaritiesCard\\index.js",["492","493","494","495","496","497","498","499","500"],"import React, { useEffect, useContext, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../../utils/auth'\r\nimport { BASE_URL_BACK, BASE_URL_LOGIN } from '../../utils/variaveisAmbiente'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport {messages} from '../../utils/messages'\r\nimport Loading from '../Loading'\r\nimport Modals from '../Modals'\r\nimport $ from 'jquery'\r\n\r\nconst RaritiesCard = () => {\r\n    const [data, setData] = useState([])\r\n    const [lineId, setLineId] = useState()\r\n    const token = localStorage.getItem('token')\r\n    const refLoading = useRef()\r\n    const refModal = useRef()\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    // Busca informações no backend para montar a tela\r\n    useEffect(() => {\r\n        if(!isAdmin){\r\n            return null\r\n        }\r\n        axios.get(`${BASE_URL_BACK}/cardrarities`, configAxios)\r\n        .then(resp => {\r\n            setData(resp.data.rarity)\r\n            $(document).ready(function(){\r\n                let dataTable = $('#dataTable').DataTable({\r\n                    \"retrieve\": true,\r\n                    \"responsive\": true,\r\n                    \"autoWidth\": false,\r\n                    \"lengthChange\": false,\r\n                    \"pageLength\": 10,\r\n                    \"bInfo\" : false,\r\n                    \"language\": {\r\n                        \"paginate\": {\r\n                          \"previous\": \"Anterior\",\r\n                          \"next\": \"Próxima\"\r\n                        },\r\n                        \"emptyTable\": \"Não existe dados para serem carregados\"\r\n                    }\r\n                })\r\n\r\n                $('#searchBarTec').on('keyup change', function () {\r\n                    dataTable.search(this.value).draw();\r\n                })\r\n\r\n                $(\".dataTable\").on('click','.deleteMe', function (evt) { \r\n                    const hasClass = $('.dataTable').hasClass('collapsed')                            \r\n                    if(hasClass){\r\n                        const tr_odd = evt.target.offsetParent.parentElement.previousElementSibling\r\n                        tr_odd.classList.remove('parent')\r\n                        tr_odd.classList.add('odd')\r\n                        const line = evt.target.offsetParent\r\n                        line.style.display = 'none'\r\n                    }\r\n                    \r\n                    openModal(evt.target.dataset.id)\r\n                });\r\n\r\n                refLoading.current.executeLoading()\r\n            })\r\n        })\r\n        .catch(err => {\r\n            try{\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n                if(err.response.data.message == 'Token invalid'){\r\n                    setTimeout(() => {\r\n                        window.location.href = `${BASE_URL_LOGIN}`\r\n                    }, 5000);\r\n                }\r\n            }catch(err){\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages('Ops'))\r\n            }\r\n        })\r\n    },[isAdmin])\r\n\r\n    // Renderiza as linhas da tabela\r\n    const renderRow = () => {\r\n        return data.map(line => (\r\n                <tr key={line.id}>\r\n                    <td>{line.rarity}</td>\r\n                    <td className=\"text-center\"><Link className='link_text_pen' to={`editraritiescard/${line.id}`}><i className=\"fas fa-pencil-alt click\"></i></Link></td>\r\n                    <td className=\"text-center\"><i className=\"fas fa-trash-alt click deleteMe\" data-id={line.id}></i></td>\r\n                </tr>\r\n            )\r\n        )\r\n    }\r\n\r\n    // Abre uma modal quando o usuário vai deletar uma carta\r\n    // A modal verifica se o usuário tem certeza que deseja executar a ação\r\n    const openModal = (id) => {\r\n        setLineId(id)\r\n        refModal.current.openModal()\r\n    }\r\n\r\n    // Deleta a carta do usuário\r\n    const deleteItem = () => {\r\n        axios.delete(`${BASE_URL_BACK}/cardrarities/${lineId}`,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message == 'rarity deleted'){\r\n                    toast.success(messages(resp.data.message))\r\n                    const filtered = data.filter(rarity => {\r\n                        return rarity.id != lineId\r\n                    })            \r\n                    setData(filtered)\r\n                    refModal.current.openModal()\r\n                }\r\n            })\r\n            .catch(err => {\r\n                try{\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages(err.response.data.message))\r\n                }catch(err){\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages('Ops'))\r\n                }\r\n            })\r\n    }\r\n\r\n    // Verifica se o usuário está autenticado\r\n    if (isAuth == false) {\r\n        window.location.href = `${BASE_URL_LOGIN}`\r\n    }\r\n\r\n    if (isAuth == false) {\r\n        return null\r\n    }\r\n\r\n    // Verifica se o usuário é administrador\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/usercollection/cards' />\r\n        )\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-2\">\r\n                            <h1>Raridade das cartas</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-9\">\r\n                            <div className=\"input-group mb-3\">\r\n                                <input type=\"email\" className=\"form-control\" id=\"searchBarTec\" placeholder=\"Qual raridade você está procurando?\" />\r\n                                <div className=\"input-group-append\">\r\n                                    <div className=\"input-group-text\">\r\n                                        <i className=\"fas fa-search\"></i>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-3 mb-2 mr-0\">\r\n                            <button type=\"button\" className=\"btn btn-dark mr-1\"><Link className='link_text' to='/usercollection/addraritiescard'>Adicionar</Link></button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <table id=\"dataTable\" className=\"table table-bordered table-responsive-sm table-responsive-md\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Raridade</th>\r\n                                        <th className=\"text-center\">Editar</th>\r\n                                        <th className=\"text-center\">Remover</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {renderRow()}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <ToastContainer />\r\n            <Modals\r\n                title='Exclusão de raridade'\r\n                body='Deseja realmente excluir esta raridade? Se excluir, todo os cards com esta raridade serão removidos automaticamente'\r\n                nameButton='Excluir'\r\n                deleteItem={deleteItem}\r\n                ref={refModal}\r\n            />\r\n            <Loading\r\n                ref={refLoading}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RaritiesCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddRarityCard\\index.js",["501","502","503","504"],"import React, { useState, useContext } from 'react';\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios'\r\nimport {messages} from '../../utils/messages'\r\n\r\nconst AddRarityCard = () => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [rarity, setRarity] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const history = useHistory()\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    // Verifica se existe alguma alteração no formulário para salvar no estado\r\n    const changeRarity = evt => {\r\n        setRarity(evt.target.value)\r\n    }\r\n\r\n    // Salva os dados cadastrado pelo usuário\r\n    const saveRarity = evt => {\r\n        evt.preventDefault()\r\n\r\n        const objRarity ={\r\n            rarity\r\n        }\r\n\r\n        axios.post(`${BASE_URL_BACK}/cardrarities`,objRarity,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/usercollection/rarities')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                try{\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages(err.response.data.message))\r\n                }catch(err){\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages('Ops'))\r\n                }\r\n            })\r\n        \r\n    }\r\n\r\n    // Verifica se o usuário está autenticado\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    // Verifica se o usuário é administrador\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/usercollection/cards' />\r\n        )\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-3\">\r\n                            <h1>Cadastrar Raridade</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <form onSubmit={saveRarity}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Nome da Raridade</label>\r\n                                    <input type=\"text\" className=\"form-control\" value={rarity} placeholder=\"Digite a raridade\" onChange={changeRarity} maxLength=\"45\" required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <button type=\"submit\" className=\"btn btn-dark mr-2\">Cadastrar</button>\r\n                                <Link className=\"btn btn-dark mr-2\" to='/usercollection/rarities'>Voltar</Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <ToastContainer />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddRarityCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditRaritiesCard\\index.js",["505","506","507","508","509"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios'\r\nimport {messages} from '../../utils/messages'\r\nimport _ from 'lodash'\r\n\r\nconst EditRaritiesCard = (props) => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [rarity, setRarity] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const history = useHistory()\r\n    const {id} = props.match.params\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    // Busca informações no backend para montar o formulário\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardrarities`,configAxios)\r\n            .then(resp => {\r\n                const colorFilter = _.filter(resp.data.rarity, {'id': parseInt(id)})\r\n                setRarity(colorFilter[0].rarity)\r\n            })\r\n    },[id])\r\n\r\n    // Verifica se existe alguma alteração no formulário para salvar no estado\r\n    const changeRarity = evt => {\r\n        setRarity(evt.target.value)\r\n    }\r\n\r\n    // Salva os dados cadastrado pelo usuário\r\n    const saveRarity = evt => {\r\n        evt.preventDefault()\r\n\r\n        const objRarity ={\r\n            rarity \r\n        }\r\n\r\n        axios.put(`${BASE_URL_BACK}/cardrarities/${id}`,objRarity,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/usercollection/rarities')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                try{\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages(err.response.data.message))\r\n                }catch(err){\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages('Ops'))\r\n                }\r\n            })\r\n        \r\n    }\r\n\r\n    // Verifica se o usuário está autenticado\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    // Verifica se o usuário é administrador\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/usercollection/cards' />\r\n        )\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-3\">\r\n                            <h1>Editar raridade</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <form onSubmit={saveRarity}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Raridade</label>\r\n                                    <input type=\"text\" className=\"form-control\" value={rarity} placeholder=\"Digite a raridade\" onChange={changeRarity} required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <button type=\"submit\" className=\"btn btn-dark mr-2\">Alterar</button>\r\n                                <Link className=\"btn btn-dark mr-2\" to='/usercollection/rarities'>Voltar</Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <ToastContainer />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditRaritiesCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\TypesCard\\index.js",["510","511","512","513","514","515","516","517","518","519"],"import React, { useEffect, useContext, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../../utils/auth'\r\nimport { BASE_URL_BACK, BASE_URL_LOGIN } from '../../utils/variaveisAmbiente'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport {messages} from '../../utils/messages'\r\nimport Loading from '../Loading'\r\nimport Modals from '../Modals'\r\nimport $ from 'jquery'\r\n\r\nconst TypesCard = () => {\r\n    const [data, setData] = useState([])\r\n    const [lineId, setLineId] = useState()\r\n    const token = localStorage.getItem('token')\r\n    const refLoading = useRef()\r\n    const refModal = useRef()\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    // Busca informações no backend para montar a tela\r\n    useEffect(() => {\r\n        if(!isAdmin){\r\n            return null\r\n        }\r\n        axios.get(`${BASE_URL_BACK}/cardtypes`, configAxios)\r\n        .then(resp => {\r\n            setData(resp.data.type)\r\n            $(document).ready(function(){\r\n                let dataTable = $('#dataTable').DataTable({\r\n                    \"retrieve\": true,\r\n                    \"responsive\": true,\r\n                    \"autoWidth\": false,\r\n                    \"lengthChange\": false,\r\n                    \"pageLength\": 10,\r\n                    \"bInfo\" : false,\r\n                    \"language\": {\r\n                        \"paginate\": {\r\n                          \"previous\": \"Anterior\",\r\n                          \"next\": \"Próxima\"\r\n                        },\r\n                        \"emptyTable\": \"Não existe dados para serem carregados\"\r\n                    }\r\n                })\r\n\r\n                $('#searchBarTec').on('keyup change', function () {\r\n                    dataTable.search(this.value).draw();\r\n                })\r\n\r\n                $(\".dataTable\").on('click','.deleteMe', function (evt) { \r\n                    const hasClass = $('.dataTable').hasClass('collapsed')                            \r\n                    if(hasClass){\r\n                        const tr_odd = evt.target.offsetParent.parentElement.previousElementSibling\r\n                        tr_odd.classList.remove('parent')\r\n                        tr_odd.classList.add('odd')\r\n                        const line = evt.target.offsetParent\r\n                        line.style.display = 'none'\r\n                    }\r\n                    \r\n                    openModal(evt.target.dataset.id)\r\n                });\r\n\r\n                refLoading.current.executeLoading()\r\n            })\r\n        })\r\n        .catch(err => {\r\n            try{\r\n                toast.info(messages(err.response.data.message))\r\n                if(err.response.data.message == 'Token invalid'){\r\n                    setTimeout(() => {\r\n                        window.location.href = `${BASE_URL_LOGIN}`\r\n                    }, 5000);\r\n                }\r\n            }catch(err){\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages('Ops'))\r\n            }\r\n        })\r\n    },[isAdmin])\r\n\r\n    // Renderiza as linhas da tabela\r\n    const renderRow = () => {\r\n        return data.map(line => (\r\n                <tr key={line.id}>\r\n                    <td>{line.type}</td>\r\n                    <td className=\"text-center\"><Link className='link_text_pen' to={`edittypescard/${line.id}`}><i className=\"fas fa-pencil-alt click\"></i></Link></td>\r\n                    <td className=\"text-center\"><i className=\"fas fa-trash-alt click deleteMe\" data-id={line.id}></i></td>\r\n                </tr>\r\n            )\r\n        )\r\n    }\r\n\r\n    // Abre uma modal quando o usuário vai deletar uma carta\r\n    // A modal verifica se o usuário tem certeza que deseja executar a ação\r\n    const openModal = (id) => {\r\n        setLineId(id)\r\n        refModal.current.openModal()\r\n    }\r\n\r\n    // Deleta a carta do usuário\r\n    const deleteItem = () => {\r\n        axios.delete(`${BASE_URL_BACK}/cardtypes/${lineId}`,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message == 'type deleted'){\r\n                    toast.success(messages(resp.data.message))\r\n                    const filtered = data.filter(rarity => {\r\n                        return rarity.id != lineId\r\n                    })            \r\n                    setData(filtered)\r\n                    refModal.current.openModal()\r\n                }\r\n            })\r\n            .catch(err => {\r\n                try{\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages(err.response.data.message))\r\n                }catch(err){\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages('Ops'))\r\n                }\r\n            })\r\n    }\r\n\r\n   // Verifica se o usuário está autenticado\r\n   if (isAuth == false) {\r\n    window.location.href = `${BASE_URL_LOGIN}`\r\n    }\r\n\r\n    if (isAuth == false) {\r\n        return null\r\n    }\r\n\r\n    // Verifica se o usuário é administrador\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/usercollection/cards' />\r\n        )\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-2\">\r\n                            <h1>Tipo das cartas</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-9\">\r\n                            <div className=\"input-group mb-3\">\r\n                                <input type=\"email\" className=\"form-control\" id=\"searchBarTec\" placeholder=\"Qual tipo você está procurando?\" />\r\n                                <div className=\"input-group-append\">\r\n                                    <div className=\"input-group-text\">\r\n                                        <i className=\"fas fa-search\"></i>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-3 mb-2 mr-0\">\r\n                            <button type=\"button\" className=\"btn btn-dark mr-1\"><Link className='link_text' to='/usercollection/addtypescard'>Adicionar</Link></button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <table id=\"dataTable\" className=\"table table-bordered table-responsive-sm table-responsive-md\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Tipo</th>\r\n                                        <th className=\"text-center\">Editar</th>\r\n                                        <th className=\"text-center\">Remover</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {renderRow()}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <ToastContainer />\r\n            <Modals\r\n                title='Exclusão de tipo'\r\n                body='Deseja realmente excluir este tipo? Se excluir, todo os cards com este tipo serão removidos automaticamente'\r\n                nameButton='Excluir'\r\n                deleteItem={deleteItem}\r\n                ref={refModal}\r\n            />\r\n            <Loading\r\n                ref={refLoading}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TypesCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddTypesCard\\index.js",["520","521","522","523"],"import React, { useState, useContext } from 'react';\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios'\r\nimport {messages} from '../../utils/messages'\r\n\r\nconst AddTypesCard = () => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [type, setType] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const history = useHistory()\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    // Verifica se existe alguma alteração no formulário para salvar no estado\r\n    const changeType = evt => {\r\n        setType(evt.target.value)\r\n    }\r\n\r\n    // Salva os dados cadastrado pelo usuário\r\n    const saveType = evt => {\r\n        evt.preventDefault()\r\n\r\n        const objType ={\r\n            type\r\n        }\r\n\r\n        axios.post(`${BASE_URL_BACK}/cardtypes`,objType,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/usercollection/types')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                try{\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages(err.response.data.message))\r\n                }catch(err){\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages('Ops'))\r\n                }\r\n            })\r\n        \r\n    }\r\n\r\n     // Verifica se o usuário está autenticado\r\n     if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    // Verifica se o usuário é administrador\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/usercollection/cards' />\r\n        )\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-3\">\r\n                            <h1>Cadastrar Tipos</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <form onSubmit={saveType}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Nome do Tipo</label>\r\n                                    <input type=\"text\" className=\"form-control\" value={type} placeholder=\"Digite o tipo\" onChange={changeType} maxLength=\"45\" required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <button type=\"submit\" className=\"btn btn-dark mr-2\">Cadastrar</button>\r\n                                <Link className=\"btn btn-dark mr-2\" to='/usercollection/types'>Voltar</Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <ToastContainer />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddTypesCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditTypesCard\\index.js",["524","525","526","527","528"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios'\r\nimport {messages} from '../../utils/messages'\r\nimport _ from 'lodash'\r\n\r\nconst EditTypesCard = (props) => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [type, setType] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const history = useHistory()\r\n    const {id} = props.match.params\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    // Busca informações no backend para montar o formulário\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardtypes`,configAxios)\r\n            .then(resp => {\r\n                const colorFilter = _.filter(resp.data.type, {'id': parseInt(id)})\r\n                setType(colorFilter[0].type)\r\n            })\r\n    },[id])\r\n\r\n    // Verifica se existe alguma alteração no formulário para salvar no estado\r\n    const changeType = evt => {\r\n        setType(evt.target.value)\r\n    }\r\n\r\n    // Salva os dados cadastrado pelo usuário\r\n    const saveType = evt => {\r\n        evt.preventDefault()\r\n\r\n        const objType ={\r\n            type \r\n        }\r\n\r\n        axios.put(`${BASE_URL_BACK}/cardtypes/${id}`,objType,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/usercollection/types')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                try{\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages(err.response.data.message))\r\n                }catch(err){\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages('Ops'))\r\n                }\r\n            })\r\n        \r\n    }\r\n\r\n    // Verifica se o usuário está autenticado\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    // Verifica se o usuário é administrador\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/usercollection/cards' />\r\n        )\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-3\">\r\n                            <h1>Editar tipo</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <form onSubmit={saveType}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Tipo</label>\r\n                                    <input type=\"text\" className=\"form-control\" value={type} placeholder=\"Digite o tipo\" onChange={changeType} required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <button type=\"submit\" className=\"btn btn-dark mr-2\">Alterar</button>\r\n                                <Link className=\"btn btn-dark mr-2\" to='/usercollection/types'>Voltar</Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <ToastContainer />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditTypesCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditionsCards\\index.js",["529","530","531","532","533","534","535","536","537"],"import React, { useEffect, useContext, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../../utils/auth'\r\nimport { BASE_URL_BACK, BASE_URL_LOGIN } from '../../utils/variaveisAmbiente'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport {messages} from '../../utils/messages'\r\nimport Loading from '../Loading'\r\nimport Modals from '../Modals'\r\nimport $ from 'jquery'\r\n\r\nconst EditionsCard = () => {\r\n    const [data, setData] = useState([])\r\n    const [lineId, setLineId] = useState()\r\n    const token = localStorage.getItem('token')\r\n    const refLoading = useRef()\r\n    const refModal = useRef()\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    // Busca informações no backend para montar o formulário\r\n    useEffect(() => {\r\n        if(!isAdmin){\r\n            return null\r\n        }\r\n        axios.get(`${BASE_URL_BACK}/cardeditions`, configAxios)\r\n        .then(resp => {\r\n            setData(resp.data.edition)\r\n            $(document).ready(function(){\r\n                let dataTable = $('#dataTable').DataTable({\r\n                    \"retrieve\": true,\r\n                    \"responsive\": true,\r\n                    \"autoWidth\": false,\r\n                    \"lengthChange\": false,\r\n                    \"pageLength\": 10,\r\n                    \"bInfo\" : false,\r\n                    \"language\": {\r\n                        \"paginate\": {\r\n                          \"previous\": \"Anterior\",\r\n                          \"next\": \"Próxima\"\r\n                        },\r\n                        \"emptyTable\": \"Não existe dados para serem carregados\"\r\n                    }\r\n                })\r\n\r\n                $('#searchBarTec').on('keyup change', function () {\r\n                    dataTable.search(this.value).draw();\r\n                })\r\n\r\n                $(\".dataTable\").on('click','.deleteMe', function (evt) { \r\n                    const hasClass = $('.dataTable').hasClass('collapsed')                            \r\n                    if(hasClass){\r\n                        const tr_odd = evt.target.offsetParent.parentElement.previousElementSibling\r\n                        tr_odd.classList.remove('parent')\r\n                        tr_odd.classList.add('odd')\r\n                        const line = evt.target.offsetParent\r\n                        line.style.display = 'none'\r\n                    }\r\n                    \r\n                    openModal(evt.target.dataset.id)\r\n                });\r\n\r\n                refLoading.current.executeLoading()\r\n            })\r\n        })\r\n        .catch(err => {\r\n            try{\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n                if(err.response.data.message == 'Token invalid'){\r\n                    setTimeout(() => {\r\n                        window.location.href = `${BASE_URL_LOGIN}`\r\n                    }, 5000);\r\n                }\r\n            }catch(err){\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages('Ops'))\r\n            }\r\n        })\r\n    },[isAdmin])\r\n\r\n    // Renderiza as linhas da tabela\r\n    const renderRow = () => {\r\n        return data.map(line => (\r\n                <tr key={line.id}>\r\n                    <td>{line.edition}</td>\r\n                    <td className=\"text-center\"><Link className='link_text_pen' to={`editeditionscards/${line.id}`}><i className=\"fas fa-pencil-alt click\"></i></Link></td>\r\n                    <td className=\"text-center\"><i className=\"fas fa-trash-alt click deleteMe\" data-id={line.id}></i></td>\r\n                </tr>\r\n            )\r\n        )\r\n    }\r\n\r\n    // Abre uma modal quando o usuário vai deletar uma carta\r\n    // A modal verifica se o usuário tem certeza que deseja executar a ação\r\n    const openModal = (id) => {\r\n        setLineId(id)\r\n        refModal.current.openModal()\r\n    }\r\n\r\n    // Deleta a carta do usuário\r\n    const deleteItem = () => {\r\n        axios.delete(`${BASE_URL_BACK}/cardeditions/${lineId}`,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message == 'edition deleted'){\r\n                    toast.success(messages(resp.data.message))\r\n                    const filtered = data.filter(color => {\r\n                        return color.id != lineId\r\n                    })            \r\n                    setData(filtered)\r\n                    refModal.current.openModal()\r\n                }\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }\r\n\r\n    // Verifica se o usuário está autenticado\r\n    if (isAuth == false) {\r\n        window.location.href = `${BASE_URL_LOGIN}`\r\n    }\r\n\r\n    if (isAuth == false) {\r\n        return null\r\n    }\r\n\r\n    // Verifica se o usuário é administrador\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/usercollection/cards' />\r\n        )\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-2\">\r\n                            <h1>Edições</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-9\">\r\n                            <div className=\"input-group mb-3\">\r\n                                <input type=\"email\" className=\"form-control\" id=\"searchBarTec\" placeholder=\"Qual edição você está procurando?\" />\r\n                                <div className=\"input-group-append\">\r\n                                    <div className=\"input-group-text\">\r\n                                        <i className=\"fas fa-search\"></i>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <table id=\"dataTable\" className=\"table table-bordered table-responsive-sm table-responsive-md\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Edição</th>\r\n                                        <th className=\"text-center\">Editar</th>\r\n                                        <th className=\"text-center\">Remover</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {renderRow()}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <ToastContainer />\r\n            <Modals\r\n                title='Exclusão de edição'\r\n                body='Deseja realmente excluir esta edição? Se excluir, todo os cards desta edição serão removidos automaticamente'\r\n                nameButton='Excluir'\r\n                deleteItem={deleteItem}\r\n                ref={refModal}\r\n            />\r\n            <Loading\r\n                ref={refLoading}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditionsCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditEditionsCards\\index.js",["538","539","540","541","542","543"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios'\r\nimport {messages} from '../../utils/messages'\r\nimport _ from 'lodash'\r\n\r\nconst EditEditionsCards = (props) => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [edition, setEdition] = useState('')\r\n    const [code, setCode] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const history = useHistory()\r\n    const {id} = props.match.params\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    // Busca informações no backend para montar o formulário\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardeditions`,configAxios)\r\n            .then(resp => {\r\n                const colorFilter = _.filter(resp.data.edition, {'id': parseInt(id)})\r\n                const code = _.filter(resp.data.edition, {'id': parseInt(id)})\r\n                setEdition(colorFilter[0].edition)\r\n                setCode(colorFilter[0].code)\r\n            })\r\n    },[id])\r\n\r\n    // Verifica se existe alguma alteração no formulário para salvar no estado\r\n    const changeEdition = evt => {\r\n        setEdition(evt.target.value)\r\n    }\r\n\r\n    // Verifica se existe alguma alteração no formulário para salvar no estado\r\n    const changeCode = evt => {\r\n        setCode(evt.target.value)\r\n    }\r\n\r\n    // Salva os dados cadastrado pelo usuário\r\n    const saveColor = evt => {\r\n        evt.preventDefault()\r\n\r\n        const objLanguage ={\r\n            edition,\r\n            code\r\n        }\r\n\r\n        axios.put(`${BASE_URL_BACK}/cardeditions/${id}`,objLanguage,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/usercollection/editions')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                try{\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages(err.response.data.message))\r\n                }catch(err){\r\n                    //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                    toast.info(messages('Ops'))\r\n                }\r\n            })\r\n        \r\n    }\r\n\r\n    // Verifica se o usuário está autenticado\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    // Verifica se o usuário é administrador\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/usercollection/cards' />\r\n        )\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-3\">\r\n                            <h1>Editar edição</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <form onSubmit={saveColor}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Edição</label>\r\n                                    <input type=\"text\" className=\"form-control\" value={edition} placeholder=\"Digite a linguagem\" onChange={changeEdition} required />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Código</label>\r\n                                    <input type=\"text\" className=\"form-control\" value={code} placeholder=\"Digite a linguagem\" onChange={changeCode} required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <button type=\"submit\" className=\"btn btn-dark mr-2\">Alterar</button>\r\n                                <Link className=\"btn btn-dark mr-2\" to='/usercollection/editions'>Voltar</Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <ToastContainer />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditEditionsCards","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\LogView\\index.js",["544","545","546","547","548","549","550","551","552","553"],"import React, {useEffect, useRef, useState, useContext} from 'react';\r\nimport './index.css'\r\nimport Loading from '../Loading'\r\nimport axios from 'axios';\r\nimport {BASE_URL_BACK, BASE_URL_API_MAGIC, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport BackCard from '../../img/backCard.png'\r\nimport Birds from '../../img/aves_do_paraiso.png'\r\nimport {messages} from '../../utils/messages'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport jwt from 'jsonwebtoken'\r\nimport _ from 'lodash'\r\n\r\nconst LogView = (props) => {\r\n\r\n    let {isAuth} = useContext(AuthContext)\r\n    const urlId = props.match.params.id\r\n    const token = localStorage.getItem('token')\r\n    const [logUser, setLogUser] = useState([])\r\n    const [lastValue, setLastValues] = useState()\r\n    const refLoading = useRef()\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    // Busca informações no backend para montar o LogView\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/logs`,configAxios)\r\n        .then(resp => {\r\n            const logsFilter = _.filter(resp.data.logs, {'id': parseInt(urlId)})\r\n            setLogUser(logsFilter)\r\n            const lastValue = logsFilter[0].lastValue\r\n            setLastValues(JSON.parse(lastValue))\r\n            refLoading.current.executeLoading()\r\n        })\r\n        .catch(err => {\r\n            try{\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                if(err.response.data.message == 'token invalid'){\r\n                    window.location.href = `${BASE_URL_LOGIN}`\r\n                }\r\n            }catch(err){\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages('Ops'))\r\n            }\r\n           \r\n        })\r\n        \r\n    },[urlId])\r\n\r\n    // Verifica se o usuário está autenticado\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    return(\r\n        <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-2\">\r\n                            <h1>LogView</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12 mt-2\">\r\n                            <code>\r\n                                {<div><pre>{JSON.stringify(logUser[0], null, 2) }</pre></div>}\r\n                            </code>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-2\">\r\n                            <h1>LastValue</h1>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12 mt-2\">\r\n                            <code>\r\n                                {<div><pre>{JSON.stringify(lastValue, null, 2) }</pre></div>}\r\n                            </code>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Loading \r\n                    ref={refLoading}\r\n                />\r\n                <ToastContainer />\r\n            </section>\r\n\r\n    )\r\n}\r\n\r\nexport default LogView","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\pages\\Forgot\\index.js",["554","555","556","557"],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\pages\\Reset\\index.js",["558","559","560","561"],"import {React, useState, useEffect} from 'react';\r\nimport Logo from '../../img/logo.png'\r\nimport axios from 'axios'\r\nimport {BASE_URL_BACK, BASE_URL_FRONT} from '../../utils/variaveisAmbiente'\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css'; \r\nimport {messages} from '../../utils/messages'\r\n\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport './index.css'\r\n\r\nconst Reset = (props) => {\r\n    const [password, setPassword] = useState('')\r\n    const [passwordConfirm, setPasswordConfirm] = useState('')\r\n    const [name, setName] = useState('')\r\n\r\n    //Pega os valores de password e adiciona no estado\r\n    const onChangePass = evt => {\r\n        setPassword(evt.target.value)\r\n    }\r\n\r\n    //Pega os valores de password e adiciona no estado\r\n    const onChangePassConfirm = evt => {\r\n        setPasswordConfirm(evt.target.value)\r\n    }\r\n\r\n    //Envia os dados para o backend validar\r\n    const sendBack = (evt) => {\r\n        evt.preventDefault()\r\n        const uuid = props.location.pathname.split('/')[2]\r\n\r\n        //Verifica se as senhas informadas são iguais\r\n        if(password == passwordConfirm){\r\n            const data = {\r\n                password,\r\n                hashUrl: uuid\r\n            }\r\n            if(password.length >= 6){\r\n                // Neste momento é enviado a senha para o backend\r\n                // O backend salvará a nova senha fornecida\r\n                axios.post(`${BASE_URL_BACK}/reset`,data)\r\n                .then(resp => {   \r\n                        toast.success(messages(resp.data.message))\r\n                        setTimeout(() => {\r\n                            window.location.href = `${BASE_URL_FRONT}/login`\r\n                        }, 5000)\r\n                })\r\n                .catch(err => {\r\n                        try{\r\n                            //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                            toast.info(messages(err.response.data.message))\r\n                            setTimeout(() => {\r\n                                window.location.href = `${BASE_URL_FRONT}/login`\r\n                            }, 5000)\r\n                        }catch(err){\r\n                            //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                            toast.info(messages('Ops'))\r\n                        }\r\n                })\r\n            }else{\r\n                //Caso a senha não sejam iguais é apresentada a mensagem\r\n                toast.info('A senha precisa de ter mais de 6 caracteres')\r\n            }            \r\n        }else{\r\n            //Caso a senha não sejam iguais é apresentada a mensagem\r\n            toast.info('As senhas não coincidem')\r\n        }\r\n            \r\n    }\r\n\r\n    return(\r\n        <div className='wrapper'>\r\n        <div className='row text-center contentLogin'>\r\n        <div className='col-md-6 offset-md-3 col-10 offset-1'>\r\n            <img src={Logo} className='img-fluid' alt='Logo Magic Collections'/>\r\n            <form onSubmit={sendBack}>\r\n                <div className='row'>\r\n                    <div className='col-md-6 offset-md-3 col-10 offset-1'>\r\n                        <div className='input-group mb-3'>\r\n                            <input type='password' value={password} onChange={onChangePass} className='form-control' placeholder='Senha' required/>\r\n                            <div className='input-group-prepend'>\r\n                            <span className='input-group-text'><i className='fas fa-unlock-alt'></i></span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='input-group mb-3'>\r\n                            <input type='password' value={passwordConfirm} onChange={onChangePassConfirm} className='form-control' placeholder='Confirme sua senha' required/>\r\n                            <div className='input-group-prepend'>\r\n                            <span className='input-group-text'><i className='fas fa-unlock-alt'></i></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button type='submit' className='btn btn-dark mb-2'>Alterar Senha</button>\r\n            </form>\r\n            <ToastContainer />\r\n        </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reset","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\utils\\colors.js",["562"],"const colors = (colors) => {\r\n    switch (colors) {\r\n        case 'Preto':\r\n        case 'Pretos':\r\n        case 'Preta':\r\n        case 'Pretas':\r\n        case 'Black':\r\n            return '#000000'\r\n        case 'Branco':\r\n        case 'Brancos':\r\n        case 'Branca':\r\n        case 'Brancas':\r\n        case 'White':\r\n        case 'Yellow':\r\n        case 'Amarelo':\r\n        case 'Amarelos':\r\n        case 'Amerala':\r\n        case 'Ameralas':\r\n            return '#FFC107'\r\n        case 'Vermelho':\r\n        case 'Vermelhos':\r\n        case 'Vermelha':\r\n        case 'Vermelhas':\r\n        case 'Red':\r\n            return '#DC3545'\r\n        case 'Azul':\r\n        case 'Azuis':\r\n        case 'Blue':\r\n            return '#007BFF'\r\n        case 'Verde':\r\n        case 'Verdes':\r\n        case 'Green':\r\n            return '#28A745'\r\n        case 'Multicolor':\r\n        case 'Multicolorido':\r\n        case 'Multicoloridos':\r\n            return '#A69B00'\r\n        case 'Incolor':\r\n        case 'Incolores':\r\n        case 'Gray':\r\n            return '#6C757D'\r\n        case 'Purple':\r\n        case 'Roxo':\r\n        case 'Roxos':\r\n            return '#800080'\r\n        case 'Maroon':\r\n        case 'Marrom':\r\n        case 'Marrons':\r\n            return '#800000'\r\n        case 'Pink':\r\n        case 'Rosa':\r\n        case 'Rosas':\r\n            return '#FFC0CB'\r\n        case 'Orange':\r\n        case 'Laranja':\r\n        case 'Laranjas':\r\n            return '#FFA500'\r\n        default:\r\n            return '#191970'\r\n            break;\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    colors\r\n}",{"ruleId":"563","replacedBy":"564"},{"ruleId":"565","replacedBy":"566"},{"ruleId":"567","severity":1,"message":"568","line":3,"column":8,"nodeType":"569","messageId":"570","endLine":3,"endColumn":21},{"ruleId":"571","severity":1,"message":"572","line":9,"column":1,"nodeType":"573","endLine":21,"endColumn":2},{"ruleId":"567","severity":1,"message":"574","line":1,"column":10,"nodeType":"569","messageId":"570","endLine":1,"endColumn":27},{"ruleId":"575","severity":1,"message":"576","line":16,"column":8,"nodeType":"577","endLine":16,"endColumn":10,"suggestions":"578"},{"ruleId":"575","severity":1,"message":"579","line":26,"column":5,"nodeType":"569","endLine":26,"endColumn":14,"suggestions":"580"},{"ruleId":"581","severity":1,"message":"582","line":27,"column":23,"nodeType":"583","messageId":"584","endLine":27,"endColumn":25},{"ruleId":"581","severity":1,"message":"582","line":70,"column":34,"nodeType":"583","messageId":"584","endLine":70,"endColumn":36},{"ruleId":"581","severity":1,"message":"582","line":110,"column":42,"nodeType":"583","messageId":"584","endLine":110,"endColumn":44},{"ruleId":"581","severity":1,"message":"585","line":160,"column":24,"nodeType":"583","messageId":"584","endLine":160,"endColumn":26},{"ruleId":"581","severity":1,"message":"582","line":166,"column":38,"nodeType":"583","messageId":"584","endLine":166,"endColumn":40},{"ruleId":"581","severity":1,"message":"582","line":204,"column":46,"nodeType":"583","messageId":"584","endLine":204,"endColumn":48},{"ruleId":"567","severity":1,"message":"586","line":2,"column":25,"nodeType":"569","messageId":"570","endLine":2,"endColumn":33},{"ruleId":"567","severity":1,"message":"587","line":5,"column":9,"nodeType":"569","messageId":"570","endLine":5,"endColumn":22},{"ruleId":"581","severity":1,"message":"582","line":48,"column":15,"nodeType":"583","messageId":"584","endLine":48,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":52,"column":15,"nodeType":"583","messageId":"584","endLine":52,"endColumn":17},{"ruleId":"567","severity":1,"message":"588","line":1,"column":26,"nodeType":"569","messageId":"570","endLine":1,"endColumn":35},{"ruleId":"567","severity":1,"message":"586","line":6,"column":15,"nodeType":"569","messageId":"570","endLine":6,"endColumn":23},{"ruleId":"567","severity":1,"message":"589","line":6,"column":25,"nodeType":"569","messageId":"570","endLine":6,"endColumn":35},{"ruleId":"581","severity":1,"message":"582","line":49,"column":21,"nodeType":"583","messageId":"584","endLine":49,"endColumn":23},{"ruleId":"581","severity":1,"message":"582","line":59,"column":38,"nodeType":"583","messageId":"584","endLine":59,"endColumn":40},{"ruleId":"581","severity":1,"message":"582","line":69,"column":46,"nodeType":"583","messageId":"584","endLine":69,"endColumn":48},{"ruleId":"590","severity":1,"message":"591","line":81,"column":9,"nodeType":"592","messageId":"584","endLine":82,"endColumn":47},{"ruleId":"590","severity":1,"message":"591","line":83,"column":9,"nodeType":"592","messageId":"584","endLine":84,"endColumn":38},{"ruleId":"593","severity":1,"message":"594","line":107,"column":13,"nodeType":"595","messageId":"596","endLine":107,"endColumn":19},{"ruleId":"567","severity":1,"message":"597","line":5,"column":9,"nodeType":"569","messageId":"570","endLine":5,"endColumn":13},{"ruleId":"567","severity":1,"message":"586","line":5,"column":15,"nodeType":"569","messageId":"570","endLine":5,"endColumn":23},{"ruleId":"567","severity":1,"message":"598","line":8,"column":8,"nodeType":"569","messageId":"570","endLine":8,"endColumn":13},{"ruleId":"581","severity":1,"message":"582","line":57,"column":46,"nodeType":"583","messageId":"584","endLine":57,"endColumn":48},{"ruleId":"575","severity":1,"message":"599","line":67,"column":7,"nodeType":"577","endLine":67,"endColumn":14,"suggestions":"600"},{"ruleId":"581","severity":1,"message":"582","line":70,"column":15,"nodeType":"583","messageId":"584","endLine":70,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":78,"column":15,"nodeType":"583","messageId":"584","endLine":78,"endColumn":17},{"ruleId":"567","severity":1,"message":"586","line":9,"column":39,"nodeType":"569","messageId":"570","endLine":9,"endColumn":47},{"ruleId":"567","severity":1,"message":"601","line":23,"column":12,"nodeType":"569","messageId":"570","endLine":23,"endColumn":24},{"ruleId":"567","severity":1,"message":"602","line":23,"column":26,"nodeType":"569","messageId":"570","endLine":23,"endColumn":41},{"ruleId":"581","severity":1,"message":"582","line":37,"column":59,"nodeType":"583","messageId":"584","endLine":37,"endColumn":61},{"ruleId":"581","severity":1,"message":"582","line":38,"column":60,"nodeType":"583","messageId":"584","endLine":38,"endColumn":62},{"ruleId":"581","severity":1,"message":"582","line":39,"column":58,"nodeType":"583","messageId":"584","endLine":39,"endColumn":60},{"ruleId":"581","severity":1,"message":"582","line":40,"column":58,"nodeType":"583","messageId":"584","endLine":40,"endColumn":60},{"ruleId":"581","severity":1,"message":"582","line":41,"column":56,"nodeType":"583","messageId":"584","endLine":41,"endColumn":58},{"ruleId":"575","severity":1,"message":"603","line":43,"column":7,"nodeType":"577","endLine":43,"endColumn":9,"suggestions":"604"},{"ruleId":"575","severity":1,"message":"605","line":51,"column":7,"nodeType":"577","endLine":51,"endColumn":19,"suggestions":"606"},{"ruleId":"581","severity":1,"message":"582","line":63,"column":50,"nodeType":"583","messageId":"584","endLine":63,"endColumn":52},{"ruleId":"575","severity":1,"message":"605","line":73,"column":7,"nodeType":"577","endLine":73,"endColumn":18,"suggestions":"607"},{"ruleId":"581","severity":1,"message":"582","line":76,"column":15,"nodeType":"583","messageId":"584","endLine":76,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":82,"column":15,"nodeType":"583","messageId":"584","endLine":82,"endColumn":17},{"ruleId":"608","severity":1,"message":"609","line":104,"column":20,"nodeType":"610","messageId":"611","endLine":104,"endColumn":65},{"ruleId":"581","severity":1,"message":"582","line":120,"column":71,"nodeType":"583","messageId":"584","endLine":120,"endColumn":73},{"ruleId":"581","severity":1,"message":"582","line":138,"column":74,"nodeType":"583","messageId":"584","endLine":138,"endColumn":76},{"ruleId":"567","severity":1,"message":"612","line":16,"column":11,"nodeType":"569","messageId":"570","endLine":16,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":106,"column":54,"nodeType":"583","messageId":"584","endLine":106,"endColumn":56},{"ruleId":"575","severity":1,"message":"576","line":116,"column":7,"nodeType":"577","endLine":116,"endColumn":9,"suggestions":"613"},{"ruleId":"581","severity":1,"message":"582","line":119,"column":15,"nodeType":"583","messageId":"584","endLine":119,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":123,"column":15,"nodeType":"583","messageId":"584","endLine":123,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":137,"column":38,"nodeType":"583","messageId":"584","endLine":137,"endColumn":40},{"ruleId":"581","severity":1,"message":"585","line":140,"column":41,"nodeType":"583","messageId":"584","endLine":140,"endColumn":43},{"ruleId":"567","severity":1,"message":"586","line":4,"column":15,"nodeType":"569","messageId":"570","endLine":4,"endColumn":23},{"ruleId":"567","severity":1,"message":"612","line":14,"column":11,"nodeType":"569","messageId":"570","endLine":14,"endColumn":18},{"ruleId":"575","severity":1,"message":"614","line":48,"column":7,"nodeType":"577","endLine":48,"endColumn":17,"suggestions":"615"},{"ruleId":"581","severity":1,"message":"582","line":51,"column":16,"nodeType":"583","messageId":"584","endLine":51,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":55,"column":16,"nodeType":"583","messageId":"584","endLine":55,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":59,"column":15,"nodeType":"583","messageId":"584","endLine":59,"endColumn":17},{"ruleId":"616","severity":1,"message":"617","line":77,"column":21,"nodeType":"618","endLine":77,"endColumn":91},{"ruleId":"616","severity":1,"message":"617","line":82,"column":17,"nodeType":"618","endLine":82,"endColumn":52},{"ruleId":"567","severity":1,"message":"586","line":9,"column":27,"nodeType":"569","messageId":"570","endLine":9,"endColumn":35},{"ruleId":"581","severity":1,"message":"582","line":58,"column":50,"nodeType":"583","messageId":"584","endLine":58,"endColumn":52},{"ruleId":"575","severity":1,"message":"605","line":68,"column":8,"nodeType":"577","endLine":68,"endColumn":10,"suggestions":"619"},{"ruleId":"581","severity":1,"message":"582","line":77,"column":47,"nodeType":"583","messageId":"584","endLine":77,"endColumn":49},{"ruleId":"581","severity":1,"message":"582","line":164,"column":15,"nodeType":"583","messageId":"584","endLine":164,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":170,"column":15,"nodeType":"583","messageId":"584","endLine":170,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":90,"column":50,"nodeType":"583","messageId":"584","endLine":90,"endColumn":52},{"ruleId":"575","severity":1,"message":"605","line":101,"column":8,"nodeType":"577","endLine":101,"endColumn":10,"suggestions":"620"},{"ruleId":"581","severity":1,"message":"582","line":104,"column":15,"nodeType":"583","messageId":"584","endLine":104,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":110,"column":15,"nodeType":"583","messageId":"584","endLine":110,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":115,"column":16,"nodeType":"583","messageId":"584","endLine":115,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":121,"column":16,"nodeType":"583","messageId":"584","endLine":121,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":127,"column":27,"nodeType":"583","messageId":"584","endLine":127,"endColumn":29},{"ruleId":"621","severity":1,"message":"622","line":140,"column":21,"nodeType":"623","messageId":"584","endLine":140,"endColumn":31},{"ruleId":"581","severity":1,"message":"582","line":250,"column":38,"nodeType":"583","messageId":"584","endLine":250,"endColumn":40},{"ruleId":"581","severity":1,"message":"585","line":253,"column":41,"nodeType":"583","messageId":"584","endLine":253,"endColumn":43},{"ruleId":"624","severity":1,"message":"625","line":320,"column":33,"nodeType":"618","endLine":320,"endColumn":128},{"ruleId":"567","severity":1,"message":"626","line":5,"column":22,"nodeType":"569","messageId":"570","endLine":5,"endColumn":31},{"ruleId":"567","severity":1,"message":"627","line":15,"column":12,"nodeType":"569","messageId":"570","endLine":15,"endColumn":18},{"ruleId":"567","severity":1,"message":"628","line":15,"column":20,"nodeType":"569","messageId":"570","endLine":15,"endColumn":29},{"ruleId":"567","severity":1,"message":"629","line":26,"column":11,"nodeType":"569","messageId":"570","endLine":26,"endColumn":25},{"ruleId":"575","severity":1,"message":"605","line":46,"column":7,"nodeType":"577","endLine":46,"endColumn":11,"suggestions":"630"},{"ruleId":"575","severity":1,"message":"605","line":54,"column":7,"nodeType":"577","endLine":54,"endColumn":21,"suggestions":"631"},{"ruleId":"575","severity":1,"message":"605","line":62,"column":8,"nodeType":"577","endLine":62,"endColumn":23,"suggestions":"632"},{"ruleId":"575","severity":1,"message":"605","line":79,"column":7,"nodeType":"577","endLine":79,"endColumn":23,"suggestions":"633"},{"ruleId":"581","severity":1,"message":"582","line":82,"column":15,"nodeType":"583","messageId":"584","endLine":82,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":88,"column":15,"nodeType":"583","messageId":"584","endLine":88,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":93,"column":16,"nodeType":"583","messageId":"584","endLine":93,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":99,"column":16,"nodeType":"583","messageId":"584","endLine":99,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":112,"column":72,"nodeType":"583","messageId":"584","endLine":112,"endColumn":74},{"ruleId":"581","severity":1,"message":"582","line":130,"column":74,"nodeType":"583","messageId":"584","endLine":130,"endColumn":76},{"ruleId":"581","severity":1,"message":"582","line":148,"column":76,"nodeType":"583","messageId":"584","endLine":148,"endColumn":78},{"ruleId":"581","severity":1,"message":"582","line":179,"column":38,"nodeType":"583","messageId":"584","endLine":179,"endColumn":40},{"ruleId":"567","severity":1,"message":"629","line":21,"column":11,"nodeType":"569","messageId":"570","endLine":21,"endColumn":25},{"ruleId":"581","severity":1,"message":"582","line":69,"column":50,"nodeType":"583","messageId":"584","endLine":69,"endColumn":52},{"ruleId":"575","severity":1,"message":"634","line":93,"column":7,"nodeType":"577","endLine":93,"endColumn":9,"suggestions":"635"},{"ruleId":"581","severity":1,"message":"582","line":96,"column":15,"nodeType":"583","messageId":"584","endLine":96,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":102,"column":15,"nodeType":"583","messageId":"584","endLine":102,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":107,"column":16,"nodeType":"583","messageId":"584","endLine":107,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":113,"column":16,"nodeType":"583","messageId":"584","endLine":113,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":185,"column":38,"nodeType":"583","messageId":"584","endLine":185,"endColumn":40},{"ruleId":"567","severity":1,"message":"589","line":2,"column":15,"nodeType":"569","messageId":"570","endLine":2,"endColumn":25},{"ruleId":"581","severity":1,"message":"582","line":75,"column":48,"nodeType":"583","messageId":"584","endLine":75,"endColumn":50},{"ruleId":"575","severity":1,"message":"605","line":85,"column":7,"nodeType":"577","endLine":85,"endColumn":9,"suggestions":"636"},{"ruleId":"581","severity":1,"message":"582","line":109,"column":42,"nodeType":"583","messageId":"584","endLine":109,"endColumn":44},{"ruleId":"581","severity":1,"message":"585","line":112,"column":42,"nodeType":"583","messageId":"584","endLine":112,"endColumn":44},{"ruleId":"581","severity":1,"message":"582","line":132,"column":16,"nodeType":"583","messageId":"584","endLine":132,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":136,"column":16,"nodeType":"583","messageId":"584","endLine":136,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":141,"column":16,"nodeType":"583","messageId":"584","endLine":141,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":147,"column":16,"nodeType":"583","messageId":"584","endLine":147,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":157,"column":66,"nodeType":"583","messageId":"584","endLine":157,"endColumn":68},{"ruleId":"567","severity":1,"message":"637","line":10,"column":8,"nodeType":"569","messageId":"570","endLine":10,"endColumn":11},{"ruleId":"575","severity":1,"message":"605","line":65,"column":8,"nodeType":"577","endLine":65,"endColumn":10,"suggestions":"638"},{"ruleId":"581","severity":1,"message":"582","line":78,"column":50,"nodeType":"583","messageId":"584","endLine":78,"endColumn":52},{"ruleId":"575","severity":1,"message":"605","line":88,"column":7,"nodeType":"577","endLine":88,"endColumn":9,"suggestions":"639"},{"ruleId":"581","severity":1,"message":"585","line":96,"column":65,"nodeType":"583","messageId":"584","endLine":96,"endColumn":67},{"ruleId":"581","severity":1,"message":"582","line":101,"column":39,"nodeType":"583","messageId":"584","endLine":101,"endColumn":41},{"ruleId":"640","severity":1,"message":"641","line":106,"column":34,"nodeType":"642","messageId":"643","endLine":106,"endColumn":36},{"ruleId":"575","severity":1,"message":"605","line":112,"column":7,"nodeType":"577","endLine":112,"endColumn":20,"suggestions":"644"},{"ruleId":"575","severity":1,"message":"605","line":121,"column":7,"nodeType":"577","endLine":121,"endColumn":9,"suggestions":"645"},{"ruleId":"575","severity":1,"message":"646","line":133,"column":7,"nodeType":"577","endLine":133,"endColumn":9,"suggestions":"647"},{"ruleId":"575","severity":1,"message":"605","line":157,"column":7,"nodeType":"577","endLine":157,"endColumn":9,"suggestions":"648"},{"ruleId":"581","severity":1,"message":"582","line":176,"column":15,"nodeType":"583","messageId":"584","endLine":176,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":182,"column":15,"nodeType":"583","messageId":"584","endLine":182,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":187,"column":16,"nodeType":"583","messageId":"584","endLine":187,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":195,"column":16,"nodeType":"583","messageId":"584","endLine":195,"endColumn":18},{"ruleId":"621","severity":1,"message":"649","line":259,"column":41,"nodeType":"623","messageId":"584","endLine":259,"endColumn":47},{"ruleId":"567","severity":1,"message":"650","line":1,"column":28,"nodeType":"569","messageId":"570","endLine":1,"endColumn":34},{"ruleId":"567","severity":1,"message":"626","line":3,"column":22,"nodeType":"569","messageId":"570","endLine":3,"endColumn":31},{"ruleId":"567","severity":1,"message":"612","line":18,"column":11,"nodeType":"569","messageId":"570","endLine":18,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":40,"column":48,"nodeType":"583","messageId":"584","endLine":40,"endColumn":50},{"ruleId":"575","severity":1,"message":"605","line":50,"column":7,"nodeType":"577","endLine":50,"endColumn":11,"suggestions":"651"},{"ruleId":"581","severity":1,"message":"582","line":53,"column":15,"nodeType":"583","messageId":"584","endLine":53,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":59,"column":15,"nodeType":"583","messageId":"584","endLine":59,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":64,"column":16,"nodeType":"583","messageId":"584","endLine":64,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":70,"column":16,"nodeType":"583","messageId":"584","endLine":70,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":87,"column":38,"nodeType":"583","messageId":"584","endLine":87,"endColumn":40},{"ruleId":"581","severity":1,"message":"582","line":110,"column":35,"nodeType":"583","messageId":"584","endLine":110,"endColumn":37},{"ruleId":"581","severity":1,"message":"582","line":117,"column":35,"nodeType":"583","messageId":"584","endLine":117,"endColumn":37},{"ruleId":"567","severity":1,"message":"597","line":3,"column":9,"nodeType":"569","messageId":"570","endLine":3,"endColumn":13},{"ruleId":"567","severity":1,"message":"586","line":3,"column":15,"nodeType":"569","messageId":"570","endLine":3,"endColumn":23},{"ruleId":"581","severity":1,"message":"582","line":74,"column":46,"nodeType":"583","messageId":"584","endLine":74,"endColumn":48},{"ruleId":"575","severity":1,"message":"599","line":89,"column":7,"nodeType":"577","endLine":89,"endColumn":9,"suggestions":"652"},{"ruleId":"567","severity":1,"message":"653","line":109,"column":15,"nodeType":"569","messageId":"570","endLine":109,"endColumn":26},{"ruleId":"581","severity":1,"message":"582","line":155,"column":15,"nodeType":"583","messageId":"584","endLine":155,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":161,"column":15,"nodeType":"583","messageId":"584","endLine":161,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":183,"column":40,"nodeType":"583","messageId":"584","endLine":183,"endColumn":42},{"ruleId":"581","severity":1,"message":"582","line":183,"column":72,"nodeType":"583","messageId":"584","endLine":183,"endColumn":74},{"ruleId":"581","severity":1,"message":"582","line":183,"column":104,"nodeType":"583","messageId":"584","endLine":183,"endColumn":106},{"ruleId":"581","severity":1,"message":"582","line":189,"column":40,"nodeType":"583","messageId":"584","endLine":189,"endColumn":42},{"ruleId":"581","severity":1,"message":"582","line":189,"column":69,"nodeType":"583","messageId":"584","endLine":189,"endColumn":71},{"ruleId":"581","severity":1,"message":"582","line":189,"column":98,"nodeType":"583","messageId":"584","endLine":189,"endColumn":100},{"ruleId":"581","severity":1,"message":"582","line":195,"column":40,"nodeType":"583","messageId":"584","endLine":195,"endColumn":42},{"ruleId":"581","severity":1,"message":"582","line":195,"column":70,"nodeType":"583","messageId":"584","endLine":195,"endColumn":72},{"ruleId":"581","severity":1,"message":"582","line":195,"column":100,"nodeType":"583","messageId":"584","endLine":195,"endColumn":102},{"ruleId":"581","severity":1,"message":"582","line":195,"column":131,"nodeType":"583","messageId":"584","endLine":195,"endColumn":133},{"ruleId":"581","severity":1,"message":"582","line":195,"column":162,"nodeType":"583","messageId":"584","endLine":195,"endColumn":164},{"ruleId":"581","severity":1,"message":"582","line":201,"column":40,"nodeType":"583","messageId":"584","endLine":201,"endColumn":42},{"ruleId":"581","severity":1,"message":"582","line":201,"column":69,"nodeType":"583","messageId":"584","endLine":201,"endColumn":71},{"ruleId":"581","severity":1,"message":"582","line":207,"column":40,"nodeType":"583","messageId":"584","endLine":207,"endColumn":42},{"ruleId":"581","severity":1,"message":"582","line":207,"column":68,"nodeType":"583","messageId":"584","endLine":207,"endColumn":70},{"ruleId":"581","severity":1,"message":"582","line":213,"column":40,"nodeType":"583","messageId":"584","endLine":213,"endColumn":42},{"ruleId":"581","severity":1,"message":"582","line":213,"column":71,"nodeType":"583","messageId":"584","endLine":213,"endColumn":73},{"ruleId":"581","severity":1,"message":"582","line":213,"column":104,"nodeType":"583","messageId":"584","endLine":213,"endColumn":106},{"ruleId":"581","severity":1,"message":"582","line":219,"column":40,"nodeType":"583","messageId":"584","endLine":219,"endColumn":42},{"ruleId":"581","severity":1,"message":"582","line":219,"column":74,"nodeType":"583","messageId":"584","endLine":219,"endColumn":76},{"ruleId":"581","severity":1,"message":"582","line":219,"column":109,"nodeType":"583","messageId":"584","endLine":219,"endColumn":111},{"ruleId":"581","severity":1,"message":"582","line":219,"column":146,"nodeType":"583","messageId":"584","endLine":219,"endColumn":148},{"ruleId":"581","severity":1,"message":"585","line":226,"column":43,"nodeType":"583","messageId":"584","endLine":226,"endColumn":45},{"ruleId":"581","severity":1,"message":"585","line":227,"column":43,"nodeType":"583","messageId":"584","endLine":227,"endColumn":45},{"ruleId":"581","severity":1,"message":"585","line":228,"column":43,"nodeType":"583","messageId":"584","endLine":228,"endColumn":45},{"ruleId":"581","severity":1,"message":"585","line":229,"column":43,"nodeType":"583","messageId":"584","endLine":229,"endColumn":45},{"ruleId":"581","severity":1,"message":"585","line":230,"column":43,"nodeType":"583","messageId":"584","endLine":230,"endColumn":45},{"ruleId":"581","severity":1,"message":"585","line":231,"column":43,"nodeType":"583","messageId":"584","endLine":231,"endColumn":45},{"ruleId":"581","severity":1,"message":"585","line":232,"column":43,"nodeType":"583","messageId":"584","endLine":232,"endColumn":45},{"ruleId":"581","severity":1,"message":"585","line":233,"column":43,"nodeType":"583","messageId":"584","endLine":233,"endColumn":45},{"ruleId":"581","severity":1,"message":"585","line":234,"column":43,"nodeType":"583","messageId":"584","endLine":234,"endColumn":45},{"ruleId":"581","severity":1,"message":"585","line":235,"column":43,"nodeType":"583","messageId":"584","endLine":235,"endColumn":45},{"ruleId":"581","severity":1,"message":"585","line":236,"column":43,"nodeType":"583","messageId":"584","endLine":236,"endColumn":45},{"ruleId":"581","severity":1,"message":"585","line":237,"column":43,"nodeType":"583","messageId":"584","endLine":237,"endColumn":45},{"ruleId":"581","severity":1,"message":"585","line":238,"column":43,"nodeType":"583","messageId":"584","endLine":238,"endColumn":45},{"ruleId":"581","severity":1,"message":"585","line":239,"column":43,"nodeType":"583","messageId":"584","endLine":239,"endColumn":45},{"ruleId":"581","severity":1,"message":"585","line":240,"column":43,"nodeType":"583","messageId":"584","endLine":240,"endColumn":45},{"ruleId":"581","severity":1,"message":"585","line":241,"column":43,"nodeType":"583","messageId":"584","endLine":241,"endColumn":45},{"ruleId":"581","severity":1,"message":"585","line":242,"column":43,"nodeType":"583","messageId":"584","endLine":242,"endColumn":45},{"ruleId":"581","severity":1,"message":"585","line":243,"column":43,"nodeType":"583","messageId":"584","endLine":243,"endColumn":45},{"ruleId":"581","severity":1,"message":"585","line":244,"column":43,"nodeType":"583","messageId":"584","endLine":244,"endColumn":45},{"ruleId":"581","severity":1,"message":"585","line":245,"column":43,"nodeType":"583","messageId":"584","endLine":245,"endColumn":45},{"ruleId":"581","severity":1,"message":"585","line":246,"column":43,"nodeType":"583","messageId":"584","endLine":246,"endColumn":45},{"ruleId":"581","severity":1,"message":"585","line":247,"column":43,"nodeType":"583","messageId":"584","endLine":247,"endColumn":45},{"ruleId":"654","severity":1,"message":"655","line":13,"column":17,"nodeType":"656","messageId":"657","endLine":13,"endColumn":86},{"ruleId":"581","severity":1,"message":"582","line":13,"column":30,"nodeType":"583","messageId":"584","endLine":13,"endColumn":32},{"ruleId":"581","severity":1,"message":"582","line":19,"column":20,"nodeType":"583","messageId":"584","endLine":19,"endColumn":22},{"ruleId":"654","severity":1,"message":"655","line":15,"column":17,"nodeType":"656","messageId":"657","endLine":15,"endColumn":69},{"ruleId":"581","severity":1,"message":"582","line":15,"column":28,"nodeType":"583","messageId":"584","endLine":15,"endColumn":30},{"ruleId":"567","severity":1,"message":"589","line":3,"column":9,"nodeType":"569","messageId":"570","endLine":3,"endColumn":19},{"ruleId":"567","severity":1,"message":"586","line":3,"column":27,"nodeType":"569","messageId":"570","endLine":3,"endColumn":35},{"ruleId":"581","severity":1,"message":"585","line":40,"column":26,"nodeType":"583","messageId":"584","endLine":40,"endColumn":28},{"ruleId":"581","severity":1,"message":"582","line":43,"column":46,"nodeType":"583","messageId":"584","endLine":43,"endColumn":48},{"ruleId":"575","severity":1,"message":"658","line":53,"column":7,"nodeType":"577","endLine":53,"endColumn":11,"suggestions":"659"},{"ruleId":"581","severity":1,"message":"582","line":56,"column":16,"nodeType":"583","messageId":"584","endLine":56,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":60,"column":16,"nodeType":"583","messageId":"584","endLine":60,"endColumn":18},{"ruleId":"581","severity":1,"message":"585","line":103,"column":68,"nodeType":"583","messageId":"584","endLine":103,"endColumn":70},{"ruleId":"567","severity":1,"message":"589","line":6,"column":15,"nodeType":"569","messageId":"570","endLine":6,"endColumn":25},{"ruleId":"581","severity":1,"message":"582","line":75,"column":46,"nodeType":"583","messageId":"584","endLine":75,"endColumn":48},{"ruleId":"575","severity":1,"message":"605","line":85,"column":7,"nodeType":"577","endLine":85,"endColumn":16,"suggestions":"660"},{"ruleId":"581","severity":1,"message":"582","line":110,"column":38,"nodeType":"583","messageId":"584","endLine":110,"endColumn":40},{"ruleId":"581","severity":1,"message":"585","line":113,"column":41,"nodeType":"583","messageId":"584","endLine":113,"endColumn":43},{"ruleId":"581","severity":1,"message":"582","line":131,"column":16,"nodeType":"583","messageId":"584","endLine":131,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":135,"column":16,"nodeType":"583","messageId":"584","endLine":135,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":140,"column":16,"nodeType":"583","messageId":"584","endLine":140,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":146,"column":16,"nodeType":"583","messageId":"584","endLine":146,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":55,"column":15,"nodeType":"583","messageId":"584","endLine":55,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":61,"column":15,"nodeType":"583","messageId":"584","endLine":61,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":66,"column":16,"nodeType":"583","messageId":"584","endLine":66,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":72,"column":16,"nodeType":"583","messageId":"584","endLine":72,"endColumn":18},{"ruleId":"575","severity":1,"message":"605","line":31,"column":7,"nodeType":"577","endLine":31,"endColumn":11,"suggestions":"661"},{"ruleId":"581","severity":1,"message":"582","line":66,"column":15,"nodeType":"583","messageId":"584","endLine":66,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":72,"column":15,"nodeType":"583","messageId":"584","endLine":72,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":77,"column":16,"nodeType":"583","messageId":"584","endLine":77,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":83,"column":16,"nodeType":"583","messageId":"584","endLine":83,"endColumn":18},{"ruleId":"567","severity":1,"message":"589","line":6,"column":15,"nodeType":"569","messageId":"570","endLine":6,"endColumn":25},{"ruleId":"581","severity":1,"message":"582","line":75,"column":46,"nodeType":"583","messageId":"584","endLine":75,"endColumn":48},{"ruleId":"575","severity":1,"message":"605","line":85,"column":7,"nodeType":"577","endLine":85,"endColumn":16,"suggestions":"662"},{"ruleId":"581","severity":1,"message":"582","line":110,"column":38,"nodeType":"583","messageId":"584","endLine":110,"endColumn":40},{"ruleId":"581","severity":1,"message":"585","line":113,"column":44,"nodeType":"583","messageId":"584","endLine":113,"endColumn":46},{"ruleId":"581","severity":1,"message":"582","line":131,"column":16,"nodeType":"583","messageId":"584","endLine":131,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":135,"column":16,"nodeType":"583","messageId":"584","endLine":135,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":140,"column":16,"nodeType":"583","messageId":"584","endLine":140,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":146,"column":16,"nodeType":"583","messageId":"584","endLine":146,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":52,"column":15,"nodeType":"583","messageId":"584","endLine":52,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":60,"column":15,"nodeType":"583","messageId":"584","endLine":60,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":64,"column":16,"nodeType":"583","messageId":"584","endLine":64,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":72,"column":16,"nodeType":"583","messageId":"584","endLine":72,"endColumn":18},{"ruleId":"575","severity":1,"message":"605","line":31,"column":7,"nodeType":"577","endLine":31,"endColumn":11,"suggestions":"663"},{"ruleId":"581","severity":1,"message":"582","line":67,"column":14,"nodeType":"583","messageId":"584","endLine":67,"endColumn":16},{"ruleId":"581","severity":1,"message":"582","line":73,"column":15,"nodeType":"583","messageId":"584","endLine":73,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":78,"column":16,"nodeType":"583","messageId":"584","endLine":78,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":84,"column":16,"nodeType":"583","messageId":"584","endLine":84,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":55,"column":15,"nodeType":"583","messageId":"584","endLine":55,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":61,"column":15,"nodeType":"583","messageId":"584","endLine":61,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":66,"column":16,"nodeType":"583","messageId":"584","endLine":66,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":72,"column":16,"nodeType":"583","messageId":"584","endLine":72,"endColumn":18},{"ruleId":"575","severity":1,"message":"605","line":31,"column":7,"nodeType":"577","endLine":31,"endColumn":11,"suggestions":"664"},{"ruleId":"581","severity":1,"message":"582","line":65,"column":15,"nodeType":"583","messageId":"584","endLine":65,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":73,"column":15,"nodeType":"583","messageId":"584","endLine":73,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":77,"column":16,"nodeType":"583","messageId":"584","endLine":77,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":85,"column":16,"nodeType":"583","messageId":"584","endLine":85,"endColumn":18},{"ruleId":"567","severity":1,"message":"589","line":6,"column":15,"nodeType":"569","messageId":"570","endLine":6,"endColumn":25},{"ruleId":"581","severity":1,"message":"582","line":75,"column":46,"nodeType":"583","messageId":"584","endLine":75,"endColumn":48},{"ruleId":"575","severity":1,"message":"605","line":85,"column":7,"nodeType":"577","endLine":85,"endColumn":16,"suggestions":"665"},{"ruleId":"581","severity":1,"message":"582","line":110,"column":38,"nodeType":"583","messageId":"584","endLine":110,"endColumn":40},{"ruleId":"581","severity":1,"message":"585","line":113,"column":45,"nodeType":"583","messageId":"584","endLine":113,"endColumn":47},{"ruleId":"581","severity":1,"message":"582","line":131,"column":16,"nodeType":"583","messageId":"584","endLine":131,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":135,"column":16,"nodeType":"583","messageId":"584","endLine":135,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":140,"column":16,"nodeType":"583","messageId":"584","endLine":140,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":146,"column":16,"nodeType":"583","messageId":"584","endLine":146,"endColumn":18},{"ruleId":"567","severity":1,"message":"589","line":6,"column":15,"nodeType":"569","messageId":"570","endLine":6,"endColumn":25},{"ruleId":"581","severity":1,"message":"582","line":75,"column":46,"nodeType":"583","messageId":"584","endLine":75,"endColumn":48},{"ruleId":"575","severity":1,"message":"605","line":85,"column":7,"nodeType":"577","endLine":85,"endColumn":16,"suggestions":"666"},{"ruleId":"581","severity":1,"message":"582","line":110,"column":38,"nodeType":"583","messageId":"584","endLine":110,"endColumn":40},{"ruleId":"581","severity":1,"message":"585","line":113,"column":42,"nodeType":"583","messageId":"584","endLine":113,"endColumn":44},{"ruleId":"581","severity":1,"message":"582","line":131,"column":16,"nodeType":"583","messageId":"584","endLine":131,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":135,"column":16,"nodeType":"583","messageId":"584","endLine":135,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":140,"column":16,"nodeType":"583","messageId":"584","endLine":140,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":146,"column":16,"nodeType":"583","messageId":"584","endLine":146,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":55,"column":15,"nodeType":"583","messageId":"584","endLine":55,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":61,"column":15,"nodeType":"583","messageId":"584","endLine":61,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":66,"column":16,"nodeType":"583","messageId":"584","endLine":66,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":72,"column":16,"nodeType":"583","messageId":"584","endLine":72,"endColumn":18},{"ruleId":"575","severity":1,"message":"605","line":31,"column":7,"nodeType":"577","endLine":31,"endColumn":11,"suggestions":"667"},{"ruleId":"581","severity":1,"message":"582","line":66,"column":15,"nodeType":"583","messageId":"584","endLine":66,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":72,"column":15,"nodeType":"583","messageId":"584","endLine":72,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":77,"column":16,"nodeType":"583","messageId":"584","endLine":77,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":83,"column":16,"nodeType":"583","messageId":"584","endLine":83,"endColumn":18},{"ruleId":"567","severity":1,"message":"589","line":6,"column":15,"nodeType":"569","messageId":"570","endLine":6,"endColumn":25},{"ruleId":"581","severity":1,"message":"582","line":74,"column":46,"nodeType":"583","messageId":"584","endLine":74,"endColumn":48},{"ruleId":"575","severity":1,"message":"605","line":84,"column":7,"nodeType":"577","endLine":84,"endColumn":16,"suggestions":"668"},{"ruleId":"581","severity":1,"message":"582","line":109,"column":38,"nodeType":"583","messageId":"584","endLine":109,"endColumn":40},{"ruleId":"581","severity":1,"message":"585","line":112,"column":42,"nodeType":"583","messageId":"584","endLine":112,"endColumn":44},{"ruleId":"581","severity":1,"message":"582","line":130,"column":15,"nodeType":"583","messageId":"584","endLine":130,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":134,"column":16,"nodeType":"583","messageId":"584","endLine":134,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":139,"column":16,"nodeType":"583","messageId":"584","endLine":139,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":145,"column":16,"nodeType":"583","messageId":"584","endLine":145,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":149,"column":16,"nodeType":"583","messageId":"584","endLine":149,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":55,"column":16,"nodeType":"583","messageId":"584","endLine":55,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":61,"column":15,"nodeType":"583","messageId":"584","endLine":61,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":66,"column":16,"nodeType":"583","messageId":"584","endLine":66,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":72,"column":16,"nodeType":"583","messageId":"584","endLine":72,"endColumn":18},{"ruleId":"575","severity":1,"message":"605","line":31,"column":7,"nodeType":"577","endLine":31,"endColumn":11,"suggestions":"669"},{"ruleId":"581","severity":1,"message":"582","line":66,"column":15,"nodeType":"583","messageId":"584","endLine":66,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":72,"column":15,"nodeType":"583","messageId":"584","endLine":72,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":77,"column":16,"nodeType":"583","messageId":"584","endLine":77,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":83,"column":16,"nodeType":"583","messageId":"584","endLine":83,"endColumn":18},{"ruleId":"567","severity":1,"message":"589","line":6,"column":15,"nodeType":"569","messageId":"570","endLine":6,"endColumn":25},{"ruleId":"581","severity":1,"message":"582","line":75,"column":46,"nodeType":"583","messageId":"584","endLine":75,"endColumn":48},{"ruleId":"575","severity":1,"message":"605","line":85,"column":7,"nodeType":"577","endLine":85,"endColumn":16,"suggestions":"670"},{"ruleId":"581","severity":1,"message":"582","line":110,"column":38,"nodeType":"583","messageId":"584","endLine":110,"endColumn":40},{"ruleId":"581","severity":1,"message":"585","line":113,"column":41,"nodeType":"583","messageId":"584","endLine":113,"endColumn":43},{"ruleId":"581","severity":1,"message":"582","line":126,"column":16,"nodeType":"583","messageId":"584","endLine":126,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":130,"column":16,"nodeType":"583","messageId":"584","endLine":130,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":135,"column":16,"nodeType":"583","messageId":"584","endLine":135,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":141,"column":16,"nodeType":"583","messageId":"584","endLine":141,"endColumn":18},{"ruleId":"567","severity":1,"message":"671","line":30,"column":23,"nodeType":"569","messageId":"570","endLine":30,"endColumn":27},{"ruleId":"575","severity":1,"message":"605","line":34,"column":7,"nodeType":"577","endLine":34,"endColumn":11,"suggestions":"672"},{"ruleId":"581","severity":1,"message":"582","line":75,"column":15,"nodeType":"583","messageId":"584","endLine":75,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":81,"column":15,"nodeType":"583","messageId":"584","endLine":81,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":86,"column":16,"nodeType":"583","messageId":"584","endLine":86,"endColumn":18},{"ruleId":"581","severity":1,"message":"582","line":92,"column":16,"nodeType":"583","messageId":"584","endLine":92,"endColumn":18},{"ruleId":"567","severity":1,"message":"673","line":5,"column":24,"nodeType":"569","messageId":"570","endLine":5,"endColumn":42},{"ruleId":"567","severity":1,"message":"597","line":6,"column":9,"nodeType":"569","messageId":"570","endLine":6,"endColumn":13},{"ruleId":"567","severity":1,"message":"586","line":6,"column":15,"nodeType":"569","messageId":"570","endLine":6,"endColumn":23},{"ruleId":"567","severity":1,"message":"674","line":8,"column":8,"nodeType":"569","messageId":"570","endLine":8,"endColumn":16},{"ruleId":"567","severity":1,"message":"598","line":9,"column":8,"nodeType":"569","messageId":"570","endLine":9,"endColumn":13},{"ruleId":"567","severity":1,"message":"637","line":12,"column":8,"nodeType":"569","messageId":"570","endLine":12,"endColumn":11},{"ruleId":"581","severity":1,"message":"582","line":43,"column":46,"nodeType":"583","messageId":"584","endLine":43,"endColumn":48},{"ruleId":"575","severity":1,"message":"605","line":53,"column":7,"nodeType":"577","endLine":53,"endColumn":14,"suggestions":"675"},{"ruleId":"581","severity":1,"message":"582","line":56,"column":15,"nodeType":"583","messageId":"584","endLine":56,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":62,"column":15,"nodeType":"583","messageId":"584","endLine":62,"endColumn":17},{"ruleId":"567","severity":1,"message":"588","line":1,"column":26,"nodeType":"569","messageId":"570","endLine":1,"endColumn":35},{"ruleId":"567","severity":1,"message":"650","line":1,"column":37,"nodeType":"569","messageId":"570","endLine":1,"endColumn":43},{"ruleId":"567","severity":1,"message":"586","line":5,"column":15,"nodeType":"569","messageId":"570","endLine":5,"endColumn":23},{"ruleId":"567","severity":1,"message":"589","line":5,"column":25,"nodeType":"569","messageId":"570","endLine":5,"endColumn":35},{"ruleId":"567","severity":1,"message":"588","line":1,"column":26,"nodeType":"569","messageId":"570","endLine":1,"endColumn":35},{"ruleId":"567","severity":1,"message":"676","line":15,"column":12,"nodeType":"569","messageId":"570","endLine":15,"endColumn":16},{"ruleId":"567","severity":1,"message":"677","line":15,"column":18,"nodeType":"569","messageId":"570","endLine":15,"endColumn":25},{"ruleId":"581","severity":1,"message":"582","line":33,"column":21,"nodeType":"583","messageId":"584","endLine":33,"endColumn":23},{"ruleId":"593","severity":1,"message":"594","line":60,"column":13,"nodeType":"595","messageId":"596","endLine":60,"endColumn":19},"no-native-reassign",["678"],"no-negated-in-lhs",["679"],"no-unused-vars","'HttpsRedirect' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'JsonWebTokenError' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["680"],"React Hook useEffect contains a call to 'setIsAdmin'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [permission] as a second argument to the useEffect Hook.",["681"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'Redirect' is defined but never used.","'BASE_URL_BACK' is defined but never used.","'useEffect' is defined but never used.","'useHistory' is defined but never used.","no-duplicate-case","Duplicate case label.","SwitchCase","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'Link' is defined but never used.","'Birds' is defined but never used.","React Hook useEffect has missing dependencies: 'configAxios' and 'id'. Either include them or remove the dependency array.",["682"],"'redirectPage' is assigned a value but never used.","'setRedirectPage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'configAxios', 'id', and 'jwtId.id'. Either include them or remove the dependency array.",["683"],"React Hook useEffect has a missing dependency: 'configAxios'. Either include it or remove the dependency array.",["684"],["685"],"no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'history' is assigned a value but never used.",["686"],"React Hook useEffect has missing dependencies: 'configAxios' and 'user.id'. Either include them or remove the dependency array.",["687"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["688"],["689"],"no-dupe-keys","Duplicate key 'retrieve'.","ObjectExpression","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'useParams' is defined but never used.","'typeId' is assigned a value but never used.","'setTypeId' is assigned a value but never used.","'refCardEdition' is assigned a value but never used.",["690"],["691"],["692"],["693"],"React Hook useEffect has missing dependencies: 'configAxios' and 'props.match.params.id'. Either include them or remove the dependency array.",["694"],["695"],"'jwt' is defined but never used.",["696"],["697"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["698"],["699"],"React Hook useEffect has missing dependencies: 'configAxios' and 'isAdmin'. Either include them or remove the dependency array.",["700"],["701"],"Duplicate key 'legend'.","'useRef' is defined but never used.",["702"],["703"],"'colorPicker' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has missing dependencies: 'configAxios' and 'token'. Either include them or remove the dependency array.",["704"],["705"],["706"],["707"],["708"],["709"],["710"],["711"],["712"],["713"],["714"],["715"],"'code' is assigned a value but never used.",["716"],"'BASE_URL_API_MAGIC' is defined but never used.","'BackCard' is defined but never used.",["717"],"'name' is assigned a value but never used.","'setName' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"718","fix":"719"},{"desc":"720","fix":"721"},{"desc":"722","fix":"723"},{"desc":"724","fix":"725"},{"desc":"726","fix":"727"},{"desc":"728","fix":"729"},{"desc":"718","fix":"730"},{"desc":"731","fix":"732"},{"desc":"733","fix":"734"},{"desc":"733","fix":"735"},{"desc":"736","fix":"737"},{"desc":"738","fix":"739"},{"desc":"740","fix":"741"},{"desc":"742","fix":"743"},{"desc":"744","fix":"745"},{"desc":"733","fix":"746"},{"desc":"733","fix":"747"},{"desc":"733","fix":"748"},{"desc":"749","fix":"750"},{"desc":"733","fix":"751"},{"desc":"752","fix":"753"},{"desc":"733","fix":"754"},{"desc":"736","fix":"755"},{"desc":"736","fix":"756"},{"desc":"757","fix":"758"},{"desc":"752","fix":"759"},{"desc":"736","fix":"760"},{"desc":"752","fix":"761"},{"desc":"736","fix":"762"},{"desc":"736","fix":"763"},{"desc":"752","fix":"764"},{"desc":"752","fix":"765"},{"desc":"736","fix":"766"},{"desc":"752","fix":"767"},{"desc":"736","fix":"768"},{"desc":"752","fix":"769"},{"desc":"736","fix":"770"},{"desc":"771","fix":"772"},"Update the dependencies array to be: [token]",{"range":"773","text":"774"},"Add dependencies array: [permission]",{"range":"775","text":"776"},"Update the dependencies array to be: [configAxios, id, urlId]",{"range":"777","text":"778"},"Update the dependencies array to be: [configAxios, id, jwtId.id]",{"range":"779","text":"780"},"Update the dependencies array to be: [configAxios, languageId]",{"range":"781","text":"782"},"Update the dependencies array to be: [configAxios, qualityId]",{"range":"783","text":"784"},{"range":"785","text":"774"},"Update the dependencies array to be: [configAxios, user.id, userName]",{"range":"786","text":"787"},"Update the dependencies array to be: [configAxios]",{"range":"788","text":"789"},{"range":"790","text":"789"},"Update the dependencies array to be: [configAxios, id]",{"range":"791","text":"792"},"Update the dependencies array to be: [card.type_id, configAxios]",{"range":"793","text":"794"},"Update the dependencies array to be: [card.color_id, configAxios]",{"range":"795","text":"796"},"Update the dependencies array to be: [card.rarity_id, configAxios]",{"range":"797","text":"798"},"Update the dependencies array to be: [configAxios, props.match.params.id]",{"range":"799","text":"800"},{"range":"801","text":"789"},{"range":"802","text":"789"},{"range":"803","text":"789"},"Update the dependencies array to be: [cardEdition, configAxios]",{"range":"804","text":"805"},{"range":"806","text":"789"},"Update the dependencies array to be: [configAxios, isAdmin]",{"range":"807","text":"808"},{"range":"809","text":"789"},{"range":"810","text":"792"},{"range":"811","text":"792"},"Update the dependencies array to be: [configAxios, id, token]",{"range":"812","text":"813"},{"range":"814","text":"808"},{"range":"815","text":"792"},{"range":"816","text":"808"},{"range":"817","text":"792"},{"range":"818","text":"792"},{"range":"819","text":"808"},{"range":"820","text":"808"},{"range":"821","text":"792"},{"range":"822","text":"808"},{"range":"823","text":"792"},{"range":"824","text":"808"},{"range":"825","text":"792"},"Update the dependencies array to be: [configAxios, urlId]",{"range":"826","text":"827"},[450,452],"[token]",[835,835],", [permission]",[2359,2366],"[configAxios, id, urlId]",[1903,1905],"[configAxios, id, jwtId.id]",[2164,2176],"[configAxios, languageId]",[3076,3087],"[configAxios, qualityId]",[5283,5285],[1811,1821],"[configAxios, user.id, userName]",[2699,2701],"[configAxios]",[3981,3983],[1870,1874],"[configAxios, id]",[2121,2135],"[card.type_id, configAxios]",[2386,2401],"[card.color_id, configAxios]",[3049,3065],"[card.rarity_id, configAxios]",[3682,3684],"[configAxios, props.match.params.id]",[3494,3496],[2534,2536],[3537,3539],[4381,4394],"[cardEdition, configAxios]",[4643,4645],[4985,4987],"[configAxios, isAdmin]",[5830,5832],[1979,1983],[3616,3618],[1894,1898],"[configAxios, id, token]",[3345,3354],[1141,1145],[3337,3346],[1162,1166],[1157,1161],[3337,3346],[3334,3343],[1150,1154],[3250,3259],[1134,1138],[3341,3350],[1324,1328],[1938,1945],"[configAxios, urlId]"]