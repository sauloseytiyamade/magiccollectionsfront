[{"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\index.js":"1","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\App.js":"2","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\reportWebVitals.js":"3","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\utils\\imports.js":"4","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\Pages\\Login\\index.js":"5","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\pages\\Login\\index.js":"6","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\utils\\variaveisAmbiente.js":"7","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\Routes.js":"8","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\pages\\Register\\index.js":"9","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\pages\\UserCollection\\index.js":"10","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\utils\\auth.js":"11","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\Modals\\index.js":"12","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\AddCards\\index.js":"13","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\utils\\messages.js":"14","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\EditCards\\index.js":"15","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\Cards\\index.js":"16","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\MenuLeft\\index.js":"17","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\cardView\\index.js":"18","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\Dashboard\\index.js":"19","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\CardView\\index.js":"20","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\EditionCards\\index.js":"21","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\Loading\\index.js":"22"},{"size":524,"mtime":1610319620110,"results":"23","hashOfConfig":"24"},{"size":228,"mtime":1611878460688,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"24"},{"size":2177,"mtime":1610992492772,"results":"27","hashOfConfig":"24"},{"size":122,"mtime":1610379275525,"results":"28","hashOfConfig":"24"},{"size":11321,"mtime":1611700656662,"results":"29","hashOfConfig":"24"},{"size":186,"mtime":1611702773772,"results":"30","hashOfConfig":"24"},{"size":586,"mtime":1610671410814,"results":"31","hashOfConfig":"24"},{"size":4056,"mtime":1611092486534,"results":"32","hashOfConfig":"24"},{"size":1868,"mtime":1611876044531,"results":"33","hashOfConfig":"24"},{"size":1136,"mtime":1611410285832,"results":"34","hashOfConfig":"24"},{"size":1243,"mtime":1611878713780,"results":"35","hashOfConfig":"24"},{"size":7176,"mtime":1611406841675,"results":"36","hashOfConfig":"24"},{"size":871,"mtime":1611399016272,"results":"37","hashOfConfig":"24"},{"size":6084,"mtime":1611404820914,"results":"38","hashOfConfig":"24"},{"size":9055,"mtime":1611880007061,"results":"39","hashOfConfig":"24"},{"size":3433,"mtime":1611876076078,"results":"40","hashOfConfig":"24"},{"size":1133,"mtime":1611411992344,"results":"41","hashOfConfig":"24"},{"size":17441,"mtime":1611880343330,"results":"42","hashOfConfig":"24"},{"size":2660,"mtime":1611879696018,"results":"43","hashOfConfig":"24"},{"size":10111,"mtime":1611876621739,"results":"44","hashOfConfig":"24"},{"size":1326,"mtime":1611879336052,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"8rafif",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\index.js",[],["97","98"],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\App.js",[],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\reportWebVitals.js",[],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\utils\\imports.js",[],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\Pages\\Login\\index.js",["99"],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\pages\\Login\\index.js",["100","101","102","103"],"import {React, useState,} from 'react';\r\nimport Logo from '../../img/logo.png'\r\nimport axios from 'axios'\r\nimport {BASE_URL_BACK} from '../../utils/variaveisAmbiente'\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css'; \r\nimport {messages} from '../../utils/messages'\r\nimport {Link} from 'react-router-dom'\r\nimport {BASE_URL_FRONT} from '../../utils/variaveisAmbiente'\r\nimport GoogleLogin from 'react-google-login'\r\nimport FacebookLogin from 'react-facebook-login'\r\n\r\n\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport './index.css'\r\n\r\nconst Login = (props) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    //Pega os valores de e-mail e adiciona no estado\r\n    const onChangeMail = evt => {\r\n        setEmail(evt.target.value)\r\n    }\r\n\r\n    //Pega os valores de password e adiciona no estado\r\n    const onChangePass = evt => {\r\n        setPassword(evt.target.value)\r\n    }\r\n\r\n    //Envia os dados para o backend validar\r\n    const sendBack = (evt) => {\r\n        evt.preventDefault()\r\n\r\n        const data = {\r\n            email,\r\n            password\r\n        }\r\n\r\n        //Faz uma requisição post para o backend\r\n        axios.post(`${BASE_URL_BACK}/login`,data)\r\n        .then(resp => {\r\n            //Caso o login seja feito, é gerado um token e adicionado no localstorage\r\n            //Também é gerada uma mensagem para o usuário\r\n            toast.success('Seja Bem-Vindo(a)!!!')\r\n            localStorage.setItem('token', resp.data.token)\r\n            setTimeout(() => {\r\n                window.location.href = `${BASE_URL_FRONT}/usercollection/dashboard`\r\n            }, 5000);\r\n        })\r\n        .catch(err => {\r\n            //Caso dê algum erro é enviada uma mensagem para o usuário\r\n            toast.info(messages(err.response.data.message))\r\n        })\r\n    }\r\n\r\n    //Esta função é utilizad para fazer login pelo google\r\n    const responseGoogle = (resp) => {\r\n        const {profileObj: {email, name, googleId}} = resp\r\n\r\n        //Verifica se existe algum usuário com o e-mail cadastrado no sistema\r\n        axios.get(`${BASE_URL_BACK}/users/${email}`)\r\n        .then(resp => {\r\n            if(resp.data.message == true){\r\n                const data = {\r\n                    email,\r\n                    password: googleId\r\n                }\r\n                //Se existir um usuário cadastrado no sistema ele tenta fazer o login\r\n                //Como existe três sistemas de login, optei por apresentar uma mensagem de erro genérica.\r\n                axios.post(`${BASE_URL_BACK}/login`,data)\r\n                .then(resp => {\r\n                    toast.success('Seja Bem-Vindo(a)!!!')\r\n                    localStorage.setItem('token', resp.data.token)\r\n                    setTimeout(() => {\r\n                        window.location.href = `${BASE_URL_FRONT}/usercollection/dashboard`\r\n                    }, 5000);\r\n                })\r\n                .catch(err => {\r\n                    //Caso o usuário tente fazer o login com uma conta do google e já exista um usuário com o mesmo e-mail\r\n                    // O sistema informa que já existe usuário cadastrado\r\n                    toast.info('Existe um usuário em nosso sistema com este e-mail, por favor faça o login através do sistema')\r\n                })\r\n\r\n            }else{\r\n                //Se não existir nenhum e-mail cadastrado no sistema\r\n                //O sistema cadastra o novo e-mail e já efetiva o login\r\n               const data = {\r\n                   name,\r\n                   email,\r\n                   password: googleId\r\n               } \r\n\r\n               //Criação do usuário no backend\r\n               axios.post(`${BASE_URL_BACK}/users`,data)\r\n                .then(resp => {\r\n                    if(resp.data.message == 'user created'){\r\n                        toast.success('Você foi cadastrado com sucesso!!! Aguarde um momento...')\r\n                        const data = {\r\n                            email,\r\n                            password: googleId\r\n                        }\r\n\r\n                        setTimeout(() => {\r\n                            //O sistema apresenta a mensagem do cadastro por 5 segundos e já executa o login\r\n                            axios.post(`${BASE_URL_BACK}/login`,data)\r\n                            .then(resp => {\r\n                                toast.success('Seja Bem-Vindo(a)!!!')\r\n                                localStorage.setItem('token', resp.data.token)\r\n                                setTimeout(() => {\r\n                                    window.location.href = `${BASE_URL_FRONT}/usercollection/dashboard`\r\n                                }, 5000);\r\n                            })\r\n                            .catch(err => {\r\n                                //Caso dê algum problema aparece esta mensagem\r\n                                toast.info('Opsss!! Algo deu errado, tente novamente mais tarde')\r\n                            })\r\n                        }, 5000);\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        .catch(err => {\r\n            //Caso dê algum problema aparece esta mensagem\r\n            toast.info('Opsss!! Algo deu errado, tente novamente mais tarde')\r\n        })\r\n        \r\n    }\r\n\r\n    //Esta função é utilizad para fazer login pelo facebook\r\n    const responseFacebook = (resp) => {\r\n        const {email, name, id } = resp\r\n\r\n        //Verifica se existe algum usuário com o e-mail cadastrado no sistema\r\n        axios.get(`${BASE_URL_BACK}/users/${email}`)\r\n        .then(resp => {\r\n            if(resp.data.message == true){\r\n                const data = {\r\n                    email,\r\n                    password: id\r\n                }\r\n                //Se existir um usuário cadastrado no sistema ele tenta fazer o login\r\n                //Como existe três sistemas de login, optei por apresentar uma mensagem de erro genérica.\r\n                axios.post(`${BASE_URL_BACK}/login`,data)\r\n                .then(resp => {\r\n                    toast.success('Seja Bem-Vindo(a)!!!')\r\n                    localStorage.setItem('token', resp.data.token)\r\n                    setTimeout(() => {\r\n                        window.location.href = `${BASE_URL_FRONT}/usercollection/dashboard`\r\n                    }, 5000);\r\n                })\r\n                .catch(err => {\r\n                    //Caso o usuário tente fazer o login com uma conta do facebook e já exista um usuário com o mesmo e-mail\r\n                    // O sistema informa que já existe usuário cadastrado\r\n                    toast.info('Existe um usuário em nosso sistema com este e-mail, por favor faça o login através do sistema')\r\n                })\r\n\r\n            }else{\r\n                //Se não existir nenhum e-mail cadastrado no sistema\r\n                //O sistema cadastra o novo e-mail e já efetiva o login\r\n                const data = {\r\n                    name,\r\n                    email,\r\n                    password: id\r\n                } \r\n                //Criação do usuário no backend\r\n               axios.post(`${BASE_URL_BACK}/users`,data)\r\n                .then(resp => {\r\n                    if(resp.data.message == 'user created'){\r\n                        toast.success('Você foi cadastrado com sucesso!!! Aguarde um momento...')\r\n                        const data = {\r\n                            email,\r\n                            password: id\r\n                        }\r\n\r\n                        setTimeout(() => {\r\n                            //O sistema apresenta a mensagem do cadastro por 5 segundos e já executa o login\r\n                            axios.post(`${BASE_URL_BACK}/login`,data)\r\n                            .then(resp => {\r\n                                toast.success('Seja Bem-Vindo(a)!!!')\r\n                                localStorage.setItem('token', resp.data.token)\r\n                                setTimeout(() => {\r\n                                    window.location.href = `${BASE_URL_FRONT}/usercollection/dashboard`\r\n                                }, 5000);\r\n                            })\r\n                            .catch(err => {\r\n                                //Caso dê algum problema aparece esta mensagem\r\n                                toast.info('Existe um usuário em nosso sistema com este e-mail, por favor faça o login através do sistema')\r\n                            })\r\n                        }, 5000);\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        .catch(err => {\r\n            //Caso dê algum problema aparece esta mensagem\r\n            toast.info('Opsss!! Algo deu errado, tente novamente mais tarde')\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className='wrapper'>\r\n        <div className='row text-center contentLogin'>\r\n        <div className='col-md-6 offset-md-3 col-10 offset-1'>\r\n            <img src={Logo} className='img-fluid' alt='Logo Magic Collections'/>\r\n            <form onSubmit={sendBack}>\r\n                <div className='row'>\r\n                    <div className='col-md-6 offset-md-3 col-10 offset-1'>\r\n                    <div className='input-group mb-3'>\r\n                        <input type='text' name='email' value={email} onChange={onChangeMail} className='form-control' placeholder='E-mail' autoFocus required />\r\n                        <div className='input-group-prepend'>\r\n                        <span className='input-group-text'><i className='fas fa-envelope'></i></span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='input-group mb-3'>\r\n                        <input type='password' value={password} onChange={onChangePass} className='form-control' placeholder='Senha' required/>\r\n                        <div className='input-group-prepend'>\r\n                        <span className='input-group-text'><i className='fas fa-unlock-alt'></i></span>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <button type='submit' className='btn btn-dark mb-2'>Entrar</button>\r\n                </div>\r\n                <div>\r\n                    <GoogleLogin\r\n                        clientId=\"791822174732-erldq4nsbg2sk70iv0i6p0gcm1gja3qf.apps.googleusercontent.com\"\r\n                        buttonText=\"Login Magic Collections\"\r\n                        onSuccess={responseGoogle}\r\n                        onFailure={responseGoogle}\r\n                        cookiePolicy={'single_host_origin'}\r\n                        className=\"mb-2\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <FacebookLogin\r\n                    appId=\"693791067965683\"\r\n                    fields=\"name,email,picture\"\r\n                    callback={responseFacebook} \r\n                    cssClass=\"my-facebook-button-class mb-2\"\r\n                    />\r\n                </div>\r\n                <p>Não tem uma conta? <Link to='/register'>Crie sua conta agora!</Link></p>\r\n            </form>\r\n            <ToastContainer />\r\n        </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\utils\\variaveisAmbiente.js",[],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\Routes.js",["104"],"import React from 'react';\r\nimport {BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom'\r\nimport Login from './pages/Login'\r\nimport Register from './pages/Register'\r\nimport UserCollection from './pages/UserCollection'\r\n\r\nexport default props => (\r\n    <Router>\r\n        <Switch>\r\n            <Route path='/login' exact component={Login} />\r\n            <Route path='/register' exact component={Register} />\r\n            <Route path='/usercollection' component={UserCollection} />\r\n            <Redirect from='*' to='/login' />\r\n        </Switch>\r\n    </Router>\r\n\r\n)","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\pages\\Register\\index.js",["105","106","107"],"import {React, useState, useEffect} from 'react';\r\nimport Logo from '../../img/logo.png'\r\nimport axios from 'axios'\r\nimport {BASE_URL_BACK, BASE_URL_FRONT} from '../../utils/variaveisAmbiente'\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css'; \r\nimport {messages} from '../../utils/messages'\r\n\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport './index.css'\r\n\r\nconst Login = (props) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [name, setName] = useState('')\r\n\r\n    const onChangeMail = evt => {\r\n        setEmail(evt.target.value)\r\n    }\r\n\r\n    const onChangePass = evt => {\r\n        setPassword(evt.target.value)\r\n    }\r\n\r\n    const onChangeName = evt => {\r\n        setName(evt.target.value)\r\n    }\r\n\r\n    const sendBack = (evt) => {\r\n        evt.preventDefault()\r\n\r\n        const data = {\r\n            name,\r\n            email,\r\n            password\r\n        }\r\n\r\n        axios.get(`${BASE_URL_BACK}/users/${email}`)\r\n            .then(resp => {\r\n                if(resp.data.message == true){\r\n                    toast.info('Já existe um usuário cadastrado em nosso sistema com este e-mail')\r\n                    setTimeout(() => {\r\n                        window.location.href = `${BASE_URL_FRONT}/login`\r\n                    }, 5000)\r\n                }else{\r\n                    axios.post(`${BASE_URL_BACK}/users`,data)\r\n                    .then(resp => {\r\n                        if(resp.data.message == 'user created'){\r\n                            toast.success('Cadastro realizado com sucesso!! Seja Bem-Vindo(a)!!')\r\n                            setTimeout(() => {\r\n                                window.location.href = `${BASE_URL_FRONT}/login`\r\n                            }, 5000)\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        toast.info(messages(err.response.data.message))\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    return(\r\n        <div className='wrapper'>\r\n        <div className='row text-center contentLogin'>\r\n        <div className='col-md-6 offset-md-3 col-10 offset-1'>\r\n            <img src={Logo} className='img-fluid' alt='Logo Magic Collections'/>\r\n            <form onSubmit={sendBack}>\r\n                <div className='row'>\r\n                    <div className='col-md-6 offset-md-3 col-10 offset-1'>\r\n                    <div className='input-group mb-3'>\r\n                        <input type='text' name='name' value={name} onChange={onChangeName} className='form-control' placeholder='Nome completo' autoFocus required />\r\n                        <div className='input-group-prepend'>\r\n                        <span className='input-group-text'><i className='fas fa-user'></i></span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='input-group mb-3'>\r\n                        <input type='text' name='email' value={email} onChange={onChangeMail} className='form-control' placeholder='E-mail' required />\r\n                        <div className='input-group-prepend'>\r\n                        <span className='input-group-text'><i className='fas fa-envelope'></i></span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='input-group mb-3'>\r\n                        <input type='password' value={password} onChange={onChangePass} className='form-control' placeholder='Senha' required/>\r\n                        <div className='input-group-prepend'>\r\n                        <span className='input-group-text'><i className='fas fa-unlock-alt'></i></span>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <button type='submit' className='btn btn-dark mb-2'>Cadastrar-se</button>\r\n            </form>\r\n            <ToastContainer />\r\n        </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\pages\\UserCollection\\index.js",[],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\utils\\auth.js",["108","109","110","111"],"import { JsonWebTokenError } from 'jsonwebtoken';\r\nimport React, { useEffect, useState } from 'react';\r\nimport jwt from 'jsonwebtoken'\r\n\r\nexport const AuthContext = React.createContext()\r\n\r\nconst UseIsAuth = () => {\r\n    const [logged, setLogged] = useState()\r\n    const token = localStorage.getItem('token')\r\n    useEffect(() => {    \r\n        if(token){\r\n            setLogged(true)\r\n        }else{\r\n            setLogged(false)\r\n        }\r\n    }, [])\r\n\r\n    return logged\r\n}\r\n\r\nconst IsAdmin = () => {\r\n    const [isAdmin, setIsAdmin] = useState()\r\n    const token = localStorage.getItem('token')\r\n    const decodedToken = jwt.decode(token)\r\n    const {permission} = decodedToken || 1\r\n    useEffect(() => {\r\n        if(permission == 1){\r\n            setIsAdmin(false)\r\n        }else{\r\n            setIsAdmin(true)\r\n        }\r\n    })\r\n\r\n    return isAdmin\r\n}\r\n\r\nexport const AuthProvider = (props) => {\r\n    const logged = UseIsAuth()\r\n    const isAdmin = IsAdmin()\r\n    return(\r\n        <AuthContext.Provider value={{isAuth: logged, isAdmin: isAdmin}} >\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\n\r\n","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\Modals\\index.js",["112","113"],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\AddCards\\index.js",["114"],"import React, { useEffect, useRef, useState } from 'react'\r\nimport './index.css'\r\nimport { Typeahead} from 'react-bootstrap-typeahead'\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css'\r\nimport {messages} from '../../utils/messages'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK} from '../../utils/variaveisAmbiente'\r\nimport {useHistory, Link} from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport _ from 'lodash'\r\nimport jwt from 'jsonwebtoken'\r\n\r\nconst AddCards = () => {\r\n\r\n    const history = useHistory()\r\n    const [allcards, setAllCards] = useState([])\r\n    const [cardName, setCardName] = useState([]);\r\n    const [cardSelected, setCardSelected] = useState('')\r\n    const [cardQuality, setCardQuality] = useState([])\r\n    const [cardLanguage, setCardLanguage] = useState([])\r\n    const refQuality = useRef()\r\n    const refLanguage = useRef()\r\n    const [quantity, setQuantity] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const user = jwt.decode(token)\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cards`,configAxios)\r\n            .then(resp => {\r\n                setAllCards(resp.data)\r\n                const data = resp.data.map((cards, index, array) => {                    \r\n                        return `${cards.card_name} - ${cards.edition}`\r\n                })\r\n                setCardName(data)\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n\r\n        axios.get(`${BASE_URL_BACK}/cardqualities`,configAxios)\r\n            .then(resp => {\r\n                setCardQuality(resp.data.quality)\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n\r\n        axios.get(`${BASE_URL_BACK}/cardlanguages`,configAxios)\r\n            .then(resp => {\r\n                setCardLanguage(resp.data.language)\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }, [])\r\n\r\n    const handleChange = (selected) => {\r\n        setCardSelected(selected)\r\n    }\r\n\r\n    const renderQuality = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Qualidade da Carta</label>\r\n                <select className=\"form-control\" ref={refQuality} required>\r\n                   {cardQuality.map(quality => {\r\n                        return(\r\n                            <option key={quality.id} value={quality.id}>{quality.quality}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderLanguage = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Idioma da Carta</label>\r\n                <select className=\"form-control\" ref={refLanguage} required>\r\n                    {cardLanguage.map(language => {\r\n                        return(\r\n                            <option key={language.id} value={language.id}>{language.language}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const cardQuantity = evt => {\r\n        setQuantity(evt.target.value)\r\n    }\r\n\r\n    const saveCard = evt => {\r\n        evt.preventDefault()\r\n\r\n        const nameArr = cardSelected[0].split('-')\r\n        const nameArrTrim = nameArr.map(name => {\r\n            return name.trim()\r\n        })\r\n        const userCardsSelected = (_.find(allcards, {card_name: nameArrTrim[0], edition: nameArrTrim[1]}));\r\n        const qualityId = refQuality.current.value\r\n        const languageId = refLanguage.current.value\r\n        const userCardsSelectedId = userCardsSelected.id\r\n        const userId = user.id\r\n        const objAddCard = {\r\n            user_id: userId,\r\n            cardLanguage_id: languageId,\r\n            cardQuality_id: qualityId,\r\n            cards_id: userCardsSelectedId,\r\n            quantity\r\n        }\r\n\r\n        axios.post(`${BASE_URL_BACK}/collections`,objAddCard,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/usercollection/cards')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n        <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                <div className=\"col-12 mt-2 mb-3\">\r\n                    <h1>Cadastro de Cards</h1>\r\n                </div>\r\n                </div>\r\n\r\n                <form onSubmit={saveCard}>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-4 mb-5\">\r\n                        <div className=\"form-group\">\r\n                        <label>Nome da Carta</label>\r\n                            <label>Tipo da Carta</label>\r\n                            <Typeahead\r\n                                id=\"cardsName\"\r\n                                onChange={(selected) => {\r\n                                    handleChange(selected)\r\n                                }}\r\n                                options={cardName}\r\n                                minLength={2}\r\n                                inputProps={{ required: true }}\r\n                                >\r\n                            </Typeahead>\r\n                        </div>\r\n                    </div>\r\n                    {renderQuality()}\r\n                    {renderLanguage()}\r\n                    <div className=\"col-lg-4\">\r\n                        <div className=\"form-group\">\r\n                        <label>Quantidade de Carta</label>\r\n                        <input type=\"number\" className=\"form-control\" value={quantity} placeholder=\"Digite a quantidade de cartas\" onChange={cardQuantity} required />\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <button type=\"submit\" className=\"btn btn-dark mr-2\">Cadastrar</button>\r\n                        <Link className=\"btn btn-dark mr-2\" to='/usercollection/cards'>Voltar</Link>\r\n                    </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <ToastContainer />\r\n        </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddCards","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\utils\\messages.js",[],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\EditCards\\index.js",["115","116","117","118","119","120","121","122","123","124","125","126","127"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport axios from 'axios'\r\nimport jwt from 'jsonwebtoken'\r\nimport {BASE_URL_BACK} from '../../utils/variaveisAmbiente'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {messages} from '../../utils/messages'\r\nimport _ from 'lodash'\r\nimport { useHistory, useParams, Link } from 'react-router-dom';\r\n\r\nconst EditCards = (props) => {\r\n    const token = localStorage.getItem('token')\r\n    const {id} = useParams()\r\n    const history = useHistory()\r\n    const [cardId, setCardId] = useState()\r\n    const [cardName, setCardName] = useState()\r\n    const [qualityId, setQualityId] = useState('')\r\n    const [cardQuality, setCardQuality] = useState([])\r\n    const [languageId, setLanguageId] = useState([])\r\n    const [cardLanguage, setCardLanguage] = useState([])\r\n    const [quantity, setQuantity] = useState('')\r\n    const [redirectPage, setRedirectPage] = useState(false)\r\n    const refQuality = useRef()\r\n    const refLanguage = useRef()\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n    const jwtId = jwt.decode(token)\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/collections/${jwtId.id}`,configAxios)\r\n        .then(resp => {\r\n            setQualityId(resp.data.filter(card => card.id == id )[0].quality_id);\r\n            setLanguageId(resp.data.filter(card => card.id == id )[0].language_id)\r\n            setCardName(resp.data.filter(card => card.id == id )[0].card_name)\r\n            setQuantity(resp.data.filter(card => card.id == id )[0].quantity)\r\n            setCardId(resp.data.filter(card => card.id == id )[0].card_id)\r\n        })\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardlanguages`,configAxios)\r\n            .then(resp => {\r\n                setCardLanguage(resp.data.language)\r\n            })\r\n    },[languageId])\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardqualities`,configAxios)\r\n            .then(resp => {\r\n                    setCardQuality(resp.data.quality)\r\n            })\r\n    },[qualityId])\r\n\r\n    const cardQuantity = evt => {\r\n        setQuantity(evt.target.value)\r\n    }\r\n\r\n    const saveCard = (evt) => {\r\n        evt.preventDefault()\r\n        const obj = {\r\n            user_id: jwtId.id,\r\n            cardLanguage_id: parseInt(refLanguage.current.value),\r\n            cardQuality_id: parseInt(refQuality.current.value),\r\n            cards_id: cardId,\r\n            quantity: parseInt(quantity)\r\n        }\r\n        \r\n        axios.put(`${BASE_URL_BACK}/collections/${props.match.params.id}`,obj,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message = \"card collection updated\"){\r\n                    toast.success(messages('card collection updated'))\r\n                    setTimeout(() => {\r\n                        history.push('/usercollection/cards')\r\n                    }, 5000);\r\n                }\r\n            })\r\n    }\r\n\r\n    const renderQuality = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Qualidade da Carta</label>\r\n                <select name={'quality'} className=\"form-control\" ref={refQuality} required>\r\n                   {qualityId > 0 && _.orderBy(cardQuality,[i => i.id == qualityId],['desc']).map(quality => {\r\n                        return(\r\n                            <option key={quality.id} value={quality.id}>{quality.quality}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderLanguage = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Idioma da Carta</label>\r\n                <select className=\"form-control\" name={'language'} ref={refLanguage} required>\r\n                    {languageId > 0 && _.orderBy(cardLanguage,[i => i.id == languageId],['desc']).map(language => {\r\n                        return(\r\n                            <option key={language.id} value={language.id}>{language.language}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                <div className=\"col-12 mt-2 mb-3\">\r\n                    <h1>Cadastro de Cards</h1>\r\n                </div>\r\n                </div>\r\n\r\n                <form onSubmit={saveCard}>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-4\">\r\n                        <div className=\"form-group\">\r\n                        <label>Nome da Carta</label>\r\n                        <input type=\"number\" className=\"form-control\" value={cardName || ''}  placeholder={cardName} disabled={true} />\r\n                        </div>\r\n                    </div>\r\n                    {renderQuality()}\r\n                    {renderLanguage()}\r\n                    <div className=\"col-lg-4\">\r\n                        <div className=\"form-group\">\r\n                        <label>Quantidade de Carta</label>\r\n                        <input type=\"number\" className=\"form-control\" value={quantity} onChange={cardQuantity} placeholder=\"Digite a quantidade de cartas\"  required />\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <button type=\"submit\" className=\"btn btn-dark mr-2\">Atualizar</button>\r\n                        <Link className=\"btn btn-dark mr-2\" to='/usercollection/cards'>Voltar</Link>\r\n                    </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <ToastContainer />\r\n        </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditCards","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\Cards\\index.js",["128","129","130","131","132","133","134"],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\MenuLeft\\index.js",["135","136","137"],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\cardView\\index.js",[],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\Dashboard\\index.js",["138"],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\CardView\\index.js",["139","140"],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\EditionCards\\index.js",["141","142","143","144","145"],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\Loading\\index.js",["146","147","148"],{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":2,"message":"154","line":3,"column":16,"nodeType":"155","messageId":"156","endLine":3,"endColumn":21},{"ruleId":"157","severity":1,"message":"158","line":64,"column":34,"nodeType":"159","messageId":"160","endLine":64,"endColumn":36},{"ruleId":"157","severity":1,"message":"158","line":97,"column":42,"nodeType":"159","messageId":"160","endLine":97,"endColumn":44},{"ruleId":"157","severity":1,"message":"158","line":137,"column":34,"nodeType":"159","messageId":"160","endLine":137,"endColumn":36},{"ruleId":"157","severity":1,"message":"158","line":169,"column":42,"nodeType":"159","messageId":"160","endLine":169,"endColumn":44},{"ruleId":"161","severity":1,"message":"162","line":7,"column":1,"nodeType":"163","endLine":17,"endColumn":2},{"ruleId":"164","severity":1,"message":"165","line":1,"column":26,"nodeType":"155","messageId":"166","endLine":1,"endColumn":35},{"ruleId":"157","severity":1,"message":"158","line":40,"column":38,"nodeType":"159","messageId":"160","endLine":40,"endColumn":40},{"ruleId":"157","severity":1,"message":"158","line":48,"column":46,"nodeType":"159","messageId":"160","endLine":48,"endColumn":48},{"ruleId":"164","severity":1,"message":"167","line":1,"column":10,"nodeType":"155","messageId":"166","endLine":1,"endColumn":27},{"ruleId":"168","severity":1,"message":"169","line":16,"column":8,"nodeType":"170","endLine":16,"endColumn":10,"suggestions":"171"},{"ruleId":"168","severity":1,"message":"172","line":26,"column":5,"nodeType":"155","endLine":26,"endColumn":14,"suggestions":"173"},{"ruleId":"157","severity":1,"message":"158","line":27,"column":23,"nodeType":"159","messageId":"160","endLine":27,"endColumn":25},{"ruleId":"174","severity":1,"message":"175","line":14,"column":17,"nodeType":"176","messageId":"177","endLine":14,"endColumn":69},{"ruleId":"157","severity":1,"message":"158","line":14,"column":28,"nodeType":"159","messageId":"160","endLine":14,"endColumn":30},{"ruleId":"168","severity":1,"message":"178","line":63,"column":8,"nodeType":"170","endLine":63,"endColumn":10,"suggestions":"179"},{"ruleId":"164","severity":1,"message":"180","line":21,"column":12,"nodeType":"155","messageId":"166","endLine":21,"endColumn":24},{"ruleId":"164","severity":1,"message":"181","line":21,"column":26,"nodeType":"155","messageId":"166","endLine":21,"endColumn":41},{"ruleId":"157","severity":1,"message":"158","line":34,"column":59,"nodeType":"159","messageId":"160","endLine":34,"endColumn":61},{"ruleId":"157","severity":1,"message":"158","line":35,"column":60,"nodeType":"159","messageId":"160","endLine":35,"endColumn":62},{"ruleId":"157","severity":1,"message":"158","line":36,"column":58,"nodeType":"159","messageId":"160","endLine":36,"endColumn":60},{"ruleId":"157","severity":1,"message":"158","line":37,"column":58,"nodeType":"159","messageId":"160","endLine":37,"endColumn":60},{"ruleId":"157","severity":1,"message":"158","line":38,"column":56,"nodeType":"159","messageId":"160","endLine":38,"endColumn":58},{"ruleId":"168","severity":1,"message":"182","line":40,"column":7,"nodeType":"170","endLine":40,"endColumn":9,"suggestions":"183"},{"ruleId":"168","severity":1,"message":"178","line":47,"column":7,"nodeType":"170","endLine":47,"endColumn":19,"suggestions":"184"},{"ruleId":"168","severity":1,"message":"178","line":54,"column":7,"nodeType":"170","endLine":54,"endColumn":18,"suggestions":"185"},{"ruleId":"186","severity":1,"message":"187","line":72,"column":20,"nodeType":"188","messageId":"189","endLine":72,"endColumn":65},{"ruleId":"157","severity":1,"message":"158","line":87,"column":71,"nodeType":"159","messageId":"160","endLine":87,"endColumn":73},{"ruleId":"157","severity":1,"message":"158","line":104,"column":74,"nodeType":"159","messageId":"160","endLine":104,"endColumn":76},{"ruleId":"164","severity":1,"message":"190","line":6,"column":9,"nodeType":"155","messageId":"166","endLine":6,"endColumn":17},{"ruleId":"164","severity":1,"message":"191","line":7,"column":10,"nodeType":"155","messageId":"166","endLine":7,"endColumn":15},{"ruleId":"157","severity":1,"message":"158","line":86,"column":48,"nodeType":"159","messageId":"160","endLine":86,"endColumn":50},{"ruleId":"168","severity":1,"message":"192","line":96,"column":7,"nodeType":"170","endLine":96,"endColumn":9,"suggestions":"193"},{"ruleId":"157","severity":1,"message":"158","line":98,"column":15,"nodeType":"159","messageId":"160","endLine":98,"endColumn":17},{"ruleId":"157","severity":1,"message":"158","line":111,"column":38,"nodeType":"159","messageId":"160","endLine":111,"endColumn":40},{"ruleId":"157","severity":1,"message":"194","line":113,"column":41,"nodeType":"159","messageId":"160","endLine":113,"endColumn":43},{"ruleId":"168","severity":1,"message":"195","line":13,"column":5,"nodeType":"155","endLine":13,"endColumn":14,"suggestions":"196"},{"ruleId":"197","severity":1,"message":"198","line":26,"column":21,"nodeType":"199","endLine":26,"endColumn":91},{"ruleId":"197","severity":1,"message":"198","line":31,"column":17,"nodeType":"199","endLine":31,"endColumn":52},{"ruleId":"168","severity":1,"message":"178","line":140,"column":7,"nodeType":"170","endLine":140,"endColumn":11,"suggestions":"200"},{"ruleId":"164","severity":1,"message":"201","line":5,"column":8,"nodeType":"155","messageId":"166","endLine":5,"endColumn":13},{"ruleId":"168","severity":1,"message":"202","line":48,"column":7,"nodeType":"170","endLine":48,"endColumn":14,"suggestions":"203"},{"ruleId":"197","severity":1,"message":"198","line":179,"column":47,"nodeType":"199","endLine":179,"endColumn":87},{"ruleId":"197","severity":1,"message":"198","line":180,"column":47,"nodeType":"199","endLine":180,"endColumn":87},{"ruleId":"197","severity":1,"message":"198","line":181,"column":47,"nodeType":"199","endLine":181,"endColumn":87},{"ruleId":"197","severity":1,"message":"198","line":182,"column":47,"nodeType":"199","endLine":182,"endColumn":87},{"ruleId":"197","severity":1,"message":"198","line":183,"column":47,"nodeType":"199","endLine":183,"endColumn":87},{"ruleId":"174","severity":1,"message":"175","line":12,"column":17,"nodeType":"176","messageId":"177","endLine":12,"endColumn":86},{"ruleId":"157","severity":1,"message":"158","line":12,"column":30,"nodeType":"159","messageId":"160","endLine":12,"endColumn":32},{"ruleId":"157","severity":1,"message":"158","line":17,"column":20,"nodeType":"159","messageId":"160","endLine":17,"endColumn":22},"no-native-reassign",["204"],"no-negated-in-lhs",["205"],"no-undef","'Login' is not defined.","Identifier","undef","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'useEffect' is defined but never used.","unusedVar","'JsonWebTokenError' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["206"],"React Hook useEffect contains a call to 'setIsAdmin'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [permission] as a second argument to the useEffect Hook.",["207"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has a missing dependency: 'configAxios'. Either include it or remove the dependency array.",["208"],"'redirectPage' is assigned a value but never used.","'setRedirectPage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'configAxios', 'id', and 'jwtId.id'. Either include them or remove the dependency array.",["209"],["210"],["211"],"no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'messages' is defined but never used.","'toast' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'token'. Either include them or remove the dependency array.",["212"],"Expected '!==' and instead saw '!='.","React Hook useEffect contains a call to 'setUserName'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [user] as a second argument to the useEffect Hook.",["213"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["214"],"'Birds' is defined but never used.","React Hook useEffect has missing dependencies: 'configAxios' and 'id'. Either include them or remove the dependency array.",["215"],"no-global-assign","no-unsafe-negation",{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},"Update the dependencies array to be: [token]",{"range":"236","text":"237"},"Add dependencies array: [permission]",{"range":"238","text":"239"},"Update the dependencies array to be: [configAxios]",{"range":"240","text":"241"},"Update the dependencies array to be: [configAxios, id, jwtId.id]",{"range":"242","text":"243"},"Update the dependencies array to be: [configAxios, languageId]",{"range":"244","text":"245"},"Update the dependencies array to be: [configAxios, qualityId]",{"range":"246","text":"247"},"Update the dependencies array to be: [history, token]",{"range":"248","text":"249"},"Add dependencies array: [user]",{"range":"250","text":"251"},"Update the dependencies array to be: [configAxios, id]",{"range":"252","text":"253"},"Update the dependencies array to be: [configAxios, id, urlId]",{"range":"254","text":"255"},[450,452],"[token]",[835,835],", [permission]",[2417,2419],"[configAxios]",[1703,1705],"[configAxios, id, jwtId.id]",[1902,1914],"[configAxios, languageId]",[2113,2124],"[configAxios, qualityId]",[3739,3741],"[history, token]",[616,616],", [user]",[5733,5737],"[configAxios, id]",[1490,1497],"[configAxios, id, urlId]"]