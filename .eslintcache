[{"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\index.js":"1","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\App.js":"2","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\reportWebVitals.js":"3","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\utils\\imports.js":"4","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\Pages\\Login\\index.js":"5","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\pages\\Login\\index.js":"6","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\utils\\variaveisAmbiente.js":"7","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\Routes.js":"8","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\pages\\Register\\index.js":"9","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\pages\\UserCollection\\index.js":"10","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\utils\\auth.js":"11","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\Modals\\index.js":"12","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\utils\\messages.js":"13","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\Cards\\index.js":"14","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\MenuLeft\\index.js":"15","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\cardView\\index.js":"16","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\Dashboard\\index.js":"17","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\CardView\\index.js":"18","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\EditionCards\\index.js":"19","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\Loading\\index.js":"20","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\AddCardsCollection\\index.js":"21","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\EditCardsCollection\\index.js":"22","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\EditEditionCards\\index.js":"23","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\AddEditionCards\\index.js":"24","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\DashboardAdmin\\index.js":"25","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\Users\\index.js":"26","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\EditUser\\index.js":"27"},{"size":524,"mtime":1610319620110,"results":"28","hashOfConfig":"29"},{"size":228,"mtime":1611878460688,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"29"},{"size":2177,"mtime":1610992492772,"results":"32","hashOfConfig":"29"},{"size":122,"mtime":1610379275525,"results":"33","hashOfConfig":"29"},{"size":11321,"mtime":1611700656662,"results":"34","hashOfConfig":"29"},{"size":186,"mtime":1611702773772,"results":"35","hashOfConfig":"29"},{"size":586,"mtime":1610671410814,"results":"36","hashOfConfig":"29"},{"size":4056,"mtime":1611092486534,"results":"37","hashOfConfig":"29"},{"size":2736,"mtime":1612399254515,"results":"38","hashOfConfig":"29"},{"size":1136,"mtime":1611410285832,"results":"39","hashOfConfig":"29"},{"size":1243,"mtime":1611878713780,"results":"40","hashOfConfig":"29"},{"size":1607,"mtime":1612401806905,"results":"41","hashOfConfig":"29"},{"size":9176,"mtime":1612221569028,"results":"42","hashOfConfig":"29"},{"size":4521,"mtime":1612220287391,"results":"43","hashOfConfig":"29"},{"size":1133,"mtime":1611411992344,"results":"44","hashOfConfig":"29"},{"size":17441,"mtime":1611880343330,"results":"45","hashOfConfig":"29"},{"size":2660,"mtime":1611879696018,"results":"46","hashOfConfig":"29"},{"size":13307,"mtime":1612027769146,"results":"47","hashOfConfig":"29"},{"size":1358,"mtime":1612018906438,"results":"48","hashOfConfig":"29"},{"size":7156,"mtime":1612028111383,"results":"49","hashOfConfig":"29"},{"size":6104,"mtime":1612026345027,"results":"50","hashOfConfig":"29"},{"size":8162,"mtime":1612398865418,"results":"51","hashOfConfig":"29"},{"size":7057,"mtime":1612110894422,"results":"52","hashOfConfig":"29"},{"size":8781,"mtime":1612221121211,"results":"53","hashOfConfig":"29"},{"size":6271,"mtime":1612395813596,"results":"54","hashOfConfig":"29"},{"size":4823,"mtime":1612404914920,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"8rafif",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"58"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"58"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\index.js",[],["127","128"],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\App.js",[],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\reportWebVitals.js",[],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\utils\\imports.js",[],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\Pages\\Login\\index.js",["129"],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\pages\\Login\\index.js",["130","131","132","133"],"import {React, useState,} from 'react';\r\nimport Logo from '../../img/logo.png'\r\nimport axios from 'axios'\r\nimport {BASE_URL_BACK} from '../../utils/variaveisAmbiente'\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css'; \r\nimport {messages} from '../../utils/messages'\r\nimport {Link} from 'react-router-dom'\r\nimport {BASE_URL_FRONT} from '../../utils/variaveisAmbiente'\r\nimport GoogleLogin from 'react-google-login'\r\nimport FacebookLogin from 'react-facebook-login'\r\n\r\n\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport './index.css'\r\n\r\nconst Login = (props) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    //Pega os valores de e-mail e adiciona no estado\r\n    const onChangeMail = evt => {\r\n        setEmail(evt.target.value)\r\n    }\r\n\r\n    //Pega os valores de password e adiciona no estado\r\n    const onChangePass = evt => {\r\n        setPassword(evt.target.value)\r\n    }\r\n\r\n    //Envia os dados para o backend validar\r\n    const sendBack = (evt) => {\r\n        evt.preventDefault()\r\n\r\n        const data = {\r\n            email,\r\n            password\r\n        }\r\n\r\n        //Faz uma requisição post para o backend\r\n        axios.post(`${BASE_URL_BACK}/login`,data)\r\n        .then(resp => {\r\n            //Caso o login seja feito, é gerado um token e adicionado no localstorage\r\n            //Também é gerada uma mensagem para o usuário\r\n            toast.success('Seja Bem-Vindo(a)!!!')\r\n            localStorage.setItem('token', resp.data.token)\r\n            setTimeout(() => {\r\n                window.location.href = `${BASE_URL_FRONT}/usercollection/dashboard`\r\n            }, 5000);\r\n        })\r\n        .catch(err => {\r\n            //Caso dê algum erro é enviada uma mensagem para o usuário\r\n            toast.info(messages(err.response.data.message))\r\n        })\r\n    }\r\n\r\n    //Esta função é utilizad para fazer login pelo google\r\n    const responseGoogle = (resp) => {\r\n        const {profileObj: {email, name, googleId}} = resp\r\n\r\n        //Verifica se existe algum usuário com o e-mail cadastrado no sistema\r\n        axios.get(`${BASE_URL_BACK}/users/${email}`)\r\n        .then(resp => {\r\n            if(resp.data.message == true){\r\n                const data = {\r\n                    email,\r\n                    password: googleId\r\n                }\r\n                //Se existir um usuário cadastrado no sistema ele tenta fazer o login\r\n                //Como existe três sistemas de login, optei por apresentar uma mensagem de erro genérica.\r\n                axios.post(`${BASE_URL_BACK}/login`,data)\r\n                .then(resp => {\r\n                    toast.success('Seja Bem-Vindo(a)!!!')\r\n                    localStorage.setItem('token', resp.data.token)\r\n                    setTimeout(() => {\r\n                        window.location.href = `${BASE_URL_FRONT}/usercollection/dashboard`\r\n                    }, 5000);\r\n                })\r\n                .catch(err => {\r\n                    //Caso o usuário tente fazer o login com uma conta do google e já exista um usuário com o mesmo e-mail\r\n                    // O sistema informa que já existe usuário cadastrado\r\n                    toast.info('Existe um usuário em nosso sistema com este e-mail, por favor faça o login através do sistema')\r\n                })\r\n\r\n            }else{\r\n                //Se não existir nenhum e-mail cadastrado no sistema\r\n                //O sistema cadastra o novo e-mail e já efetiva o login\r\n               const data = {\r\n                   name,\r\n                   email,\r\n                   password: googleId\r\n               } \r\n\r\n               //Criação do usuário no backend\r\n               axios.post(`${BASE_URL_BACK}/users`,data)\r\n                .then(resp => {\r\n                    if(resp.data.message == 'user created'){\r\n                        toast.success('Você foi cadastrado com sucesso!!! Aguarde um momento...')\r\n                        const data = {\r\n                            email,\r\n                            password: googleId\r\n                        }\r\n\r\n                        setTimeout(() => {\r\n                            //O sistema apresenta a mensagem do cadastro por 5 segundos e já executa o login\r\n                            axios.post(`${BASE_URL_BACK}/login`,data)\r\n                            .then(resp => {\r\n                                toast.success('Seja Bem-Vindo(a)!!!')\r\n                                localStorage.setItem('token', resp.data.token)\r\n                                setTimeout(() => {\r\n                                    window.location.href = `${BASE_URL_FRONT}/usercollection/dashboard`\r\n                                }, 5000);\r\n                            })\r\n                            .catch(err => {\r\n                                //Caso dê algum problema aparece esta mensagem\r\n                                toast.info('Opsss!! Algo deu errado, tente novamente mais tarde')\r\n                            })\r\n                        }, 5000);\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        .catch(err => {\r\n            //Caso dê algum problema aparece esta mensagem\r\n            toast.info('Opsss!! Algo deu errado, tente novamente mais tarde')\r\n        })\r\n        \r\n    }\r\n\r\n    //Esta função é utilizad para fazer login pelo facebook\r\n    const responseFacebook = (resp) => {\r\n        const {email, name, id } = resp\r\n\r\n        //Verifica se existe algum usuário com o e-mail cadastrado no sistema\r\n        axios.get(`${BASE_URL_BACK}/users/${email}`)\r\n        .then(resp => {\r\n            if(resp.data.message == true){\r\n                const data = {\r\n                    email,\r\n                    password: id\r\n                }\r\n                //Se existir um usuário cadastrado no sistema ele tenta fazer o login\r\n                //Como existe três sistemas de login, optei por apresentar uma mensagem de erro genérica.\r\n                axios.post(`${BASE_URL_BACK}/login`,data)\r\n                .then(resp => {\r\n                    toast.success('Seja Bem-Vindo(a)!!!')\r\n                    localStorage.setItem('token', resp.data.token)\r\n                    setTimeout(() => {\r\n                        window.location.href = `${BASE_URL_FRONT}/usercollection/dashboard`\r\n                    }, 5000);\r\n                })\r\n                .catch(err => {\r\n                    //Caso o usuário tente fazer o login com uma conta do facebook e já exista um usuário com o mesmo e-mail\r\n                    // O sistema informa que já existe usuário cadastrado\r\n                    toast.info('Existe um usuário em nosso sistema com este e-mail, por favor faça o login através do sistema')\r\n                })\r\n\r\n            }else{\r\n                //Se não existir nenhum e-mail cadastrado no sistema\r\n                //O sistema cadastra o novo e-mail e já efetiva o login\r\n                const data = {\r\n                    name,\r\n                    email,\r\n                    password: id\r\n                } \r\n                //Criação do usuário no backend\r\n               axios.post(`${BASE_URL_BACK}/users`,data)\r\n                .then(resp => {\r\n                    if(resp.data.message == 'user created'){\r\n                        toast.success('Você foi cadastrado com sucesso!!! Aguarde um momento...')\r\n                        const data = {\r\n                            email,\r\n                            password: id\r\n                        }\r\n\r\n                        setTimeout(() => {\r\n                            //O sistema apresenta a mensagem do cadastro por 5 segundos e já executa o login\r\n                            axios.post(`${BASE_URL_BACK}/login`,data)\r\n                            .then(resp => {\r\n                                toast.success('Seja Bem-Vindo(a)!!!')\r\n                                localStorage.setItem('token', resp.data.token)\r\n                                setTimeout(() => {\r\n                                    window.location.href = `${BASE_URL_FRONT}/usercollection/dashboard`\r\n                                }, 5000);\r\n                            })\r\n                            .catch(err => {\r\n                                //Caso dê algum problema aparece esta mensagem\r\n                                toast.info('Existe um usuário em nosso sistema com este e-mail, por favor faça o login através do sistema')\r\n                            })\r\n                        }, 5000);\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        .catch(err => {\r\n            //Caso dê algum problema aparece esta mensagem\r\n            toast.info('Opsss!! Algo deu errado, tente novamente mais tarde')\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className='wrapper'>\r\n        <div className='row text-center contentLogin'>\r\n        <div className='col-md-6 offset-md-3 col-10 offset-1'>\r\n            <img src={Logo} className='img-fluid' alt='Logo Magic Collections'/>\r\n            <form onSubmit={sendBack}>\r\n                <div className='row'>\r\n                    <div className='col-md-6 offset-md-3 col-10 offset-1'>\r\n                    <div className='input-group mb-3'>\r\n                        <input type='text' name='email' value={email} onChange={onChangeMail} className='form-control' placeholder='E-mail' autoFocus required />\r\n                        <div className='input-group-prepend'>\r\n                        <span className='input-group-text'><i className='fas fa-envelope'></i></span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='input-group mb-3'>\r\n                        <input type='password' value={password} onChange={onChangePass} className='form-control' placeholder='Senha' required/>\r\n                        <div className='input-group-prepend'>\r\n                        <span className='input-group-text'><i className='fas fa-unlock-alt'></i></span>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <button type='submit' className='btn btn-dark mb-2'>Entrar</button>\r\n                </div>\r\n                <div>\r\n                    <GoogleLogin\r\n                        clientId=\"791822174732-erldq4nsbg2sk70iv0i6p0gcm1gja3qf.apps.googleusercontent.com\"\r\n                        buttonText=\"Login Magic Collections\"\r\n                        onSuccess={responseGoogle}\r\n                        onFailure={responseGoogle}\r\n                        cookiePolicy={'single_host_origin'}\r\n                        className=\"mb-2\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <FacebookLogin\r\n                    appId=\"693791067965683\"\r\n                    fields=\"name,email,picture\"\r\n                    callback={responseFacebook} \r\n                    cssClass=\"my-facebook-button-class mb-2\"\r\n                    />\r\n                </div>\r\n                <p>Não tem uma conta? <Link to='/register'>Crie sua conta agora!</Link></p>\r\n            </form>\r\n            <ToastContainer />\r\n        </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\utils\\variaveisAmbiente.js",[],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\Routes.js",["134"],"import React from 'react';\r\nimport {BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom'\r\nimport Login from './pages/Login'\r\nimport Register from './pages/Register'\r\nimport UserCollection from './pages/UserCollection'\r\n\r\nexport default props => (\r\n    <Router>\r\n        <Switch>\r\n            <Route path='/login' exact component={Login} />\r\n            <Route path='/register' exact component={Register} />\r\n            <Route path='/usercollection' component={UserCollection} />\r\n            <Redirect from='*' to='/login' />\r\n        </Switch>\r\n    </Router>\r\n\r\n)","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\pages\\Register\\index.js",["135","136","137"],"import {React, useState, useEffect} from 'react';\r\nimport Logo from '../../img/logo.png'\r\nimport axios from 'axios'\r\nimport {BASE_URL_BACK, BASE_URL_FRONT} from '../../utils/variaveisAmbiente'\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css'; \r\nimport {messages} from '../../utils/messages'\r\n\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport './index.css'\r\n\r\nconst Login = (props) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [name, setName] = useState('')\r\n\r\n    const onChangeMail = evt => {\r\n        setEmail(evt.target.value)\r\n    }\r\n\r\n    const onChangePass = evt => {\r\n        setPassword(evt.target.value)\r\n    }\r\n\r\n    const onChangeName = evt => {\r\n        setName(evt.target.value)\r\n    }\r\n\r\n    const sendBack = (evt) => {\r\n        evt.preventDefault()\r\n\r\n        const data = {\r\n            name,\r\n            email,\r\n            password\r\n        }\r\n\r\n        axios.get(`${BASE_URL_BACK}/users/${email}`)\r\n            .then(resp => {\r\n                if(resp.data.message == true){\r\n                    toast.info('Já existe um usuário cadastrado em nosso sistema com este e-mail')\r\n                    setTimeout(() => {\r\n                        window.location.href = `${BASE_URL_FRONT}/login`\r\n                    }, 5000)\r\n                }else{\r\n                    axios.post(`${BASE_URL_BACK}/users`,data)\r\n                    .then(resp => {\r\n                        if(resp.data.message == 'user created'){\r\n                            toast.success('Cadastro realizado com sucesso!! Seja Bem-Vindo(a)!!')\r\n                            setTimeout(() => {\r\n                                window.location.href = `${BASE_URL_FRONT}/login`\r\n                            }, 5000)\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        toast.info(messages(err.response.data.message))\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    return(\r\n        <div className='wrapper'>\r\n        <div className='row text-center contentLogin'>\r\n        <div className='col-md-6 offset-md-3 col-10 offset-1'>\r\n            <img src={Logo} className='img-fluid' alt='Logo Magic Collections'/>\r\n            <form onSubmit={sendBack}>\r\n                <div className='row'>\r\n                    <div className='col-md-6 offset-md-3 col-10 offset-1'>\r\n                    <div className='input-group mb-3'>\r\n                        <input type='text' name='name' value={name} onChange={onChangeName} className='form-control' placeholder='Nome completo' autoFocus required />\r\n                        <div className='input-group-prepend'>\r\n                        <span className='input-group-text'><i className='fas fa-user'></i></span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='input-group mb-3'>\r\n                        <input type='text' name='email' value={email} onChange={onChangeMail} className='form-control' placeholder='E-mail' required />\r\n                        <div className='input-group-prepend'>\r\n                        <span className='input-group-text'><i className='fas fa-envelope'></i></span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='input-group mb-3'>\r\n                        <input type='password' value={password} onChange={onChangePass} className='form-control' placeholder='Senha' required/>\r\n                        <div className='input-group-prepend'>\r\n                        <span className='input-group-text'><i className='fas fa-unlock-alt'></i></span>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <button type='submit' className='btn btn-dark mb-2'>Cadastrar-se</button>\r\n            </form>\r\n            <ToastContainer />\r\n        </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\pages\\UserCollection\\index.js",[],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\utils\\auth.js",["138","139","140","141"],"import { JsonWebTokenError } from 'jsonwebtoken';\r\nimport React, { useEffect, useState } from 'react';\r\nimport jwt from 'jsonwebtoken'\r\n\r\nexport const AuthContext = React.createContext()\r\n\r\nconst UseIsAuth = () => {\r\n    const [logged, setLogged] = useState()\r\n    const token = localStorage.getItem('token')\r\n    useEffect(() => {    \r\n        if(token){\r\n            setLogged(true)\r\n        }else{\r\n            setLogged(false)\r\n        }\r\n    }, [])\r\n\r\n    return logged\r\n}\r\n\r\nconst IsAdmin = () => {\r\n    const [isAdmin, setIsAdmin] = useState()\r\n    const token = localStorage.getItem('token')\r\n    const decodedToken = jwt.decode(token)\r\n    const {permission} = decodedToken || 1\r\n    useEffect(() => {\r\n        if(permission == 1){\r\n            setIsAdmin(false)\r\n        }else{\r\n            setIsAdmin(true)\r\n        }\r\n    })\r\n\r\n    return isAdmin\r\n}\r\n\r\nexport const AuthProvider = (props) => {\r\n    const logged = UseIsAuth()\r\n    const isAdmin = IsAdmin()\r\n    return(\r\n        <AuthContext.Provider value={{isAuth: logged, isAdmin: isAdmin}} >\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\n\r\n","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\Modals\\index.js",["142","143"],"import React, { useState, useImperativeHandle, forwardRef } from 'react';\r\nimport {Modal, Button} from 'react-bootstrap'\r\n\r\nconst Modals = forwardRef((props, ref) => {\r\n\r\n    const [showModal, setShow] = useState(false)\r\n    const handleClose = () => setShow(false)\r\n    \r\n\r\n    useImperativeHandle(\r\n        ref,\r\n        () => ({\r\n            openModal () {\r\n                {showModal == true ? setShow(false) : setShow(true)}\r\n            }\r\n        })\r\n    )\r\n\r\n    return(\r\n        <>\r\n            <div className=\"d-flex align-items-center justify-content-center\">\r\n            </div>\r\n            <Modal show={showModal} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>{props.title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>{props.body}</Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"btn btn-dark\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"btn btn-dark\" onClick={props.deleteItem}>\r\n                    {props.nameButton}\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default Modals","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\utils\\messages.js",[],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\Cards\\index.js",["144","145","146","147","148"],"import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport './index.css'\r\nimport axios from 'axios'\r\nimport {BASE_URL_BACK} from '../../utils/variaveisAmbiente'\r\nimport {messages} from '../../utils/messages'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport jwt from 'jsonwebtoken'\r\nimport $ from 'jquery'\r\nimport Modals from '../Modals'\r\nimport Loading from '../Loading'\r\n\r\nconst Cards = () => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    const history = useHistory()\r\n    const [data, setData] = useState([])\r\n    const token = localStorage.getItem('token')\r\n    const [lineId, setLineId] = useState()\r\n    const refModal = useRef()\r\n    const refLoading = useRef()\r\n    \r\n    useEffect(() => {\r\n        try{\r\n            const configAxios = {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            }\r\n    \r\n            const {id} = jwt.decode(token)\r\n    \r\n            axios.get(`${BASE_URL_BACK}/collections/${id}`,configAxios)\r\n                .then(resp => {\r\n                    setData(resp.data)\r\n                    $(document).ready(function(){\r\n                        let dataTable = $('#dataTable').DataTable({\r\n                            \"responsive\": true,\r\n                            \"autoWidth\": false,\r\n                            \"lengthChange\": false,\r\n                            \"pageLength\": 10,\r\n                            \"bInfo\" : false,\r\n                            \"language\": {\r\n                                \"paginate\": {\r\n                                  \"previous\": \"Anterior\",\r\n                                  \"next\": \"Próxima\"\r\n                                },\r\n                                \"emptyTable\": \"Não existe dados para serem carregados\"\r\n                            },\r\n                            buttons: [\r\n                                { \r\n                                    extend: 'pdfHtml5',\r\n                                    customize: function(doc) {\r\n                                        doc.styles.tableBodyEven.alignment = 'center';\r\n                                        doc.styles.tableBodyOdd.alignment = 'center'; \r\n                                    },\r\n                                    exportOptions:{\r\n                                        columns: [0,1,2,3,4,5,6,7]\r\n                                    }\r\n                                },\r\n                                { \r\n                                    extend: 'excel',\r\n                                    exportOptions:{\r\n                                        columns: [0,1,2,3,4,5,6,7]\r\n                                    }\r\n                                }\r\n                            ]\r\n                        })\r\n\r\n                        $('#searchBarTec').on('keyup change', function () {\r\n                            dataTable.search(this.value).draw();\r\n                        })\r\n\r\n                        $('#exportExcel').on('click', function() {\r\n                            dataTable.button('.buttons-excel').trigger();\r\n                        });\r\n\r\n                        $('#exportPdf').on('click', function() {\r\n                            dataTable.button('.buttons-pdf').trigger();\r\n                        });\r\n\r\n                        refLoading.current.executeLoading()\r\n                    })\r\n                })\r\n                .catch(err => {\r\n                    if(err.response.data.error == 'token invalid'){\r\n                        history.push('/login')\r\n                    }\r\n                })\r\n                    \r\n\r\n        }catch(err){\r\n            history.push('/login')\r\n        }\r\n\r\n    },[])\r\n\r\n    if(isAuth == false){\r\n        history.push('/login')\r\n    }\r\n\r\n    const deleteItem = () => {\r\n        const configAxios = {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }\r\n\r\n        axios.delete(`${BASE_URL_BACK}/collections/${lineId}`,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message == 'card collection deleted'){\r\n                    toast.success(messages(resp.data.message))\r\n                    const filtered = data.filter(cards => {\r\n                        return cards.id != lineId\r\n                    })            \r\n                    setData(filtered)\r\n                    refModal.current.openModal()\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const renderRow = () => {\r\n        return data.map(line => (\r\n                <tr key={line.id}>\r\n                    <td>{line.card_name}</td>\r\n                    <td className=\"text-center\">{line.card_type}</td>\r\n                    <td className=\"text-center\">{line.card_color}</td>\r\n                    <td className=\"text-center\">{line.edition}</td>\r\n                    <td className=\"text-center\">{line.rarity}</td>\r\n                    <td className=\"text-center\">{line.quality}</td>\r\n                    <td className=\"text-center\">{line.language}</td>\r\n                    <td className=\"text-center\">{line.quantity}</td>\r\n                    <td className=\"text-center\"><Link className='link_text_pen' to={`/usercollection/cardview/${line.id}`}><i className=\"fas fa-eye click\"></i></Link></td>\r\n                    <td className=\"text-center\"><Link className='link_text_pen' to={`/usercollection/editcard/${line.id}`}><i className=\"fas fa-pencil-alt click\"></i></Link></td>\r\n                    <td className=\"text-center\"><i className=\"fas fa-trash-alt click\" onClick={() => openModal(line.id)}></i></td>\r\n                </tr>\r\n            )\r\n        )\r\n    }\r\n\r\n    const openModal = (id) => {\r\n        setLineId(id)\r\n        refModal.current.openModal()\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            \r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                    <div className=\"col-12 mt-2 mb-2\">\r\n                        <h1>Minha Coleção</h1>\r\n                    </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-9\">\r\n                            <div className=\"input-group mb-3\">\r\n                            <input type=\"email\" className=\"form-control\" id=\"searchBarTec\" placeholder=\"Qual carta você está procurando?\" />\r\n                            <div className=\"input-group-append\">\r\n                                <div className=\"input-group-text\">\r\n                                <i className=\"fas fa-search\"></i>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-3 mb-2 mr-0\">\r\n                            <button type=\"button\" className=\"btn btn-dark mr-1\"><Link className='link_text' to='/usercollection/addcard'>Adicionar</Link></button>\r\n                            <button type=\"button\" className=\"btn btn-dark mr-1\" id='exportPdf'>PDF</button>\r\n                            <button type=\"button\" className=\"btn btn-dark mr-1\" id='exportExcel'>Excel</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <table id=\"dataTable\" className=\"table table-bordered table-responsive-sm table-responsive-md\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Nome</th>\r\n                            <th className=\"text-center\">Tipo</th>\r\n                            <th className=\"text-center\">Cor</th>\r\n                            <th className=\"text-center\">Edição</th>\r\n                            <th className=\"text-center\">Raridade</th>\r\n                            <th className=\"text-center\">Qualidade</th>\r\n                            <th className=\"text-center\">Idioma</th>\r\n                            <th className=\"text-center\">Quantidade</th>\r\n                            <th className=\"text-center\">Visualizar</th>\r\n                            <th className=\"text-center\">Editar</th>\r\n                            <th className=\"text-center\">Remover</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {renderRow()}\r\n                        </tbody>\r\n                        </table>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <ToastContainer />\r\n            <Modals \r\n                title='Exclusão de card'\r\n                body='Deseja realmente excluir este card?'\r\n                nameButton='Excluir'\r\n                deleteItem={deleteItem}\r\n                ref={refModal}\r\n            />\r\n            <Loading \r\n                ref={refLoading}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\MenuLeft\\index.js",["149","150","151"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport ImgGui from '../../img/guilherme_souza.png'\r\nimport jwt from 'jsonwebtoken'\r\nimport {Link} from 'react-router-dom'\r\nimport {AuthContext} from '../../utils/auth'\r\n\r\nconst MenuLeft = () => {\r\n    const [userName, setUserName] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const user = jwt.decode(token) || 0\r\n    let {isAdmin} = useContext(AuthContext)\r\n\r\n    useEffect(() => {\r\n        if(Object.keys(user).length > 0){\r\n            setUserName(user.name)\r\n        }else{\r\n            setUserName('User')\r\n        }\r\n    })\r\n    \r\n    return(\r\n        <>\r\n            <nav className=\"main-header navbar navbar-expand navbar-white navbar-light\">\r\n                <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" data-widget=\"pushmenu\" href=\"#\" role=\"button\"><i className=\"fas fa-bars\"></i></a>\r\n                </li>\r\n                </ul>\r\n            </nav>\r\n            <aside className=\"main-sidebar sidebar-dark-primary elevation-4\">\r\n                <a href=\"#\" className=\"brand-link\">\r\n                    <span className=\"brand-text font-weight-bold\">\r\n                        MAGIC COLLECTIONS\r\n                    </span>\r\n                </a>\r\n                <div className=\"sidebar text-center mt-3\">\r\n                    <img src={ImgGui} className=\"img-circle mb-2\" alt=\"Guilherme Souza\" />\r\n                    <div className=\"text-white ml-2 text-bold\">\r\n                        {isAdmin &&\r\n                            <i className=\"far fa-gem text-warning\"></i> \r\n                        } {userName}\r\n                    </div>\r\n                    <hr className=\"hrWhite\" />\r\n                    <nav>\r\n                        <ul className=\"nav nav-pills nav-sidebar flex-column\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to='/usercollection/dashboard' className=\"nav-link\">\r\n                                    <i className=\"fas fa-tachometer-alt text-white mr-2\"></i>\r\n                                    <p className=\"text-white text-bold\">Dashboard</p>\r\n                                </Link>\r\n                            </li>\r\n                            {isAdmin &&\r\n                                <li className=\"nav-item\">\r\n                                    <Link to='/usercollection/dashboardadmin' className=\"nav-link\">                                    \r\n                                        <i className=\"fas fa-tachometer-alt text-white mr-2\"></i>\r\n                                        <p className=\"text-white text-bold\">Dashboard Admin</p>\r\n                                    </Link>\r\n                                </li>\r\n                            }\r\n                            <li className=\"nav-item\">\r\n                                <Link to='/usercollection/cards' className=\"nav-link\">                                    \r\n                                    <i className=\"fab fa-wizards-of-the-coast text-white mr-2\"></i>\r\n                                    <p className=\"text-white text-bold\">Minha Coleção</p>\r\n                                </Link>\r\n                            </li>\r\n                            {isAdmin &&\r\n                                <li className=\"nav-item\">\r\n                                    <Link to='/usercollection/editioncards' className=\"nav-link\">                                    \r\n                                        <i className=\"fab fa-wizards-of-the-coast text-white mr-2\"></i>\r\n                                        <p className=\"text-white text-bold\">Cadastro edição / cards</p>\r\n                                    </Link>\r\n                                </li>\r\n                            }\r\n                            {isAdmin &&\r\n                                <li className=\"nav-item\">\r\n                                    <Link to='/usercollection/users' className=\"nav-link\">                                    \r\n                                        <i className=\"fas fa-users text-white mr-2\"></i>\r\n                                        <p className=\"text-white text-bold\">Administrar Usuários</p>\r\n                                    </Link>\r\n                                </li>\r\n                            }\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </aside>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MenuLeft\r\n\r\n","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\cardView\\index.js",[],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\Dashboard\\index.js",["152"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport Loading from '../Loading'\r\nimport './index.css'\r\nimport {BASE_URL_BACK} from '../../utils/variaveisAmbiente'\r\nimport SwampImage from '../../img/pantano_branco.svg'\r\nimport PlainsImage from '../../img/planicie_branco.svg'\r\nimport MountainImage from '../../img/montanha_branco.svg'\r\nimport IslandImage from '../../img/ilha_branco.svg'\r\nimport FlorestImage from '../../img/floresta_branco.svg'\r\nimport MultiColorImage from '../../img/multicolor_branco.svg'\r\nimport ArtifactImage from '../../img/artefato_branco.svg'\r\nimport axios from 'axios';\r\nimport jwt from 'jsonwebtoken'\r\nimport _ from 'lodash'\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nconst Dashboard = () => {\r\n    const token = localStorage.getItem('token')\r\n    const {id} = jwt.decode(token)\r\n    const [cardsBlack, setCardsBlack] = useState(0)\r\n    const [cardsYellow, setCardsYellow] = useState(0)\r\n    const [cardsRed, setCardsRed] = useState(0)\r\n    const [cardsBlue, setCardsBlue] = useState(0)\r\n    const [cardsGreen, setCardsGreen] = useState(0)\r\n    const [cardsMultiColor, setCardsMultiColor] = useState(0)\r\n    const [cardsColorLess, setCardsColorLess] = useState(0)\r\n    \r\n    const [cardsCreature, setCardsCreature] = useState(0)\r\n    const [cardsInstant, setCardsInstant] = useState(0)\r\n    const [cardsSorcery, setCardsSorcery] = useState(0)\r\n    const [cardsEnchantment, setCardsEnchantment] = useState(0)\r\n    const [cardsPlaneswalker, setCardsPlaneswalker] = useState(0)\r\n    const [M, setM] = useState(0)\r\n    const [NM, setNM] = useState(0)\r\n    const [SP, setSP] = useState(0)\r\n    const [HP, setHP] = useState(0)\r\n    const [DM, setDM] = useState(0)\r\n    const [comum, setComum] = useState(0)\r\n    const [incomum, setIncomum] = useState(0)\r\n    const [rara, setRara] = useState(0)\r\n    const [lendaria, setLendaria] = useState(0)\r\n    const refLoading = useRef()\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/collections/${id}`,configAxios)\r\n        .then(resp => {\r\n\r\n            setCardsBlack(_.reduce(_.map(_.filter(resp.data, {'card_color':'Preto'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setCardsYellow(_.reduce(_.map(_.filter(resp.data, {'card_color':'Branco'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setCardsRed(_.reduce(_.map(_.filter(resp.data, {'card_color':'Vermelho'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setCardsBlue(_.reduce(_.map(_.filter(resp.data, {'card_color':'Azul'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setCardsGreen(_.reduce(_.map(_.filter(resp.data, {'card_color':'Verde'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setCardsMultiColor(_.reduce(_.map(_.filter(resp.data, {'card_color':'Multicolor'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setCardsColorLess(_.reduce(_.map(_.filter(resp.data, {'card_color':'Incolor'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setCardsCreature(_.reduce(_.map(_.filter(resp.data, {'card_type':'Criatura'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setCardsInstant(_.reduce(_.map(_.filter(resp.data, {'card_type':'Mágica Instântanea'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setCardsSorcery(_.reduce(_.map(_.filter(resp.data, {'card_type':'Feitiço'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setCardsEnchantment(_.reduce(_.map(_.filter(resp.data, {'card_type':'Encantamento'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setCardsPlaneswalker(_.reduce(_.map(_.filter(resp.data, {'card_type':'Planeswalker'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setM(_.reduce(_.map(_.filter(resp.data, {'quality':'M'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setNM(_.reduce(_.map(_.filter(resp.data, {'quality':'NM'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setSP(_.reduce(_.map(_.filter(resp.data, {'quality':'SP'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setHP( _.reduce(_.map(_.filter(resp.data, {'quality':'HP'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setDM(_.reduce(_.map(_.filter(resp.data, {'quality':'DM'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setComum(_.reduce(_.map(_.filter(resp.data, {'rarity':'Comum'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setIncomum(_.reduce(_.map(_.filter(resp.data, {'rarity':'Incomum'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setRara(_.reduce(_.map(_.filter(resp.data, {'rarity':'Rara'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setLendaria(_.reduce(_.map(_.filter(resp.data, {'rarity':'Lendaria'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            refLoading.current.executeLoading()\r\n        })\r\n    },[id])\r\n\r\n    return(\r\n        <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                <div className=\"col-12 mt-2\">\r\n                    <h1>Dashboard</h1>\r\n                </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                <div className=\"col-lg-3 col-12\">\r\n                    <div className=\"info-box mb-3 bg-black\">\r\n                    <div className=\"info-box-content\">\r\n                        <span className=\"info-box-number\"><h1 className=\"text-white text-bold\">{cardsBlack}</h1></span>\r\n                        <span className=\"info-box-text\"><h4 className=\"text-white text-bold\">{cardsBlack > 1 ? 'Cartas' : 'Carta'}</h4></span>\r\n                    </div>\r\n                        <span className=\"info-box-icon\"><img src={SwampImage} alt=\"\"/></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-3 col-12\">\r\n                    <div className=\"info-box mb-3 bg-warning\">\r\n                    <div className=\"info-box-content\">\r\n                        <span className=\"info-box-number\"><h1 className=\"text-white text-bold\">{cardsYellow}</h1></span>\r\n                        <span className=\"info-box-text\"><h4 className=\"text-white text-bold\">{cardsYellow > 1 ? 'Cartas' : 'Carta'}</h4></span>\r\n                    </div>\r\n                        <span className=\"info-box-icon\"><img src={PlainsImage} alt=\"\"/></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-3 col-12\">\r\n                    <div className=\"info-box mb-3 bg-danger\">\r\n                    <div className=\"info-box-content\">\r\n                        <span className=\"info-box-number\"><h1 className=\"text-white text-bold\">{cardsRed}</h1></span>\r\n                        <span className=\"info-box-text\"><h4 className=\"text-white text-bold\">{cardsRed > 1 ? 'Cartas' : 'Carta'}</h4></span>\r\n                    </div>\r\n                        <span className=\"info-box-icon\"><img src={MountainImage} alt=\"\"/></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-3 col-12\">\r\n                    <div className=\"info-box mb-3 bg-primary\">\r\n                    <div className=\"info-box-content\">\r\n                        <span className=\"info-box-number\"><h1 className=\"text-white text-bold\">{cardsBlue}</h1></span>\r\n                        <span className=\"info-box-text\"><h4 className=\"text-white text-bold\">{cardsBlue > 1 ? 'Cartas' : 'Carta'}</h4></span>\r\n                    </div>\r\n                        <span className=\"info-box-icon\"><img src={IslandImage} alt=\"\"/></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-3 col-12\">\r\n                    <div className=\"info-box mb-3 bg-success\">\r\n                    <div className=\"info-box-content\">\r\n                        <span className=\"info-box-number\"><h1 className=\"text-white text-bold\">{cardsGreen}</h1></span>\r\n                        <span className=\"info-box-text\"><h4 className=\"text-white text-bold\">{cardsGreen > 1 ? 'Cartas' : 'Carta'}</h4></span>\r\n                    </div>\r\n                        <span className=\"info-box-icon\"><img src={FlorestImage} alt=\"\"/></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-3 col-12\">\r\n                    <div className=\"info-box mb-3 bgMultiColor\">\r\n                    <div className=\"info-box-content\">\r\n                        <span className=\"info-box-number\"><h1 className=\"text-white text-bold\">{cardsMultiColor}</h1></span>\r\n                        <span className=\"info-box-text\"><h4 className=\"text-white text-bold\">{cardsMultiColor > 1 ? 'Cartas' : 'Carta'}</h4></span>\r\n                    </div>\r\n                        <span className=\"info-box-icon\"><img src={MultiColorImage} alt=\"\"/></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-3 col-12\">\r\n                    <div className=\"info-box mb-3 bg-secondary\">\r\n                    <div className=\"info-box-content\">\r\n                        <span className=\"info-box-number\"><h1 className=\"text-white text-bold\">{cardsColorLess}</h1></span>\r\n                        <span className=\"info-box-text\"><h4 className=\"text-white text-bold\">{cardsColorLess > 1 ? 'Cartas' : 'Carta'}</h4></span>\r\n                    </div>\r\n                        <span className=\"info-box-icon\"><img src={ArtifactImage} alt=\"\"/></span>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-6\">\r\n                        <div className=\"card card-danger\">\r\n                        <div className=\"card-header\">\r\n                            <h3 className=\"card-title\">Porcentagem por tipo de cartas</h3>\r\n                            <div className=\"card-tools\">\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"chart\">\r\n                                <div>\r\n                                    <Chart\r\n                                    chartType=\"PieChart\"\r\n                                    loader={<div>Carregando o gráfico</div>}\r\n                                    data={[\r\n                                        ['Card Type', 'Number'],\r\n                                        ['Criatura', cardsCreature],\r\n                                        ['Mágica Instântanea', cardsInstant],\r\n                                        ['Feitiço', cardsSorcery],\r\n                                        ['Encanamento', cardsEnchantment],\r\n                                        ['Planeswalker', cardsPlaneswalker],\r\n                                    ]}\r\n                                    options={{\r\n                                        chartArea: { left: 0, top: 0, right: 0, bottom: 10 },\r\n                                        legend: {position: 'right', textStyle: {fontSize: 20}}, \r\n                                        is3D: true,                                       \r\n                                    }}\r\n                                    rootProps={{ 'data-testid': '1' }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-6\">\r\n                        <div className=\"card card-danger\">\r\n                        <div className=\"card-header\">\r\n                            <h3 className=\"card-title\">Porcentagem de cartas por cor</h3>\r\n                            <div className=\"card-tools\">\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"chart\">\r\n                                <div>\r\n                                    <Chart\r\n                                    chartType=\"PieChart\"\r\n                                    loader={<div>Carregando o gráfico</div>}\r\n                                    data={[\r\n                                        ['Card Type', 'Number'],\r\n                                        ['Preto', cardsBlack],\r\n                                        ['Branco', cardsYellow],\r\n                                        ['Vermelho', cardsRed],\r\n                                        ['Azul', cardsBlue],\r\n                                        ['Verde', cardsGreen],\r\n                                        ['Multicolorida', cardsMultiColor],\r\n                                        ['Artefato', cardsColorLess],\r\n                                    ]}\r\n                                    options={{\r\n                                        chartArea: { left: 0, top: 0, right: 0, bottom: 10 },\r\n                                        legend: {\r\n                                            position: 'right', \r\n                                            textStyle: {fontSize: 20},\r\n                                            scrollArrows: { inactiveColor: \"black\", activeColor: \"black\" },\r\n                                            pagingTextStyle: { color: 'black'},\r\n                                        },\r\n                                        colors: ['black','#ffc107', '#dc3545', '#007bff', '#28a745', '#a69b00', '#6c757d'],\r\n                                        is3D: true,\r\n                                    }}\r\n                                    rootProps={{ 'data-testid': '2' }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n                <div className=\"row\">\r\n                <div className=\"col-lg-6\">\r\n                    <div className=\"card card-success\">\r\n                    <div className=\"card-header\">\r\n                        <h3 className=\"card-title\">Qualidade vs Quantidade</h3>\r\n                        <div className=\"card-tools\">\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <Chart\r\n                            chartType=\"ColumnChart\"\r\n                            loader={<div>Carregando o gráfico</div>}\r\n                            data={[\r\n                            ['Qualidade', 'Quantidade'],\r\n                            ['M', M],\r\n                            ['NM', NM],\r\n                            ['SP', SP],\r\n                            ['HP', HP],\r\n                            ['DM', DM],\r\n                            ]}\r\n                            options={{\r\n                                legend: {\r\n                                    position: 'none',\r\n                                },\r\n                                colors: ['black'],\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-6\">\r\n                    <div className=\"card card-success\">\r\n                    <div className=\"card-header\">\r\n                        <h3 className=\"card-title\">Raridade vs Quantidade</h3>\r\n\r\n                        <div className=\"card-tools\">\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <Chart\r\n                            chartType=\"ColumnChart\"\r\n                            loader={<div>Carregando o gráfico</div>}\r\n                            data={[\r\n                            ['Raridade', 'Quantidade'],\r\n                            ['Comum', comum],\r\n                            ['Incomum', incomum],\r\n                            ['Rara', rara],\r\n                            ['Lendária', lendaria]\r\n                            ]}\r\n                            options={{\r\n                                legend: {\r\n                                    position: 'none',\r\n                                },\r\n                                colors: ['black'],\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <Loading\r\n                    ref={refLoading}\r\n                />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Dashboard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\CardView\\index.js",["153","154"],"import React, {useEffect, useRef, useState} from 'react';\r\nimport Loading from '../Loading'\r\nimport axios from 'axios';\r\nimport {BASE_URL_BACK, BASE_URL_API_MAGIC} from '../../utils/variaveisAmbiente'\r\nimport Birds from '../../img/aves_do_paraiso.png'\r\nimport jwt from 'jsonwebtoken'\r\nimport _ from 'lodash'\r\n\r\nconst CardView = (props) => {\r\n\r\n    const urlId = props.match.params.id\r\n    const token = localStorage.getItem('token')\r\n    const {id} = jwt.decode(token)\r\n    const [card, setCard] = useState([])\r\n    const [imageUrl, setImageUrl] = useState('')\r\n    const refLoading = useRef()\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/collections/${id}`,configAxios)\r\n        .then(resp => {\r\n            const data = _.filter(resp.data, {'id': parseInt(urlId)})\r\n            setCard(data)\r\n\r\n            axios.get(`${BASE_URL_API_MAGIC}?name=${data[0].card_name}&language=Portuguese (Brazil)`)\r\n            .then(resp => {\r\n                const data = []\r\n\r\n                _.map(resp.data.cards, img => {\r\n                    if(_.has(img, 'imageUrl')){\r\n                        data.push(img)\r\n                    }\r\n                })\r\n\r\n                setImageUrl(data[0].imageUrl)\r\n                setTimeout(() => {\r\n                    refLoading.current.executeLoading()\r\n                }, 1000);\r\n\r\n            })\r\n        })\r\n        \r\n    },[urlId])\r\n\r\n    return(\r\n        <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                    <div className=\"col-12 mt-2 mb-2\">\r\n                        <h1>{card[0]?.card_name}</h1>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-2\">\r\n                        <img src={imageUrl} alt=\"\" width='90%'/>\r\n                    </div>\r\n                    <div className=\"col-lg-10 mt-2\">\r\n                        <p><b>Nome da Carta:</b> {card[0]?.card_name}</p>\r\n                        <p><b>Tipo da carta:</b> {card[0]?.card_type}</p>\r\n                        <p><b>Cor da carta:</b> {card[0]?.card_color}</p>\r\n                        <p><b>Edição da carta:</b> {card[0]?.edition}</p>\r\n                        <p><b>Raridade da carta:</b> {card[0]?.rarity}</p>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <Loading \r\n                    ref={refLoading}\r\n                />\r\n            </section>\r\n\r\n    )\r\n}\r\n\r\nexport default CardView","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\EditionCards\\index.js",["155","156","157","158"],"import React, { useEffect, useRef, useState } from 'react'\r\nimport './index.css'\r\nimport {BASE_URL_BACK} from '../../utils/variaveisAmbiente'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport {messages} from '../../utils/messages'\r\nimport {toast, ToastContainer } from 'react-toastify'\r\nimport Modals from '../Modals'\r\nimport _ from 'lodash'\r\nimport $ from 'jquery'\r\n\r\n\r\nconst EditionCards = () => {\r\n    const [cardEditions, setCardEditions] = useState([])\r\n    const [cardFilterEdition, setCardFilterEdition] = useState([])\r\n    const [lineId, setLineId] = useState()\r\n    const token = localStorage.getItem('token')\r\n    const refEdition = useRef()\r\n    const refModal = useRef()\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }    \r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardeditions`,configAxios)\r\n            .then(resp => {\r\n                setCardEditions(resp.data.edition)\r\n                let dataTable = $('#dataTableEditionCards').DataTable({\r\n                    \"responsive\": true,\r\n                    \"autoWidth\": false,\r\n                    \"lengthChange\": false,\r\n                    \"pageLength\": 10,\r\n                    \"bInfo\" : false,\r\n                    \"language\": {\r\n                        \"paginate\": {\r\n                          \"previous\": \"Anterior\",\r\n                          \"next\": \"Próxima\"\r\n                        },\r\n                        \"emptyTable\": \"Não existe dados para serem carregados\"\r\n                    },\r\n                    buttons: [\r\n                        { \r\n                            extend: 'pdfHtml5',\r\n                            customize: function(doc) {\r\n                                doc.styles.tableBodyEven.alignment = 'center';\r\n                                doc.styles.tableBodyOdd.alignment = 'center'; \r\n                            },\r\n                            exportOptions:{\r\n                                columns: [0,1,2,3,4,5,6,7]\r\n                            }\r\n                        },\r\n                        { \r\n                            extend: 'excel',\r\n                            exportOptions:{\r\n                                columns: [0,1,2,3,4,5,6,7]\r\n                            }\r\n                        }\r\n                    ]\r\n                })\r\n\r\n                $('#searchBarTec').on('keyup change', function () {\r\n                    dataTable.search(this.value).draw()\r\n                })\r\n\r\n                $('#exportExcel').on('click', function() {\r\n                    dataTable.button('.buttons-excel').trigger()\r\n                })\r\n\r\n                $('#exportPdf').on('click', function() {\r\n                    dataTable.button('.buttons-pdf').trigger()\r\n                })\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    \r\n    }, [])\r\n\r\n    const handleChangeOptions = (e) => {\r\n        const idEdition = refEdition.current.value\r\n\r\n        axios.get(`${BASE_URL_BACK}/cards`,configAxios)\r\n            .then(resp => {\r\n                $('#dataTableEditionCards').DataTable().destroy();\r\n                setCardFilterEdition(_.filter(resp.data, {'edition_id': parseInt(idEdition)}))\r\n                let dataTable = $('#dataTableEditionCards').DataTable({\r\n                    \"responsive\": true,\r\n                    \"autoWidth\": false,\r\n                    \"lengthChange\": false,\r\n                    \"pageLength\": 10,\r\n                    \"bInfo\" : false,\r\n                    \"language\": {\r\n                        \"paginate\": {\r\n                          \"previous\": \"Anterior\",\r\n                          \"next\": \"Próxima\"\r\n                        },\r\n                        \"emptyTable\": \"Não existe dados para serem carregados\"\r\n                    },\r\n                    buttons: [\r\n                        { \r\n                            extend: 'pdfHtml5',\r\n                            customize: function(doc) {\r\n                                doc.styles.tableBodyEven.alignment = 'center';\r\n                                doc.styles.tableBodyOdd.alignment = 'center'; \r\n                            },\r\n                            exportOptions:{\r\n                                columns: [0,1,2,3,4,5,6,7]\r\n                            }\r\n                        },\r\n                        { \r\n                            extend: 'excel',\r\n                            exportOptions:{\r\n                                columns: [0,1,2,3,4,5,6,7]\r\n                            }\r\n                        }\r\n                    ]\r\n                })\r\n\r\n                $('#searchBarTec').on('keyup change', function () {\r\n                    dataTable.search(this.value).draw()\r\n                })\r\n\r\n                $('#exportExcel').on('click', function() {\r\n                    dataTable.button('.buttons-excel').trigger()\r\n                })\r\n\r\n                $('#exportPdf').on('click', function() {\r\n                    dataTable.button('.buttons-pdf').trigger()\r\n                })\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }\r\n\r\n    const renderEditions = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mt-3\">\r\n                <div className=\"form-group\">\r\n                <label>Selecione a edição</label>\r\n                <select className=\"form-control\" ref={refEdition} onChange={e => handleChangeOptions(e)} required>\r\n                    <option>Selecione uma edição</option>\r\n                    {cardEditions.map(edition => {\r\n                        return(\r\n                            <option key={edition.id} value={edition.id}>{edition.edition}</option>\r\n                        )\r\n                    })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderRow = () => {\r\n        return cardFilterEdition.map(line => (\r\n                <tr key={line.id}>\r\n                    <td>{line.card_name}</td>\r\n                    <td className=\"text-center\">{line.card_type}</td>\r\n                    <td className=\"text-center\">{line.card_color}</td>\r\n                    <td className=\"text-center\">{line.edition}</td>\r\n                    <td className=\"text-center\">{line.rarity}</td>\r\n                    <td className=\"text-center\"><Link className='link_text_pen' to={`/usercollection/editioncards/${line.id}`}><i className=\"fas fa-pencil-alt click\"></i></Link></td>\r\n                    <td className=\"text-center\"><i className=\"fas fa-trash-alt click\" onClick={() => openModal(line.id)}></i></td>\r\n                </tr>\r\n            )\r\n        )\r\n    }\r\n\r\n    const openModal = (id) => {\r\n        setLineId(id)\r\n        refModal.current.openModal()\r\n    }\r\n\r\n    const deleteItem = () => {\r\n        axios.delete(`${BASE_URL_BACK}/cards/${lineId}`,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message == 'cards deleted'){\r\n                    toast.success(messages(resp.data.message))\r\n                    const filtered = cardFilterEdition.filter(cards => {\r\n                        return cards.id != lineId\r\n                    })            \r\n                    setCardFilterEdition(filtered)\r\n                    refModal.current.openModal()\r\n                }\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }\r\n\r\n    const saveNewEdition = (evt) => {\r\n        evt.preventDefault()\r\n        const objAddEdtion = {\r\n            'edition': evt.target.newEdition.value,\r\n            'code': evt.target.codeNewEdition.value\r\n        }\r\n\r\n        axios.post(`${BASE_URL_BACK}/cardeditions`,objAddEdtion,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                axios.get(`${BASE_URL_BACK}/cardeditions`,configAxios)\r\n                    .then(resp => {\r\n                        setCardEditions(resp.data.edition)\r\n                    })\r\n\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }\r\n\r\n    return(\r\n        <section className=\"content\">\r\n           <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 mt-2 mb-3\">\r\n                    <h1>Edições e Cards</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {renderEditions()}\r\n                    <div className=\"col-lg-4 mt-5\">                \r\n                        <button type=\"button\" data-toggle=\"collapse\" href=\"#addNewEdition\" className=\"btn btn-dark mb-3\">Nova Edição</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <form onSubmit={saveNewEdition}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-4\">\r\n                            <div className=\"collapse multi-collapse\" id=\"addNewEdition\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-6\">\r\n                                        <input type=\"text\" name='newEdition' className=\"form-control mb-3\" placeholder=\"Qual o nome da edição?\" />\r\n                                    </div>\r\n                                    <div className=\"col-lg-6\">\r\n                                        <input type=\"text\" name='codeNewEdition' className=\"form-control mb-3\" placeholder=\"Qual o código da edição?\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-4\">\r\n                            <div className=\"collapse multi-collapse\" id=\"addNewEdition\">\r\n                                <button type=\"submit\" className=\"btn btn-dark mr-2\">Salvar</button>\r\n                                <a href=\"https://en.wikipedia.org/wiki/List_of_Magic:_The_Gathering_sets\" target='_blank'><i className=\"fas fa-question-circle text-primary helpme\" title='Código da edição'></i></a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n                <hr className=\"mb-4\"></hr>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 mt-2 mb-3\">\r\n                    <h1>Cards</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-11\">\r\n                        <div className=\"input-group mb-3\">\r\n                            <input type=\"email\" className=\"form-control\" id=\"searchBarTec\" placeholder=\"Qual carta você está procurando?\" />\r\n                            <div className=\"input-group-append\">\r\n                            <div className=\"input-group-text\">\r\n                                <i className=\"fas fa-search\"></i>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-1 mb-2\">\r\n                        <Link className=\"btn btn-dark\" to='/usercollection/addeditioncards'>Adicionar</Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                    <div className=\"col-lg-12\">\r\n                        <table id=\"dataTableEditionCards\" className=\"table table-bordered table-responsive-sm table-responsive-md\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Nome</th>\r\n                            <th className=\"text-center\">Tipo</th>\r\n                            <th className=\"text-center\">Cor</th>\r\n                            <th className=\"text-center\">Edição</th>\r\n                            <th className=\"text-center\">Raridade</th>\r\n                            <th className=\"text-center\">Editar</th>\r\n                            <th className=\"text-center\">Remover</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {renderRow()}\r\n                        </tbody>\r\n                        </table>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n           </div>\r\n           <ToastContainer />\r\n           <Modals \r\n                title='Exclusão de card'\r\n                body='Deseja realmente excluir este card? Se você fizer isso, este card será removido de todos os usuários'\r\n                nameButton='Excluir'\r\n                deleteItem={deleteItem}\r\n                ref={refModal}\r\n            />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default EditionCards\r\n","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\Loading\\index.js",["159","160","161"],"import React, { forwardRef, useImperativeHandle, useState } from 'react';\r\nimport './index.css'\r\n\r\nconst Loading = forwardRef((props, ref) => {\r\n\r\n    const [showLoading, setShowLoading] = useState(true)\r\n    \r\n    useImperativeHandle(\r\n        ref,\r\n        () => ({\r\n            executeLoading(){\r\n                {showLoading == false ? setShowLoading(true) : setShowLoading(false)}\r\n            }\r\n        })\r\n    )\r\n\r\n    if(showLoading == false){\r\n        return null\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n            <div className=\"d-flex justify-content-center loading\">\r\n                <div className=\"spinner-grow text-dark\" role=\"status\">\r\n                </div>\r\n                <div className=\"spinner-grow text-dark\" role=\"status\">\r\n                </div>\r\n                <div className=\"spinner-grow text-dark\" role=\"status\">\r\n                </div>\r\n                <div className=\"spinner-grow text-dark\" role=\"status\">\r\n                </div>\r\n                <div className=\"spinner-grow text-dark\" role=\"status\">\r\n                </div>\r\n                <div className=\"spinner-grow text-dark\" role=\"status\">\r\n                </div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-center loading-text\">\r\n                <h5>Carregando...</h5>\r\n            </div>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default Loading","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\AddCardsCollection\\index.js",["162"],"import React, { useEffect, useRef, useState } from 'react'\r\nimport './index.css'\r\nimport { Typeahead} from 'react-bootstrap-typeahead'\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css'\r\nimport {messages} from '../../utils/messages'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK} from '../../utils/variaveisAmbiente'\r\nimport {useHistory, Link} from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport _ from 'lodash'\r\nimport jwt from 'jsonwebtoken'\r\n\r\nconst AddCardsCollection = () => {\r\n\r\n    const history = useHistory()\r\n    const [allcards, setAllCards] = useState([])\r\n    const [cardName, setCardName] = useState([]);\r\n    const [cardSelected, setCardSelected] = useState('')\r\n    const [cardQuality, setCardQuality] = useState([])\r\n    const [cardLanguage, setCardLanguage] = useState([])\r\n    const refQuality = useRef()\r\n    const refLanguage = useRef()\r\n    const [quantity, setQuantity] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const user = jwt.decode(token)\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cards`,configAxios)\r\n            .then(resp => {\r\n                setAllCards(resp.data)\r\n                const data = resp.data.map((cards, index, array) => {                    \r\n                        return `${cards.card_name} - ${cards.edition}`\r\n                })\r\n                setCardName(data)\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n\r\n        axios.get(`${BASE_URL_BACK}/cardqualities`,configAxios)\r\n            .then(resp => {\r\n                setCardQuality(resp.data.quality)\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n\r\n        axios.get(`${BASE_URL_BACK}/cardlanguages`,configAxios)\r\n            .then(resp => {\r\n                setCardLanguage(resp.data.language)\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }, [])\r\n\r\n    const handleChange = (selected) => {\r\n        setCardSelected(selected)\r\n    }\r\n\r\n    const renderQuality = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Qualidade da Carta</label>\r\n                <select className=\"form-control\" ref={refQuality} required>\r\n                   {cardQuality.map(quality => {\r\n                        return(\r\n                            <option key={quality.id} value={quality.id}>{quality.quality}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderLanguage = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Idioma da Carta</label>\r\n                <select className=\"form-control\" ref={refLanguage} required>\r\n                    {cardLanguage.map(language => {\r\n                        return(\r\n                            <option key={language.id} value={language.id}>{language.language}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const cardQuantity = evt => {\r\n        setQuantity(evt.target.value)\r\n    }\r\n\r\n    const saveCard = evt => {\r\n        evt.preventDefault()\r\n\r\n        const nameArr = cardSelected[0].split('-')\r\n        const nameArrTrim = nameArr.map(name => {\r\n            return name.trim()\r\n        })\r\n        const userCardsSelected = (_.find(allcards, {card_name: nameArrTrim[0], edition: nameArrTrim[1]}));\r\n        const qualityId = refQuality.current.value\r\n        const languageId = refLanguage.current.value\r\n        const userCardsSelectedId = userCardsSelected.id\r\n        const userId = user.id\r\n        const objAddCard = {\r\n            user_id: userId,\r\n            cardLanguage_id: languageId,\r\n            cardQuality_id: qualityId,\r\n            cards_id: userCardsSelectedId,\r\n            quantity\r\n        }\r\n\r\n        axios.post(`${BASE_URL_BACK}/collections`,objAddCard,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/usercollection/cards')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n        <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                <div className=\"col-12 mt-2 mb-3\">\r\n                    <h1>Cadastro de cartas na sua coleção</h1>\r\n                </div>\r\n                </div>\r\n\r\n                <form onSubmit={saveCard}>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-4 mb-5\">\r\n                        <div className=\"form-group\">\r\n                        <label>Nome da Carta</label>\r\n                            <Typeahead\r\n                                id=\"cardsName\"\r\n                                onChange={(selected) => {\r\n                                    handleChange(selected)\r\n                                }}\r\n                                options={cardName}\r\n                                minLength={2}\r\n                                inputProps={{ required: true }}\r\n                                >\r\n                            </Typeahead>\r\n                        </div>\r\n                    </div>\r\n                    {renderQuality()}\r\n                    {renderLanguage()}\r\n                    <div className=\"col-lg-4\">\r\n                        <div className=\"form-group\">\r\n                        <label>Quantidade de Carta</label>\r\n                        <input type=\"number\" className=\"form-control\" value={quantity} placeholder=\"Digite a quantidade de cartas\" onChange={cardQuantity} required />\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <button type=\"submit\" className=\"btn btn-dark mr-2\">Cadastrar</button>\r\n                        <Link className=\"btn btn-dark mr-2\" to='/usercollection/cards'>Voltar</Link>\r\n                    </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <ToastContainer />\r\n        </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddCardsCollection","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\EditCardsCollection\\index.js",["163","164","165","166","167","168","169","170","171","172","173","174","175"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport axios from 'axios'\r\nimport jwt from 'jsonwebtoken'\r\nimport {BASE_URL_BACK} from '../../utils/variaveisAmbiente'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {messages} from '../../utils/messages'\r\nimport _ from 'lodash'\r\nimport { useHistory, useParams, Link } from 'react-router-dom';\r\n\r\nconst EditCardsCollection = (props) => {\r\n    const token = localStorage.getItem('token')\r\n    const {id} = useParams()\r\n    const history = useHistory()\r\n    const [cardId, setCardId] = useState()\r\n    const [cardName, setCardName] = useState()\r\n    const [qualityId, setQualityId] = useState('')\r\n    const [cardQuality, setCardQuality] = useState([])\r\n    const [languageId, setLanguageId] = useState([])\r\n    const [cardLanguage, setCardLanguage] = useState([])\r\n    const [quantity, setQuantity] = useState('')\r\n    const [redirectPage, setRedirectPage] = useState(false)\r\n    const refQuality = useRef()\r\n    const refLanguage = useRef()\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n    const jwtId = jwt.decode(token)\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/collections/${jwtId.id}`,configAxios)\r\n        .then(resp => {\r\n            setQualityId(resp.data.filter(card => card.id == id )[0].quality_id);\r\n            setLanguageId(resp.data.filter(card => card.id == id )[0].language_id)\r\n            setCardName(resp.data.filter(card => card.id == id )[0].card_name)\r\n            setQuantity(resp.data.filter(card => card.id == id )[0].quantity)\r\n            setCardId(resp.data.filter(card => card.id == id )[0].card_id)\r\n        })\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardlanguages`,configAxios)\r\n            .then(resp => {\r\n                setCardLanguage(resp.data.language)\r\n            })\r\n    },[languageId])\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardqualities`,configAxios)\r\n            .then(resp => {\r\n                    setCardQuality(resp.data.quality)\r\n            })\r\n    },[qualityId])\r\n\r\n    const cardQuantity = evt => {\r\n        setQuantity(evt.target.value)\r\n    }\r\n\r\n    const saveCard = (evt) => {\r\n        evt.preventDefault()\r\n        const obj = {\r\n            user_id: jwtId.id,\r\n            cardLanguage_id: parseInt(refLanguage.current.value),\r\n            cardQuality_id: parseInt(refQuality.current.value),\r\n            cards_id: cardId,\r\n            quantity: parseInt(quantity)\r\n        }\r\n        \r\n        axios.put(`${BASE_URL_BACK}/collections/${props.match.params.id}`,obj,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message = \"card collection updated\"){\r\n                    toast.success(messages('card collection updated'))\r\n                    setTimeout(() => {\r\n                        history.push('/usercollection/cards')\r\n                    }, 5000);\r\n                }\r\n            })\r\n    }\r\n\r\n    const renderQuality = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Qualidade da Carta</label>\r\n                <select name={'quality'} className=\"form-control\" ref={refQuality} required>\r\n                   {qualityId > 0 && _.orderBy(cardQuality,[i => i.id == qualityId],['desc']).map(quality => {\r\n                        return(\r\n                            <option key={quality.id} value={quality.id}>{quality.quality}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderLanguage = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Idioma da Carta</label>\r\n                <select className=\"form-control\" name={'language'} ref={refLanguage} required>\r\n                    {languageId > 0 && _.orderBy(cardLanguage,[i => i.id == languageId],['desc']).map(language => {\r\n                        return(\r\n                            <option key={language.id} value={language.id}>{language.language}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                <div className=\"col-12 mt-2 mb-3\">\r\n                    <h1>Cadastro de Cards</h1>\r\n                </div>\r\n                </div>\r\n\r\n                <form onSubmit={saveCard}>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-4\">\r\n                        <div className=\"form-group\">\r\n                        <label>Nome da Carta</label>\r\n                        <input type=\"number\" className=\"form-control\" value={cardName || ''}  placeholder={cardName} disabled={true} />\r\n                        </div>\r\n                    </div>\r\n                    {renderQuality()}\r\n                    {renderLanguage()}\r\n                    <div className=\"col-lg-4\">\r\n                        <div className=\"form-group\">\r\n                        <label>Quantidade de Carta</label>\r\n                        <input type=\"number\" className=\"form-control\" value={quantity} onChange={cardQuantity} placeholder=\"Digite a quantidade de cartas\"  required />\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <button type=\"submit\" className=\"btn btn-dark mr-2\">Atualizar</button>\r\n                        <Link className=\"btn btn-dark mr-2\" to='/usercollection/cards'>Voltar</Link>\r\n                    </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <ToastContainer />\r\n        </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditCardsCollection","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\EditEditionCards\\index.js",["176","177","178","179","180","181","182","183","184","185","186","187","188"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK} from '../../utils/variaveisAmbiente'\r\nimport {messages} from '../../utils/messages'\r\nimport { useHistory, useParams, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport _ from 'lodash'\r\n\r\nconst EditEditionCards = (props) => {\r\n\r\n    const [card, setCard] = useState([])\r\n    const [cardName, setCardName] = useState('')\r\n    const [typeId, setTypeId] = useState([])\r\n    const [cardType, setCardType] = useState([])\r\n    const [cardColor, setCardColor] = useState([])\r\n    const [cardEdition, setCardEdition] = useState([])\r\n    const [cardRarity, setCardRarity] = useState([])\r\n    const token = localStorage.getItem('token')\r\n    const history = useHistory()\r\n    const {id} = props.match.params\r\n    const refCardType = useRef()\r\n    const refCardColor = useRef()\r\n    const refCardEdition = useRef()\r\n    const refCardRarity = useRef()\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        axios.get(`${BASE_URL_BACK}/cards`,configAxios)\r\n            .then(resp => {\r\n                setCardName(_.filter(resp.data, {'id': parseInt(id)})[0].card_name)\r\n                setCard(_.filter(resp.data, {'id': parseInt(id)})[0])\r\n\r\n            })\r\n    },[id])\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardtypes`,configAxios)\r\n            .then(resp => {\r\n                setCardType(resp.data.type)\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    },[card.type_id])\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardcolors`,configAxios)\r\n            .then(resp => {\r\n                setCardColor(resp.data.color)\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }, [card.color_id])\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardeditions`,configAxios)\r\n            .then(resp => {\r\n                setCardEdition(resp.data.edition)\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }, [card.edition_id])\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardrarities`,configAxios)\r\n            .then(resp => {\r\n                setCardRarity(resp.data.rarity)\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    },[card.rarity_id])\r\n\r\n    const renderCardType = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Tipo da Carta</label>\r\n                <select className=\"form-control\" ref={refCardType} required>\r\n                    {card.type_id > 0 && _.orderBy(cardType,[i => i.id == card.type_id],['desc']).map(type => {\r\n                        return(\r\n                            <option key={type.id} value={type.id}>{type.type}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderCardColor = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Cor da Carta</label>\r\n                <select className=\"form-control\" ref={refCardColor} required>\r\n                    {card.color_id > 0 && _.orderBy(cardColor,[i => i.id == card.color_id],['desc']).map(color => {\r\n                        return(\r\n                            <option key={color.id} value={color.id}>{color.color}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderEdition = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Edição da Carta</label>\r\n                <select className=\"form-control\" ref={refCardEdition} required>\r\n                    {card.edition_id > 0 && _.orderBy(cardEdition,[i => i.id == card.edition_id],['desc']).map(edition => {\r\n                        return(\r\n                            <option key={edition.id} value={edition.id}>{edition.edition}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderRarity = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Raridade da Carta</label>\r\n                <select className=\"form-control\" ref={refCardRarity} required>\r\n                    {card.rarity_id > 0 && _.orderBy(cardRarity,[i => i.id == card.rarity_id],['desc']).map(rarity => {\r\n                        return(\r\n                            <option key={rarity.id} value={rarity.id}>{rarity.rarity}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const handleChangeName = (evt) => {\r\n        setCardName(evt.target.value)\r\n    }\r\n\r\n\r\n    const saveCard = (evt) => {\r\n        evt.preventDefault()\r\n\r\n        const objAddCard = {\r\n            cardName: evt.target.cardName.value,\r\n            cardColor_id: refCardColor.current.value,\r\n            cardEdition_id: refCardEdition.current.value,\r\n            cardType_id: refCardType.current.value,\r\n            cardRarity_id: refCardRarity.current.value\r\n        }\r\n\r\n        axios.put(`${BASE_URL_BACK}/cards/${id}`,objAddCard,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message == 'card updated'){\r\n                    toast.success(messages(resp.data.message))\r\n                    setTimeout(() => {\r\n                        history.push('/usercollection/editioncards')\r\n                    }, 5000);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }\r\n\r\n    return(\r\n        <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                <div className=\"col-12 mt-2 mb-3\">\r\n                    <h1>Cadastro de Cards</h1>\r\n                </div>\r\n                </div>\r\n\r\n                <form onSubmit={saveCard}>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-4 mb-5\">\r\n                        <div className=\"form-group\">\r\n                        <label>Nome da Carta</label>\r\n                            <input type=\"text\" name='cardName' value={cardName} onChange={handleChangeName} className=\"form-control\" placeholder=\"Digite a quantidade de cartas\" required />\r\n                        </div>\r\n                    </div>\r\n                    {renderCardType()}\r\n                    {renderCardColor()}\r\n                    {renderEdition()}\r\n                    {renderRarity()}\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <button type=\"submit\" className=\"btn btn-dark mr-2\">Atualizar</button>\r\n                        <Link className=\"btn btn-dark mr-2\" to='/usercollection/editioncards'>Voltar</Link>\r\n                    </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <ToastContainer />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default EditEditionCards","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\AddEditionCards\\index.js",["189","190"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK} from '../../utils/variaveisAmbiente'\r\nimport {messages} from '../../utils/messages'\r\nimport {useHistory, Link} from 'react-router-dom'\r\nimport axios from 'axios';\r\n\r\nconst AddEditionCards = () => {\r\n\r\n    const [cardType, setCardType] = useState([])\r\n    const [cardColor, setCardColor] = useState([])\r\n    const [cardEdition, setCardEdition] = useState([])\r\n    const [cardRarity, setCardRarity] = useState([])\r\n    const token = localStorage.getItem('token')\r\n    const refCardType = useRef()\r\n    const refCardColor = useRef()\r\n    const refCardEdition = useRef()\r\n    const refCardRarity = useRef()\r\n    const history = useHistory()\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardtypes`,configAxios)\r\n            .then(resp => {\r\n                setCardType(resp.data.type)\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n\r\n        axios.get(`${BASE_URL_BACK}/cardcolors`,configAxios)\r\n            .then(resp => {\r\n                setCardColor(resp.data.color)\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n\r\n        axios.get(`${BASE_URL_BACK}/cardeditions`,configAxios)\r\n            .then(resp => {\r\n                setCardEdition(resp.data.edition)\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n\r\n        axios.get(`${BASE_URL_BACK}/cardrarities`,configAxios)\r\n            .then(resp => {\r\n                setCardRarity(resp.data.rarity)\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    },[])\r\n\r\n    const renderCardType = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Tipo da Carta</label>\r\n                <select className=\"form-control\" ref={refCardType} required>\r\n                   {cardType.map(type => {\r\n                        return(\r\n                            <option key={type.id} value={type.id}>{type.type}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderCardColor = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Cor da Carta</label>\r\n                <select className=\"form-control\" ref={refCardColor} required>\r\n                   {cardColor.map(color => {\r\n                        return(\r\n                            <option key={color.id} value={color.id}>{color.color}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderEdition = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Edição da Carta</label>\r\n                <select className=\"form-control\" ref={refCardEdition} required>\r\n                   {cardEdition.map(edition => {\r\n                        return(\r\n                            <option key={edition.id} value={edition.id}>{edition.edition}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderRarity = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Raridade da Carta</label>\r\n                <select className=\"form-control\" ref={refCardRarity} required>\r\n                   {cardRarity.map(rarity => {\r\n                        return(\r\n                            <option key={rarity.id} value={rarity.id}>{rarity.rarity}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    const saveCard = (evt) => {\r\n        evt.preventDefault()\r\n\r\n        const objAddCard = {\r\n            cardName: evt.target.cardName.value,\r\n            cardColor_id: refCardColor.current.value,\r\n            cardEdition_id: refCardEdition.current.value,\r\n            cardType_id: refCardType.current.value,\r\n            cardRarity_id: refCardRarity.current.value\r\n        }\r\n\r\n        axios.post(`${BASE_URL_BACK}/cards`,objAddCard,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message == 'card created'){\r\n                    toast.success(messages(resp.data.message))\r\n                    setTimeout(() => {\r\n                        history.push('/usercollection/editioncards')\r\n                    }, 5000);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }\r\n\r\n    return(\r\n        <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                <div className=\"col-12 mt-2 mb-3\">\r\n                    <h1>Cadastro de Cards</h1>\r\n                </div>\r\n                </div>\r\n\r\n                <form onSubmit={saveCard}>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-4 mb-5\">\r\n                        <div className=\"form-group\">\r\n                        <label>Nome da Carta</label>\r\n                            <input type=\"text\" name='cardName' className=\"form-control\" placeholder=\"Digite a quantidade de cartas\" required />\r\n                        </div>\r\n                    </div>\r\n                    {renderCardType()}\r\n                    {renderCardColor()}\r\n                    {renderEdition()}\r\n                    {renderRarity()}\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <button type=\"submit\" className=\"btn btn-dark mr-2\">Cadastrar</button>\r\n                        <Link className=\"btn btn-dark mr-2\" to='/usercollection/editioncards'>Voltar</Link>\r\n                    </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <ToastContainer />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default AddEditionCards","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\DashboardAdmin\\index.js",["191","192","193","194","195","196","197","198","199","200"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport Loading from '../Loading'\r\nimport './index.css'\r\nimport {BASE_URL_BACK} from '../../utils/variaveisAmbiente'\r\nimport axios from 'axios';\r\nimport jwt from 'jsonwebtoken'\r\nimport _ from 'lodash'\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nconst DashboardAdmin = () => {\r\n    const token = localStorage.getItem('token')\r\n    const [users, setUsers] = useState(0)\r\n    const [cardEdition, setCardEdition] = useState([])\r\n    const [cardEditionLen, setCardEdtionLen] = useState(0)\r\n    const [card, setCard] = useState(0)\r\n    const [dataChart, setDataChart] = useState([])\r\n    const [threeCollection, setThreeCollection] = useState([])\r\n    const refLoading = useRef()\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardeditions`,configAxios)\r\n            .then(resp => {\r\n                setCardEdtionLen(resp.data.edition.length)\r\n                setCardEdition(_.map(resp.data.edition, i => _.pick(i, 'id', 'edition')))\r\n            })\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        const arrDataChart = []\r\n        axios.get(`${BASE_URL_BACK}/cards`,configAxios)\r\n        .then(resp => {\r\n            _.map(_.groupBy(resp.data, 'edition_id'), (card, index) => {\r\n                if(_.find(cardEdition, {'id': parseInt(index)}) != undefined){\r\n                    _.find(cardEdition, {'id': parseInt(index)})['qtd'] = card.length\r\n                }\r\n            })\r\n            _.map(cardEdition, (card) => {\r\n                if(_.has(card, 'qtd') == false){\r\n                    card['qtd'] = 0\r\n                }\r\n            })\r\n\r\n            cardEdition.map(card => {\r\n                arrDataChart.push([card.edition, card.qtd])\r\n            })\r\n\r\n            setDataChart(arrDataChart)\r\n        })\r\n    },[cardEdition])\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/users`,configAxios)\r\n            .then(resp => {\r\n                setUsers(resp.data.length)\r\n            })\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cards`,configAxios)\r\n            .then(resp => {\r\n                setCard(resp.data.length)\r\n                refLoading.current.executeLoading()\r\n            })\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/collections`,configAxios)\r\n            .then(resp => {\r\n                const arrObj = _.map(_.groupBy(resp.data, 'user_name'), (n) => {\r\n                    const obj = _.pick(n[0], 'user_name')\r\n                    const sum = _.sumBy(n, (a) => {return a.quantity})\r\n                    obj['qtd'] = sum\r\n                    return obj\r\n                })\r\n\r\n                const arrOrderBy = _.orderBy(arrObj, ['qtd'], ['desc'])\r\n\r\n                const arrModify = []\r\n\r\n                for (let index = 0; index < 3; index++) {\r\n                    arrModify.push(_.valuesIn(arrOrderBy[index]))\r\n                }\r\n\r\n                setThreeCollection(arrModify)\r\n\r\n            })\r\n    },[])\r\n\r\n    return(\r\n        <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                <div className=\"col-12 mt-2\">\r\n                    <h1>Dashboard Admin</h1>\r\n                </div>\r\n                </div>\r\n\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <div className=\"col-lg-3 col-12\">\r\n                        <div className=\"info-box mb-3 bg-primary\">\r\n                        <div className=\"info-box-content\">\r\n                            <span className=\"info-box-number\"><h1 className=\"text-white text-bold\">{users}</h1></span>\r\n                            <span className=\"info-box-text\"><h4 className=\"text-white text-bold\">{users > 1 ? 'Usuários' : 'Usuário'}</h4></span>\r\n                        </div>\r\n                            <span className=\"info-box-icon\"><i className=\"fas fa-users iconDashboardAdmin mr-3\"></i></span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-3 col-12\">\r\n                        <div className=\"info-box mb-3 bg-success\">\r\n                        <div className=\"info-box-content\">\r\n                            <span className=\"info-box-number\"><h1 className=\"text-white text-bold\">{cardEditionLen}</h1></span>\r\n                            <span className=\"info-box-text\"><h4 className=\"text-white text-bold\">{cardEditionLen > 1 ? 'Edições' : 'Edição'}</h4></span>\r\n                        </div>\r\n                            <span className=\"info-box-icon\"><i className=\"fas fa-wallet iconDashboardAdmin mr-3\"></i></span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-3 col-12\">\r\n                        <div className=\"info-box mb-3 bg-warning\">\r\n                        <div className=\"info-box-content\">\r\n                            <span className=\"info-box-number\"><h1 className=\"text-white text-bold\">{card}</h1></span>\r\n                            <span className=\"info-box-text\"><h4 className=\"text-white text-bold\">{card > 1 ? 'Cartas' : 'Carta'}</h4></span>\r\n                        </div>\r\n                            <span className=\"info-box-icon\"><i className=\"fab fa-wizards-of-the-coast text-white iconDashboardAdmin mr-3\"></i></span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-6\">\r\n                        <div className=\"card card-danger\">\r\n                        <div className=\"card-header\">\r\n                            <h3 className=\"card-title\">Cartas por edição</h3>\r\n                            <div className=\"card-tools\">\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"chart\">\r\n                                <div>\r\n                                    <Chart\r\n                                    chartType=\"PieChart\"\r\n                                    loader={<div>Carregando o gráfico</div>}\r\n                                    data={[\r\n                                        ['Card Type', 'Number'],\r\n                                        ...dataChart\r\n                                    ]}\r\n                                    options={{\r\n                                        chartArea: { left: 0, top: 0, right: 0, bottom: 10 },\r\n                                        legend: {position: 'right', textStyle: {fontSize: 20}}, \r\n                                        is3D: true,  \r\n                                        legend: {\r\n                                            textStyle: {fontSize: 20},\r\n                                            scrollArrows: { inactiveColor: \"black\", activeColor: \"black\" },\r\n                                            pagingTextStyle: { color: 'black'},\r\n                                        }                                     \r\n                                    }}\r\n                                    rootProps={{ 'data-testid': '1' }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-6\">\r\n                    <div className=\"card card-success\">\r\n                    <div className=\"card-header\">\r\n                        <h3 className=\"card-title\">Top 3 maiores coleções</h3>\r\n                        <div className=\"card-tools\">\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <Chart\r\n                            chartType=\"ColumnChart\"\r\n                            loader={<div>Carregando o gráfico</div>}\r\n                            data={[\r\n                                ['Pessoa', 'Cards'],\r\n                                ...threeCollection                            \r\n                            ]}\r\n                            options={{\r\n                                legend: {\r\n                                    position: 'none',\r\n                                },\r\n                                colors: ['black'],\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n                <Loading\r\n                    ref={refLoading}\r\n                />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default DashboardAdmin","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\Users\\index.js",["201","202","203","204","205"],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tcc_frontend\\src\\components\\EditUser\\index.js",["206","207","208","209","210","211"],{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","severity":2,"message":"217","line":3,"column":16,"nodeType":"218","messageId":"219","endLine":3,"endColumn":21},{"ruleId":"220","severity":1,"message":"221","line":64,"column":34,"nodeType":"222","messageId":"223","endLine":64,"endColumn":36},{"ruleId":"220","severity":1,"message":"221","line":97,"column":42,"nodeType":"222","messageId":"223","endLine":97,"endColumn":44},{"ruleId":"220","severity":1,"message":"221","line":137,"column":34,"nodeType":"222","messageId":"223","endLine":137,"endColumn":36},{"ruleId":"220","severity":1,"message":"221","line":169,"column":42,"nodeType":"222","messageId":"223","endLine":169,"endColumn":44},{"ruleId":"224","severity":1,"message":"225","line":7,"column":1,"nodeType":"226","endLine":17,"endColumn":2},{"ruleId":"227","severity":1,"message":"228","line":1,"column":26,"nodeType":"218","messageId":"229","endLine":1,"endColumn":35},{"ruleId":"220","severity":1,"message":"221","line":40,"column":38,"nodeType":"222","messageId":"223","endLine":40,"endColumn":40},{"ruleId":"220","severity":1,"message":"221","line":48,"column":46,"nodeType":"222","messageId":"223","endLine":48,"endColumn":48},{"ruleId":"227","severity":1,"message":"230","line":1,"column":10,"nodeType":"218","messageId":"229","endLine":1,"endColumn":27},{"ruleId":"231","severity":1,"message":"232","line":16,"column":8,"nodeType":"233","endLine":16,"endColumn":10,"suggestions":"234"},{"ruleId":"231","severity":1,"message":"235","line":26,"column":5,"nodeType":"218","endLine":26,"endColumn":14,"suggestions":"236"},{"ruleId":"220","severity":1,"message":"221","line":27,"column":23,"nodeType":"222","messageId":"223","endLine":27,"endColumn":25},{"ruleId":"237","severity":1,"message":"238","line":14,"column":17,"nodeType":"239","messageId":"240","endLine":14,"endColumn":69},{"ruleId":"220","severity":1,"message":"221","line":14,"column":28,"nodeType":"222","messageId":"223","endLine":14,"endColumn":30},{"ruleId":"220","severity":1,"message":"221","line":86,"column":48,"nodeType":"222","messageId":"223","endLine":86,"endColumn":50},{"ruleId":"231","severity":1,"message":"241","line":96,"column":7,"nodeType":"233","endLine":96,"endColumn":9,"suggestions":"242"},{"ruleId":"220","severity":1,"message":"221","line":98,"column":15,"nodeType":"222","messageId":"223","endLine":98,"endColumn":17},{"ruleId":"220","severity":1,"message":"221","line":111,"column":38,"nodeType":"222","messageId":"223","endLine":111,"endColumn":40},{"ruleId":"220","severity":1,"message":"243","line":114,"column":41,"nodeType":"222","messageId":"223","endLine":114,"endColumn":43},{"ruleId":"231","severity":1,"message":"244","line":13,"column":5,"nodeType":"218","endLine":13,"endColumn":14,"suggestions":"245"},{"ruleId":"246","severity":1,"message":"247","line":26,"column":21,"nodeType":"248","endLine":26,"endColumn":91},{"ruleId":"246","severity":1,"message":"247","line":31,"column":17,"nodeType":"248","endLine":31,"endColumn":52},{"ruleId":"231","severity":1,"message":"249","line":140,"column":7,"nodeType":"233","endLine":140,"endColumn":11,"suggestions":"250"},{"ruleId":"227","severity":1,"message":"251","line":5,"column":8,"nodeType":"218","messageId":"229","endLine":5,"endColumn":13},{"ruleId":"231","severity":1,"message":"252","line":48,"column":7,"nodeType":"233","endLine":48,"endColumn":14,"suggestions":"253"},{"ruleId":"231","severity":1,"message":"249","line":80,"column":8,"nodeType":"233","endLine":80,"endColumn":10,"suggestions":"254"},{"ruleId":"220","severity":1,"message":"221","line":181,"column":38,"nodeType":"222","messageId":"223","endLine":181,"endColumn":40},{"ruleId":"220","severity":1,"message":"243","line":184,"column":41,"nodeType":"222","messageId":"223","endLine":184,"endColumn":43},{"ruleId":"255","severity":1,"message":"256","line":250,"column":33,"nodeType":"248","endLine":250,"endColumn":123},{"ruleId":"237","severity":1,"message":"238","line":12,"column":17,"nodeType":"239","messageId":"240","endLine":12,"endColumn":86},{"ruleId":"220","severity":1,"message":"221","line":12,"column":30,"nodeType":"222","messageId":"223","endLine":12,"endColumn":32},{"ruleId":"220","severity":1,"message":"221","line":17,"column":20,"nodeType":"222","messageId":"223","endLine":17,"endColumn":22},{"ruleId":"231","severity":1,"message":"249","line":63,"column":8,"nodeType":"233","endLine":63,"endColumn":10,"suggestions":"257"},{"ruleId":"227","severity":1,"message":"258","line":21,"column":12,"nodeType":"218","messageId":"229","endLine":21,"endColumn":24},{"ruleId":"227","severity":1,"message":"259","line":21,"column":26,"nodeType":"218","messageId":"229","endLine":21,"endColumn":41},{"ruleId":"220","severity":1,"message":"221","line":34,"column":59,"nodeType":"222","messageId":"223","endLine":34,"endColumn":61},{"ruleId":"220","severity":1,"message":"221","line":35,"column":60,"nodeType":"222","messageId":"223","endLine":35,"endColumn":62},{"ruleId":"220","severity":1,"message":"221","line":36,"column":58,"nodeType":"222","messageId":"223","endLine":36,"endColumn":60},{"ruleId":"220","severity":1,"message":"221","line":37,"column":58,"nodeType":"222","messageId":"223","endLine":37,"endColumn":60},{"ruleId":"220","severity":1,"message":"221","line":38,"column":56,"nodeType":"222","messageId":"223","endLine":38,"endColumn":58},{"ruleId":"231","severity":1,"message":"260","line":40,"column":7,"nodeType":"233","endLine":40,"endColumn":9,"suggestions":"261"},{"ruleId":"231","severity":1,"message":"249","line":47,"column":7,"nodeType":"233","endLine":47,"endColumn":19,"suggestions":"262"},{"ruleId":"231","severity":1,"message":"249","line":54,"column":7,"nodeType":"233","endLine":54,"endColumn":18,"suggestions":"263"},{"ruleId":"264","severity":1,"message":"265","line":72,"column":20,"nodeType":"266","messageId":"267","endLine":72,"endColumn":65},{"ruleId":"220","severity":1,"message":"221","line":87,"column":71,"nodeType":"222","messageId":"223","endLine":87,"endColumn":73},{"ruleId":"220","severity":1,"message":"221","line":104,"column":74,"nodeType":"222","messageId":"223","endLine":104,"endColumn":76},{"ruleId":"227","severity":1,"message":"268","line":5,"column":22,"nodeType":"218","messageId":"229","endLine":5,"endColumn":31},{"ruleId":"227","severity":1,"message":"269","line":13,"column":12,"nodeType":"218","messageId":"229","endLine":13,"endColumn":18},{"ruleId":"227","severity":1,"message":"270","line":13,"column":20,"nodeType":"218","messageId":"229","endLine":13,"endColumn":29},{"ruleId":"231","severity":1,"message":"249","line":40,"column":7,"nodeType":"233","endLine":40,"endColumn":11,"suggestions":"271"},{"ruleId":"231","severity":1,"message":"249","line":51,"column":7,"nodeType":"233","endLine":51,"endColumn":21,"suggestions":"272"},{"ruleId":"231","severity":1,"message":"249","line":62,"column":8,"nodeType":"233","endLine":62,"endColumn":23,"suggestions":"273"},{"ruleId":"231","severity":1,"message":"249","line":73,"column":8,"nodeType":"233","endLine":73,"endColumn":25,"suggestions":"274"},{"ruleId":"231","severity":1,"message":"249","line":84,"column":7,"nodeType":"233","endLine":84,"endColumn":23,"suggestions":"275"},{"ruleId":"220","severity":1,"message":"221","line":92,"column":72,"nodeType":"222","messageId":"223","endLine":92,"endColumn":74},{"ruleId":"220","severity":1,"message":"221","line":109,"column":74,"nodeType":"222","messageId":"223","endLine":109,"endColumn":76},{"ruleId":"220","severity":1,"message":"221","line":126,"column":78,"nodeType":"222","messageId":"223","endLine":126,"endColumn":80},{"ruleId":"220","severity":1,"message":"221","line":143,"column":76,"nodeType":"222","messageId":"223","endLine":143,"endColumn":78},{"ruleId":"220","severity":1,"message":"221","line":172,"column":38,"nodeType":"222","messageId":"223","endLine":172,"endColumn":40},{"ruleId":"231","severity":1,"message":"249","line":63,"column":7,"nodeType":"233","endLine":63,"endColumn":9,"suggestions":"276"},{"ruleId":"220","severity":1,"message":"221","line":147,"column":38,"nodeType":"222","messageId":"223","endLine":147,"endColumn":40},{"ruleId":"227","severity":1,"message":"277","line":6,"column":8,"nodeType":"218","messageId":"229","endLine":6,"endColumn":11},{"ruleId":"231","severity":1,"message":"249","line":32,"column":7,"nodeType":"233","endLine":32,"endColumn":9,"suggestions":"278"},{"ruleId":"220","severity":1,"message":"243","line":39,"column":65,"nodeType":"222","messageId":"223","endLine":39,"endColumn":67},{"ruleId":"220","severity":1,"message":"221","line":44,"column":39,"nodeType":"222","messageId":"223","endLine":44,"endColumn":41},{"ruleId":"279","severity":1,"message":"280","line":49,"column":34,"nodeType":"281","messageId":"282","endLine":49,"endColumn":36},{"ruleId":"231","severity":1,"message":"249","line":55,"column":7,"nodeType":"233","endLine":55,"endColumn":20,"suggestions":"283"},{"ruleId":"231","severity":1,"message":"249","line":62,"column":7,"nodeType":"233","endLine":62,"endColumn":9,"suggestions":"284"},{"ruleId":"231","severity":1,"message":"249","line":70,"column":7,"nodeType":"233","endLine":70,"endColumn":9,"suggestions":"285"},{"ruleId":"231","severity":1,"message":"249","line":93,"column":7,"nodeType":"233","endLine":93,"endColumn":9,"suggestions":"286"},{"ruleId":"287","severity":1,"message":"288","line":155,"column":41,"nodeType":"289","messageId":"223","endLine":155,"endColumn":47},{"ruleId":"227","severity":1,"message":"290","line":2,"column":15,"nodeType":"218","messageId":"229","endLine":2,"endColumn":25},{"ruleId":"231","severity":1,"message":"249","line":65,"column":7,"nodeType":"233","endLine":65,"endColumn":9,"suggestions":"291"},{"ruleId":"220","severity":1,"message":"221","line":86,"column":42,"nodeType":"222","messageId":"223","endLine":86,"endColumn":44},{"ruleId":"220","severity":1,"message":"243","line":89,"column":42,"nodeType":"222","messageId":"223","endLine":89,"endColumn":44},{"ruleId":"220","severity":1,"message":"221","line":107,"column":66,"nodeType":"222","messageId":"223","endLine":107,"endColumn":68},{"ruleId":"227","severity":1,"message":"292","line":1,"column":28,"nodeType":"218","messageId":"229","endLine":1,"endColumn":34},{"ruleId":"227","severity":1,"message":"268","line":3,"column":22,"nodeType":"218","messageId":"229","endLine":3,"endColumn":31},{"ruleId":"231","severity":1,"message":"249","line":33,"column":7,"nodeType":"233","endLine":33,"endColumn":11,"suggestions":"293"},{"ruleId":"220","severity":1,"message":"221","line":48,"column":38,"nodeType":"222","messageId":"223","endLine":48,"endColumn":40},{"ruleId":"220","severity":1,"message":"221","line":71,"column":35,"nodeType":"222","messageId":"223","endLine":71,"endColumn":37},{"ruleId":"220","severity":1,"message":"221","line":78,"column":35,"nodeType":"222","messageId":"223","endLine":78,"endColumn":37},"no-native-reassign",["294"],"no-negated-in-lhs",["295"],"no-undef","'Login' is not defined.","Identifier","undef","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'useEffect' is defined but never used.","unusedVar","'JsonWebTokenError' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["296"],"React Hook useEffect contains a call to 'setIsAdmin'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [permission] as a second argument to the useEffect Hook.",["297"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has missing dependencies: 'history' and 'token'. Either include them or remove the dependency array.",["298"],"Expected '!==' and instead saw '!='.","React Hook useEffect contains a call to 'setUserName'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [user] as a second argument to the useEffect Hook.",["299"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'configAxios'. Either include it or remove the dependency array.",["300"],"'Birds' is defined but never used.","React Hook useEffect has missing dependencies: 'configAxios' and 'id'. Either include them or remove the dependency array.",["301"],["302"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener",["303"],"'redirectPage' is assigned a value but never used.","'setRedirectPage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'configAxios', 'id', and 'jwtId.id'. Either include them or remove the dependency array.",["304"],["305"],["306"],"no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'useParams' is defined but never used.","'typeId' is assigned a value but never used.","'setTypeId' is assigned a value but never used.",["307"],["308"],["309"],["310"],["311"],["312"],"'jwt' is defined but never used.",["313"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["314"],["315"],["316"],["317"],"no-dupe-keys","Duplicate key 'legend'.","ObjectExpression","'useHistory' is defined but never used.",["318"],"'useRef' is defined but never used.",["319"],"no-global-assign","no-unsafe-negation",{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"332","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"desc":"328","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},{"desc":"332","fix":"350"},{"desc":"332","fix":"351"},{"desc":"352","fix":"353"},{"desc":"332","fix":"354"},{"desc":"332","fix":"355"},{"desc":"332","fix":"356"},{"desc":"332","fix":"357"},{"desc":"328","fix":"358"},"Update the dependencies array to be: [token]",{"range":"359","text":"360"},"Add dependencies array: [permission]",{"range":"361","text":"362"},"Update the dependencies array to be: [history, token]",{"range":"363","text":"364"},"Add dependencies array: [user]",{"range":"365","text":"366"},"Update the dependencies array to be: [configAxios, id]",{"range":"367","text":"368"},"Update the dependencies array to be: [configAxios, id, urlId]",{"range":"369","text":"370"},"Update the dependencies array to be: [configAxios]",{"range":"371","text":"372"},{"range":"373","text":"372"},"Update the dependencies array to be: [configAxios, id, jwtId.id]",{"range":"374","text":"375"},"Update the dependencies array to be: [configAxios, languageId]",{"range":"376","text":"377"},"Update the dependencies array to be: [configAxios, qualityId]",{"range":"378","text":"379"},{"range":"380","text":"368"},"Update the dependencies array to be: [card.type_id, configAxios]",{"range":"381","text":"382"},"Update the dependencies array to be: [card.color_id, configAxios]",{"range":"383","text":"384"},"Update the dependencies array to be: [card.edition_id, configAxios]",{"range":"385","text":"386"},"Update the dependencies array to be: [card.rarity_id, configAxios]",{"range":"387","text":"388"},{"range":"389","text":"372"},{"range":"390","text":"372"},"Update the dependencies array to be: [cardEdition, configAxios]",{"range":"391","text":"392"},{"range":"393","text":"372"},{"range":"394","text":"372"},{"range":"395","text":"372"},{"range":"396","text":"372"},{"range":"397","text":"368"},[450,452],"[token]",[835,835],", [permission]",[3795,3797],"[history, token]",[616,616],", [user]",[5733,5737],"[configAxios, id]",[1490,1497],"[configAxios, id, urlId]",[3028,3030],"[configAxios]",[2427,2429],[1713,1715],"[configAxios, id, jwtId.id]",[1912,1924],"[configAxios, languageId]",[2123,2134],"[configAxios, qualityId]",[1403,1407],[1778,1792],"[card.type_id, configAxios]",[2167,2182],"[card.color_id, configAxios]",[2563,2580],"[card.edition_id, configAxios]",[2958,2974],"[card.rarity_id, configAxios]",[2295,2297],[1144,1146],[1909,1922],"[cardEdition, configAxios]",[2102,2104],[2336,2338],[3096,3098],[2584,2586],[1111,1115]]