[{"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\index.js":"1","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\App.js":"2","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\reportWebVitals.js":"3","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\utils\\imports.js":"4","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\Routes.js":"5","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\utils\\auth.js":"6","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\pages\\Login\\index.js":"7","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\pages\\UserCollection\\index.js":"8","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\pages\\Register\\index.js":"9","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\utils\\variaveisAmbiente.js":"10","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\utils\\messages.js":"11","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\CardView\\index.js":"12","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditCardsCollection\\index.js":"13","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\Cards\\index.js":"14","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\MenuLeft\\index.js":"15","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddCardsCollection\\index.js":"16","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditionCards\\index.js":"17","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditEditionCards\\index.js":"18","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddEditionCards\\index.js":"19","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\Users\\index.js":"20","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\DashboardAdmin\\index.js":"21","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditUser\\index.js":"22","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\Dashboard\\index.js":"23","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\Loading\\index.js":"24","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\Modals\\index.js":"25","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\ConfigUser\\index.js":"26","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\ColorsCard\\index.js":"27","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddColorsCard\\index.js":"28","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditColorsCard\\index.js":"29","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\LanguageCard\\index.js":"30","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddLanguagesCard\\index.js":"31","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditLanguagesCard\\index.js":"32","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddQualityCard\\index.js":"33","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditQualitiesCard\\index.js":"34","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\QualitiesCard\\index.js":"35","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\RaritiesCard\\index.js":"36","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddRarityCard\\index.js":"37","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditRaritiesCard\\index.js":"38","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\TypesCard\\index.js":"39","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddTypesCard\\index.js":"40","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditTypesCard\\index.js":"41","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditionsCards\\index.js":"42","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditEditionsCards\\index.js":"43","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\LogView\\index.js":"44","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\pages\\Forgot\\index.js":"45","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\pages\\Reset\\index.js":"46","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\utils\\colors.js":"47"},{"size":542,"mtime":1612744833312,"results":"48","hashOfConfig":"49"},{"size":242,"mtime":1613472241160,"results":"50","hashOfConfig":"49"},{"size":375,"mtime":1612744833314,"results":"51","hashOfConfig":"49"},{"size":2177,"mtime":1612744833315,"results":"52","hashOfConfig":"49"},{"size":764,"mtime":1613781980977,"results":"53","hashOfConfig":"49"},{"size":1136,"mtime":1613415893287,"results":"54","hashOfConfig":"49"},{"size":11430,"mtime":1613779465478,"results":"55","hashOfConfig":"49"},{"size":5522,"mtime":1613919258217,"results":"56","hashOfConfig":"49"},{"size":5635,"mtime":1614044891947,"results":"57","hashOfConfig":"49"},{"size":317,"mtime":1613419112120,"results":"58","hashOfConfig":"49"},{"size":4542,"mtime":1613784375237,"results":"59","hashOfConfig":"49"},{"size":3263,"mtime":1613434315332,"results":"60","hashOfConfig":"49"},{"size":6404,"mtime":1613419391877,"results":"61","hashOfConfig":"49"},{"size":9241,"mtime":1613434305725,"results":"62","hashOfConfig":"49"},{"size":9859,"mtime":1614045093729,"results":"63","hashOfConfig":"49"},{"size":8071,"mtime":1613925258983,"results":"64","hashOfConfig":"49"},{"size":14616,"mtime":1613928697580,"results":"65","hashOfConfig":"49"},{"size":8682,"mtime":1613601535699,"results":"66","hashOfConfig":"49"},{"size":7401,"mtime":1613920570717,"results":"67","hashOfConfig":"49"},{"size":7160,"mtime":1613600069474,"results":"68","hashOfConfig":"49"},{"size":13605,"mtime":1613938525567,"results":"69","hashOfConfig":"49"},{"size":5452,"mtime":1613600080321,"results":"70","hashOfConfig":"49"},{"size":16563,"mtime":1614043901948,"results":"71","hashOfConfig":"49"},{"size":1358,"mtime":1612744833291,"results":"72","hashOfConfig":"49"},{"size":1243,"mtime":1612744833292,"results":"73","hashOfConfig":"49"},{"size":5743,"mtime":1613922854981,"results":"74","hashOfConfig":"49"},{"size":6608,"mtime":1613508458967,"results":"75","hashOfConfig":"49"},{"size":3277,"mtime":1613599948571,"results":"76","hashOfConfig":"49"},{"size":3673,"mtime":1613508197475,"results":"77","hashOfConfig":"49"},{"size":6659,"mtime":1613508669406,"results":"78","hashOfConfig":"49"},{"size":3324,"mtime":1613558674249,"results":"79","hashOfConfig":"49"},{"size":3723,"mtime":1613558670124,"results":"80","hashOfConfig":"49"},{"size":3317,"mtime":1613558706664,"results":"81","hashOfConfig":"49"},{"size":3632,"mtime":1613558720124,"results":"82","hashOfConfig":"49"},{"size":6672,"mtime":1613508906173,"results":"83","hashOfConfig":"49"},{"size":6653,"mtime":1613511534819,"results":"84","hashOfConfig":"49"},{"size":3298,"mtime":1613558745194,"results":"85","hashOfConfig":"49"},{"size":3613,"mtime":1613558765657,"results":"86","hashOfConfig":"49"},{"size":6607,"mtime":1613558440172,"results":"87","hashOfConfig":"49"},{"size":3254,"mtime":1613558066847,"results":"88","hashOfConfig":"49"},{"size":3559,"mtime":1613558380408,"results":"89","hashOfConfig":"49"},{"size":6395,"mtime":1613647887452,"results":"90","hashOfConfig":"49"},{"size":4350,"mtime":1613647591908,"results":"91","hashOfConfig":"49"},{"size":3064,"mtime":1613673740242,"results":"92","hashOfConfig":"49"},{"size":2504,"mtime":1613782317059,"results":"93","hashOfConfig":"49"},{"size":3602,"mtime":1613782335787,"results":"94","hashOfConfig":"49"},{"size":1573,"mtime":1614038000768,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"tukzo8",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"98"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"98"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"98"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"98"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"98"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"98"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"98"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"98"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"98"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"98"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"98"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"98"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"98"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"98"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"98"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":49,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"98"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"98"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"98"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"98"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"98"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"98"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"98"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"98"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"98"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"98"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"98"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"98"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"98"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"98"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"98"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"98"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"98"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"98"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"98"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"98"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"98"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"98"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"98"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\index.js",[],["229","230"],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\App.js",[],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\reportWebVitals.js",[],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\utils\\imports.js",[],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\Routes.js",["231"],"import React from 'react';\r\nimport {BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom'\r\nimport Forgot from './pages/Forgot';\r\nimport Login from './pages/Login'\r\nimport Register from './pages/Register'\r\nimport Reset from './pages/Reset';\r\nimport UserCollection from './pages/UserCollection'\r\n\r\nexport default props => (\r\n    <Router>\r\n        <Switch>\r\n            <Route path='/login' exact component={Login} />\r\n            <Route path='/register' exact component={Register} />\r\n            <Route path='/forgot' exact component={Forgot} />\r\n            <Route path='/reset' component={Reset} />\r\n            <Route path='/' component={UserCollection} />\r\n            <Redirect from='*' to='/login' />\r\n        </Switch>\r\n    </Router>\r\n\r\n)","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\utils\\auth.js",["232","233","234","235"],"import { JsonWebTokenError } from 'jsonwebtoken';\r\nimport React, { useEffect, useState } from 'react';\r\nimport jwt from 'jsonwebtoken'\r\n\r\nexport const AuthContext = React.createContext()\r\n\r\nconst UseIsAuth = () => {\r\n    const [logged, setLogged] = useState()\r\n    const token = localStorage.getItem('token')\r\n    useEffect(() => {    \r\n        if(token){\r\n            setLogged(true)\r\n        }else{\r\n            setLogged(false)\r\n        }\r\n    }, [])\r\n\r\n    return logged\r\n}\r\n\r\nconst IsAdmin = () => {\r\n    const [isAdmin, setIsAdmin] = useState()\r\n    const token = localStorage.getItem('token')\r\n    const decodedToken = jwt.decode(token)\r\n    const {permission} = decodedToken || 1\r\n    useEffect(() => {\r\n        if(permission == 1){\r\n            setIsAdmin(false)\r\n        }else{\r\n            setIsAdmin(true)\r\n        }\r\n    })\r\n\r\n    return isAdmin\r\n}\r\n\r\nexport const AuthProvider = (props) => {\r\n    const logged = UseIsAuth()\r\n    const isAdmin = IsAdmin()\r\n    return(\r\n        <AuthContext.Provider value={{isAuth: logged, isAdmin: isAdmin}} >\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\n\r\n","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\pages\\Login\\index.js",["236","237","238","239"],"import {React, useState,} from 'react';\r\nimport Logo from '../../img/logo.png'\r\nimport axios from 'axios'\r\nimport {BASE_URL_BACK} from '../../utils/variaveisAmbiente'\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css'; \r\nimport {messages} from '../../utils/messages'\r\nimport {Link} from 'react-router-dom'\r\nimport {BASE_URL_FRONT} from '../../utils/variaveisAmbiente'\r\nimport GoogleLogin from 'react-google-login'\r\nimport FacebookLogin from 'react-facebook-login'\r\n\r\n\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport './index.css'\r\n\r\nconst Login = (props) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    //Pega os valores de e-mail e adiciona no estado\r\n    const onChangeMail = evt => {\r\n        setEmail(evt.target.value)\r\n    }\r\n\r\n    //Pega os valores de password e adiciona no estado\r\n    const onChangePass = evt => {\r\n        setPassword(evt.target.value)\r\n    }\r\n\r\n    //Envia os dados para o backend validar\r\n    const sendBack = (evt) => {\r\n        evt.preventDefault()\r\n\r\n        const data = {\r\n            email,\r\n            password\r\n        }\r\n\r\n        //Faz uma requisição post para o backend\r\n        axios.post(`${BASE_URL_BACK}/login`,data)\r\n        .then(resp => {\r\n            //Caso o login seja feito, é gerado um token e adicionado no localstorage\r\n            //Também é gerada uma mensagem para o usuário\r\n            toast.success('Seja Bem-Vindo(a)!!!')\r\n            localStorage.setItem('token', resp.data.token)\r\n            setTimeout(() => {\r\n                window.location.href = `${BASE_URL_FRONT}/cards`\r\n            }, 5000);\r\n        })\r\n        .catch(err => {\r\n            //Caso dê algum erro é enviada uma mensagem para o usuário\r\n            toast.info(messages(err.response.data.message))\r\n        })\r\n    }\r\n\r\n    //Esta função é utilizad para fazer login pelo google\r\n    const responseGoogle = (resp) => {\r\n        const {profileObj: {email, name, googleId}} = resp\r\n\r\n        //Verifica se existe algum usuário com o e-mail cadastrado no sistema\r\n        axios.get(`${BASE_URL_BACK}/users/${email}`)\r\n        .then(resp => {\r\n            if(resp.data.message == true){\r\n                const data = {\r\n                    email,\r\n                    password: googleId,\r\n                }\r\n                //Se existir um usuário cadastrado no sistema ele tenta fazer o login\r\n                //Como existe três sistemas de login, optei por apresentar uma mensagem de erro genérica.\r\n                axios.post(`${BASE_URL_BACK}/login`,data)\r\n                .then(resp => {\r\n                    toast.success('Seja Bem-Vindo(a)!!!')\r\n                    localStorage.setItem('token', resp.data.token)\r\n                    setTimeout(() => {\r\n                        window.location.href = `${BASE_URL_FRONT}/cards`\r\n                    }, 5000);\r\n                })\r\n                .catch(err => {\r\n                    //Caso o usuário tente fazer o login com uma conta do google e já exista um usuário com o mesmo e-mail\r\n                    // O sistema informa que já existe usuário cadastrado\r\n                    toast.info('Existe um usuário em nosso sistema com este e-mail, por favor faça o login através do sistema')\r\n                })\r\n\r\n            }else{\r\n                //Se não existir nenhum e-mail cadastrado no sistema\r\n                //O sistema cadastra o novo e-mail e já efetiva o login\r\n               const data = {\r\n                   name,\r\n                   email,\r\n                   password: googleId,\r\n                   external_login: 1,\r\n               } \r\n\r\n               //Criação do usuário no backend\r\n               axios.post(`${BASE_URL_BACK}/users`,data)\r\n                .then(resp => {\r\n                    if(resp.data.message == 'user created'){\r\n                        toast.success('Você foi cadastrado com sucesso!!! Aguarde um momento...')\r\n                        const data = {\r\n                            email,\r\n                            password: googleId\r\n                        }\r\n\r\n                        setTimeout(() => {\r\n                            //O sistema apresenta a mensagem do cadastro por 5 segundos e já executa o login\r\n                            axios.post(`${BASE_URL_BACK}/login`,data)\r\n                            .then(resp => {\r\n                                toast.success('Seja Bem-Vindo(a)!!!')\r\n                                localStorage.setItem('token', resp.data.token)\r\n                                setTimeout(() => {\r\n                                    window.location.href = `${BASE_URL_FRONT}/cards`\r\n                                }, 5000);\r\n                            })\r\n                            .catch(err => {\r\n                                //Caso dê algum problema aparece esta mensagem\r\n                                toast.info('Opsss!! Algo deu errado, tente novamente mais tarde')\r\n                            })\r\n                        }, 5000);\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        .catch(err => {\r\n            //Caso dê algum problema aparece esta mensagem\r\n            toast.info('Opsss!! Algo deu errado, tente novamente mais tarde')\r\n        })\r\n        \r\n    }\r\n\r\n    //Esta função é utilizad para fazer login pelo facebook\r\n    const responseFacebook = (resp) => {\r\n        const {email, name, id } = resp\r\n\r\n        //Verifica se existe algum usuário com o e-mail cadastrado no sistema\r\n        axios.get(`${BASE_URL_BACK}/users/${email}`)\r\n        .then(resp => {\r\n            if(resp.data.message == true){\r\n                const data = {\r\n                    email,\r\n                    password: id\r\n                }\r\n                //Se existir um usuário cadastrado no sistema ele tenta fazer o login\r\n                //Como existe três sistemas de login, optei por apresentar uma mensagem de erro genérica.\r\n                axios.post(`${BASE_URL_BACK}/login`,data)\r\n                .then(resp => {\r\n                    toast.success('Seja Bem-Vindo(a)!!!')\r\n                    localStorage.setItem('token', resp.data.token)\r\n                    setTimeout(() => {\r\n                        window.location.href = `${BASE_URL_FRONT}/cards`\r\n                    }, 5000);\r\n                })\r\n                .catch(err => {\r\n                    //Caso o usuário tente fazer o login com uma conta do facebook e já exista um usuário com o mesmo e-mail\r\n                    // O sistema informa que já existe usuário cadastrado\r\n                    toast.info('Existe um usuário em nosso sistema com este e-mail, por favor faça o login através do sistema')\r\n                })\r\n\r\n            }else{\r\n                //Se não existir nenhum e-mail cadastrado no sistema\r\n                //O sistema cadastra o novo e-mail e já efetiva o login\r\n                const data = {\r\n                    name,\r\n                    email,\r\n                    password: id,\r\n                    external_login: 1,\r\n                } \r\n                //Criação do usuário no backend\r\n               axios.post(`${BASE_URL_BACK}/users`,data)\r\n                .then(resp => {\r\n                    if(resp.data.message == 'user created'){\r\n                        toast.success('Você foi cadastrado com sucesso!!! Aguarde um momento...')\r\n                        const data = {\r\n                            email,\r\n                            password: id\r\n                        }\r\n\r\n                        setTimeout(() => {\r\n                            //O sistema apresenta a mensagem do cadastro por 5 segundos e já executa o login\r\n                            axios.post(`${BASE_URL_BACK}/login`,data)\r\n                            .then(resp => {\r\n                                toast.success('Seja Bem-Vindo(a)!!!')\r\n                                localStorage.setItem('token', resp.data.token)\r\n                                setTimeout(() => {\r\n                                    window.location.href = `${BASE_URL_FRONT}/cards`\r\n                                }, 5000);\r\n                            })\r\n                            .catch(err => {\r\n                                //Caso dê algum problema aparece esta mensagem\r\n                                toast.info('Existe um usuário em nosso sistema com este e-mail, por favor faça o login através do sistema')\r\n                            })\r\n                        }, 5000);\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        .catch(err => {\r\n            //Caso dê algum problema aparece esta mensagem\r\n            toast.info('Opsss!! Algo deu errado, tente novamente mais tarde')\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className='wrapper'>\r\n        <div className='row text-center contentLogin'>\r\n        <div className='col-md-6 offset-md-3 col-10 offset-1'>\r\n            <img src={Logo} className='img-fluid' alt='Logo Magic Collections'/>\r\n            <form onSubmit={sendBack}>\r\n                <div className='row'>\r\n                    <div className='col-md-6 offset-md-3 col-10 offset-1'>\r\n                    <div className='input-group mb-3'>\r\n                        <input type='text' name='email' value={email} onChange={onChangeMail} className='form-control' placeholder='E-mail' autoFocus required />\r\n                        <div className='input-group-prepend'>\r\n                        <span className='input-group-text'><i className='fas fa-envelope'></i></span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='input-group mb-3'>\r\n                        <input type='password' value={password} onChange={onChangePass} className='form-control' placeholder='Senha' required/>\r\n                        <div className='input-group-prepend'>\r\n                        <span className='input-group-text'><i className='fas fa-unlock-alt'></i></span>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <button type='submit' className='btn btn-dark mb-2'>Entrar</button>\r\n                </div>\r\n                <div>\r\n                    <GoogleLogin\r\n                        clientId=\"791822174732-erldq4nsbg2sk70iv0i6p0gcm1gja3qf.apps.googleusercontent.com\"\r\n                        buttonText=\"Login Magic Collections\"\r\n                        onSuccess={responseGoogle}\r\n                        onFailure={responseGoogle}\r\n                        cookiePolicy={'single_host_origin'}\r\n                        className=\"mb-2\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <FacebookLogin\r\n                    appId=\"693791067965683\"\r\n                    fields=\"name,email,picture\"\r\n                    callback={responseFacebook} \r\n                    cssClass=\"my-facebook-button-class mb-2\"\r\n                    />\r\n                </div>\r\n                <p className=\"mb-1\">Não tem uma conta? <Link to='/register'>Crie sua conta agora!</Link></p>\r\n                <p className=\"mb-1\">Esqueceu a senha? <Link to='/forgot'>Esqueci minha senha</Link></p>\r\n            </form>\r\n            <ToastContainer />\r\n        </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\pages\\UserCollection\\index.js",["240","241","242","243"],"import React, { useEffect, useContext } from 'react'\r\nimport { Switch, Route, Redirect} from 'react-router-dom'\r\nimport './index.css'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport Cards from '../../components/Cards'\r\nimport AddCardsCollection from '../../components/AddCardsCollection'\r\nimport EditCardsCollection from '../../components/EditCardsCollection'\r\nimport MenuLeft from '../../components/MenuLeft'\r\nimport CardView from '../../components/CardView'\r\nimport Dashboard from '../../components/Dashboard'\r\nimport EditionCards from '../../components/EditionCards'\r\nimport EditEditionCards from '../../components/EditEditionCards'\r\nimport AddEditionCards from '../../components/AddEditionCards'\r\nimport DashboardAdmin from '../../components/DashboardAdmin'\r\nimport Users from '../../components/Users'\r\nimport EditUser from '../../components/EditUser'\r\nimport ConfigUser from '../../components/ConfigUser'\r\nimport ColorsCard from '../../components/ColorsCard'\r\nimport AddColorsCard from '../../components/AddColorsCard'\r\nimport EditColorsCard from '../../components/EditColorsCard'\r\nimport LanguageCard from '../../components/LanguageCard'\r\nimport AddLanguagesCard from '../../components/AddLanguagesCard'\r\nimport EditLanguagesCard from '../../components/EditLanguagesCard'\r\nimport QualitiesCard from '../../components/QualitiesCard'\r\nimport AddQualityCard from '../../components/AddQualityCard'\r\nimport EditQualitiesCard from '../../components/EditQualitiesCard'\r\nimport RaritiesCard from '../../components/RaritiesCard'\r\nimport AddRarityCard from '../../components/AddRarityCard'\r\nimport EditRaritiesCard from '../../components/EditRaritiesCard'\r\nimport TypesCard from '../../components/TypesCard'\r\nimport AddTypesCard from '../../components/AddTypesCard'\r\nimport EditTypesCard from '../../components/EditTypesCard'\r\nimport EditionsCard from '../../components/EditionsCards'\r\nimport EditEditionsCards from '../../components/EditEditionsCards'\r\nimport LogView from '../../components/LogView'\r\n\r\n\r\nconst UserCollection = (props) => {\r\n\r\n    let {isAuth} = useContext(AuthContext)\r\n\r\n    useEffect(() => {\r\n        const body = document.querySelector('body')\r\n        body.classList.remove('login')\r\n    })\r\n\r\n    if(isAuth == false){\r\n        window.location.href = `${BASE_URL_LOGIN}`        \r\n    }\r\n\r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"wrapper\">\r\n                <MenuLeft />\r\n                <div className=\"content-wrapper p-2\">\r\n                    <Switch>\r\n                        <Route path={`/cards`} component={Cards} />\r\n                        <Route path={`/addcard`} exact component={AddCardsCollection} />\r\n                        <Route path={`/editcard/:id`} exact component={EditCardsCollection} />\r\n                        <Route path={`/dashboard`} exact component={Dashboard} />\r\n                        <Route path={`/dashboardadmin`} component={DashboardAdmin} />\r\n                        <Route path={`/cardview/:id`} exact component={CardView} />\r\n                        <Route path={`/editioncards`} exact component={EditionCards} />\r\n                        <Route path={`/addeditioncards/:id`} exact component={AddEditionCards} />\r\n                        <Route path={`/editioncards/:id`} component={EditEditionCards} />\r\n                        <Route path={`/editions`} component={EditionsCard} />\r\n                        <Route path={`/editeditionscards/:id`} component={EditEditionsCards} />\r\n                        <Route path={`/colors`} component={ColorsCard} />\r\n                        <Route path={`/addcolorscard`} component={AddColorsCard} />\r\n                        <Route path={`/editcolorscard/:id`} component={EditColorsCard} />\r\n                        <Route path={`/languages`} component={LanguageCard} />\r\n                        <Route path={`/addlanguagescard`} component={AddLanguagesCard} />\r\n                        <Route path={`/editlanguagescard/:id`} component={EditLanguagesCard} />\r\n                        <Route path={`/qualities`} component={QualitiesCard} />\r\n                        <Route path={`/addqualitiescard`} component={AddQualityCard} />\r\n                        <Route path={`/editqualitiescard/:id`} component={EditQualitiesCard} />\r\n                        <Route path={`/rarities`} component={RaritiesCard} />\r\n                        <Route path={`/addraritiescard`} component={AddRarityCard} />\r\n                        <Route path={`/editraritiescard/:id`} component={EditRaritiesCard} />\r\n                        <Route path={`/types`} component={TypesCard} />\r\n                        <Route path={`/addtypescard`} component={AddTypesCard} />\r\n                        <Route path={`/edittypescard/:id`} component={EditTypesCard} />\r\n                        <Route path={`/users`} component={Users} />\r\n                        <Route path={`/edituser/:id`} component={EditUser} />\r\n                        <Route path={`/configuser`} component={ConfigUser} />\r\n                        <Route path={`/logview/:id`} component={LogView} />\r\n                    </Switch>\r\n                </div>\r\n                <footer className=\"main-footer\">\r\n                    <strong>Copyright &copy; 2020 - Magic Collections.</strong>\r\n                    All rights reserved.\r\n                </footer>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserCollection","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\pages\\Register\\index.js",["244","245","246","247"],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\utils\\variaveisAmbiente.js",[],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\utils\\messages.js",["248","249"],"const messages = (error) => {\r\n    switch (error) {\r\n        case 'user or password invalid':\r\n            return 'Usuário ou senha inválidos'\r\n        case 'invalid email':\r\n            return 'Seu e-mail está inválido'\r\n        case 'user exist':\r\n            return 'Este usuário já está cadastrado'\r\n        case 'user not found':\r\n            return 'Este usuário não está cadastrado'\r\n        case 'Token invalid':\r\n            return 'Houve algum problema na autenticação, você será redirecionado para a página de login'\r\n        case 'card exist collection':\r\n            return 'Este card já existe na sua coleção'\r\n        case 'card collection created':\r\n            return 'Card criado com sucesso!!'\r\n        case 'card collection updated':\r\n            return 'Card atualizado com sucesso'\r\n        case 'edition created':\r\n            return 'Edição criada com sucesso'\r\n        case 'edition exist':\r\n            return 'Esta edição já existe'\r\n        case 'card deleted':\r\n            return 'Card excluído com sucesso'\r\n        case 'card collection deleted':\r\n            return 'Card excluído com sucesso'\r\n        case 'card exist':\r\n            return 'Este card já existe'\r\n        case 'card created':\r\n            return 'Card criado com sucess'\r\n        case 'card updated':\r\n            return 'Card atualizado com sucesso'\r\n        case 'user deleted':\r\n            return 'Usuário deletado com sucesso'\r\n        case 'user updated':\r\n            return 'Usuário atualizado com sucesso'\r\n        case 'file not supported':\r\n            return 'Arquivo não suportado. Apenas imagens são suportadas'\r\n        case 'No token provided':\r\n            return 'Houve algum problema no sistema!!!'\r\n        case 'color created':\r\n            return 'Cor criada com sucesso'\r\n        case 'color exist':\r\n            return 'Cor já existe'\r\n        case 'color updated':\r\n            return 'Cor atualizada com sucesso'\r\n        case 'color deleted':\r\n            return 'Cor excluída com sucesso'\r\n        case 'language created':\r\n            return 'Linguagem criada com sucesso'\r\n        case 'language exist':\r\n            return 'Linguagem já existe'\r\n        case 'language updated':\r\n            return 'Linguagem atualizada com sucesso'\r\n        case 'language deleted':\r\n            return 'Linguagem excluída com sucesso'\r\n        case 'quality created':\r\n            return 'Qualitdade criada com sucesso'\r\n        case 'quality exist':\r\n            return 'Qualitdade já existe'\r\n        case 'quality updated':\r\n            return 'Qualitdade atualizada com sucesso'\r\n        case 'quality deleted':\r\n            return 'Qualitdade excluída com sucesso'\r\n        case 'rarity created':\r\n            return 'Raridade criada com sucesso'\r\n        case 'rarity exist':\r\n            return 'Raridade já existe'\r\n        case 'rarity updated':\r\n            return 'Raridade atualizada com sucesso'\r\n        case 'rarity deleted':\r\n            return 'Raridade excluída com sucesso'\r\n        case 'type created':\r\n            return 'Tipo criado com sucesso'\r\n        case 'type exist':\r\n            return 'Tipo já existe'\r\n        case 'type updated':\r\n            return 'Tipo atualizado com sucesso'\r\n        case 'type deleted':\r\n            return 'Tipo excluído com sucesso'\r\n        case 'edition created':\r\n            return 'Edição criada com sucesso'\r\n        case 'edition exist':\r\n            return 'Edição já existe'\r\n        case 'edition updated':\r\n            return 'Edição atualizada com sucesso'\r\n        case 'edition deleted':\r\n            return 'Edição excluída com sucesso'\r\n        case 'Unauthorized':\r\n            return 'Você não é autorizado'\r\n        case 'external login':\r\n            return 'Este usuário é gerenciado pelo google ou facebook'\r\n        case 'email sent':\r\n            return 'Um email foi enviado com o link da recuperação de senha. Por favor verifique seu e-mail!'\r\n        case 'email not sent':\r\n            return 'Houve algum problema no envio do e-mail. Por favor tente novamente mais tarde!'\r\n        case 'password not changed':\r\n            return 'Não foi possível alterar sua senha. Por favor tente novamente mais tarde!'\r\n        case 'password changed':\r\n            return 'Sua senha foi alterada com sucesso'\r\n        case 'date expired':\r\n            return 'Prazo de mudança de senha foi expirado.'\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    messages\r\n}","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\CardView\\index.js",["250","251","252","253","254","255","256"],"import React, {useEffect, useRef, useState, useContext} from 'react';\r\nimport Loading from '../Loading'\r\nimport axios from 'axios';\r\nimport {BASE_URL_BACK, BASE_URL_API_MAGIC, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport BackCard from '../../img/backCard.png'\r\nimport Birds from '../../img/aves_do_paraiso.png'\r\nimport jwt from 'jsonwebtoken'\r\nimport _ from 'lodash'\r\n\r\nconst CardView = (props) => {\r\n\r\n    let {isAuth} = useContext(AuthContext)\r\n    const urlId = props.match.params.id\r\n    const token = localStorage.getItem('token')\r\n    const {id} = jwt.decode(token)\r\n    const [card, setCard] = useState([])\r\n    const [imageUrl, setImageUrl] = useState('')\r\n    const refLoading = useRef()\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/collections/${id}`,configAxios)\r\n        .then(resp => {\r\n            const data = _.filter(resp.data, {'id': parseInt(urlId)})\r\n            setCard(data)\r\n\r\n            axios.get(`${BASE_URL_API_MAGIC}?name=${data[0].card_name}&language=Portuguese (Brazil)`)\r\n            .then(resp => {\r\n                const data = []\r\n\r\n                _.map(resp.data.cards, img => {\r\n                    if(_.has(img, 'imageUrl')){\r\n                        data.push(img)\r\n                    }\r\n                })\r\n\r\n                setImageUrl(data[0].imageUrl)\r\n                setTimeout(() => {\r\n                    refLoading.current.executeLoading()\r\n                }, 1000);\r\n\r\n            })\r\n        })\r\n        .catch(err => {\r\n            if(err.response.data.message == 'token invalid'){\r\n                window.location.href = `${BASE_URL_LOGIN}`\r\n            }\r\n        })\r\n        \r\n    },[urlId])\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    return(\r\n        <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                    <div className=\"col-12 mt-2 mb-2\">\r\n                        <h1>{card[0]?.card_name}</h1>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-2\">\r\n                        <img src={imageUrl || BackCard} alt=\"\" width='90%'/>\r\n                    </div>\r\n                    <div className=\"col-lg-10 mt-2\">\r\n                        <p><b>Nome da Carta:</b> {card[0]?.card_name}</p>\r\n                        <p><b>Tipo da carta:</b> {card[0]?.card_type}</p>\r\n                        <p><b>Cor da carta:</b> {card[0]?.card_color}</p>\r\n                        <p><b>Edição da carta:</b> {card[0]?.edition}</p>\r\n                        <p><b>Raridade da carta:</b> {card[0]?.rarity}</p>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <Loading \r\n                    ref={refLoading}\r\n                />\r\n            </section>\r\n\r\n    )\r\n}\r\n\r\nexport default CardView","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditCardsCollection\\index.js",["257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272"],"import React, { useEffect, useState, useRef, useContext } from 'react';\r\nimport axios from 'axios'\r\nimport jwt from 'jsonwebtoken'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport {messages} from '../../utils/messages'\r\nimport _ from 'lodash'\r\nimport { useHistory, useParams, Link, Redirect } from 'react-router-dom';\r\n\r\nconst EditCardsCollection = (props) => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    const token = localStorage.getItem('token')\r\n    const {id} = useParams()\r\n    const history = useHistory()\r\n    const [cardId, setCardId] = useState()\r\n    const [cardName, setCardName] = useState()\r\n    const [qualityId, setQualityId] = useState('')\r\n    const [cardQuality, setCardQuality] = useState([])\r\n    const [languageId, setLanguageId] = useState([])\r\n    const [cardLanguage, setCardLanguage] = useState([])\r\n    const [quantity, setQuantity] = useState('')\r\n    const [redirectPage, setRedirectPage] = useState(false)\r\n    const refQuality = useRef()\r\n    const refLanguage = useRef()\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n    const jwtId = jwt.decode(token)\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/collections/${jwtId.id}`,configAxios)\r\n        .then(resp => {\r\n            setQualityId(resp.data.filter(card => card.id == id )[0].quality_id);\r\n            setLanguageId(resp.data.filter(card => card.id == id )[0].language_id)\r\n            setCardName(resp.data.filter(card => card.id == id )[0].card_name)\r\n            setQuantity(resp.data.filter(card => card.id == id )[0].quantity)\r\n            setCardId(resp.data.filter(card => card.id == id )[0].card_id)\r\n        })\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardlanguages`,configAxios)\r\n            .then(resp => {\r\n                setCardLanguage(resp.data.language)\r\n            })\r\n    },[languageId])\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardqualities`,configAxios)\r\n            .then(resp => {\r\n                    setCardQuality(resp.data.quality)\r\n            })\r\n    },[qualityId])\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    const cardQuantity = evt => {\r\n        setQuantity(evt.target.value)\r\n    }\r\n\r\n    const saveCard = (evt) => {\r\n        evt.preventDefault()\r\n        const obj = {\r\n            user_id: jwtId.id,\r\n            cardLanguage_id: parseInt(refLanguage.current.value),\r\n            cardQuality_id: parseInt(refQuality.current.value),\r\n            cards_id: cardId,\r\n            quantity: parseInt(quantity)\r\n        }\r\n        \r\n        axios.put(`${BASE_URL_BACK}/collections/${props.match.params.id}`,obj,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message = \"card collection updated\"){\r\n                    toast.success(messages('card collection updated'))\r\n                    setTimeout(() => {\r\n                        history.push('/cards')\r\n                    }, 5000);\r\n                }\r\n            })\r\n    }\r\n\r\n    const renderQuality = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Qualidade da Carta</label>\r\n                <select name={'quality'} className=\"form-control\" ref={refQuality} required>\r\n                   {qualityId > 0 && _.orderBy(cardQuality,[i => i.id == qualityId],['desc']).map(quality => {\r\n                        return(\r\n                            <option key={quality.id} value={quality.id}>{quality.quality}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderLanguage = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Idioma da Carta</label>\r\n                <select className=\"form-control\" name={'language'} ref={refLanguage} required>\r\n                    {languageId > 0 && _.orderBy(cardLanguage,[i => i.id == languageId],['desc']).map(language => {\r\n                        return(\r\n                            <option key={language.id} value={language.id}>{language.language}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                <div className=\"col-12 mt-2 mb-3\">\r\n                    <h1>Cadastro de Cards</h1>\r\n                </div>\r\n                </div>\r\n\r\n                <form onSubmit={saveCard}>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-4\">\r\n                        <div className=\"form-group\">\r\n                        <label>Nome da Carta</label>\r\n                        <input type=\"number\" className=\"form-control\" value={cardName || ''}  placeholder={cardName} disabled={true} />\r\n                        </div>\r\n                    </div>\r\n                    {renderQuality()}\r\n                    {renderLanguage()}\r\n                    <div className=\"col-lg-4\">\r\n                        <div className=\"form-group\">\r\n                        <label>Quantidade de Carta</label>\r\n                        <input type=\"number\" className=\"form-control\" value={quantity} onChange={cardQuantity} placeholder=\"Digite a quantidade de cartas\"  required />\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <button type=\"submit\" className=\"btn btn-dark mr-2\">Atualizar</button>\r\n                        <Link className=\"btn btn-dark mr-2\" to='/cards'>Voltar</Link>\r\n                    </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <ToastContainer />\r\n        </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditCardsCollection","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\Cards\\index.js",["273","274","275","276","277","278"],"import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport './index.css'\r\nimport axios from 'axios'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {messages} from '../../utils/messages'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport jwt from 'jsonwebtoken'\r\nimport $ from 'jquery'\r\nimport Modals from '../Modals'\r\nimport Loading from '../Loading'\r\n\r\nconst Cards = () => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    const history = useHistory()\r\n    const [data, setData] = useState([])\r\n    const token = localStorage.getItem('token')\r\n    const [lineId, setLineId] = useState()\r\n    const refModal = useRef()\r\n    const refLoading = useRef()\r\n    \r\n    useEffect(() => {\r\n            const configAxios = {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            }\r\n    \r\n            const {id} = jwt.decode(token) || 'error'\r\n    \r\n            axios.get(`${BASE_URL_BACK}/collections/${id}`,configAxios)\r\n                .then(resp => {\r\n                    setData(resp.data)\r\n                    $(document).ready(function(){\r\n                        let dataTable = $('#dataTable').DataTable({\r\n                            \"responsive\": true,\r\n                            \"autoWidth\": false,\r\n                            \"lengthChange\": false,\r\n                            \"pageLength\": 10,\r\n                            \"bInfo\" : false,\r\n                            \"language\": {\r\n                                \"paginate\": {\r\n                                  \"previous\": \"Anterior\",\r\n                                  \"next\": \"Próxima\"\r\n                                },\r\n                                \"emptyTable\": \"Não existe dados para serem carregados\"\r\n                            },\r\n                            buttons: [\r\n                                { \r\n                                    extend: 'pdfHtml5',\r\n                                    customize: function(doc) {\r\n                                        doc.styles.tableBodyEven.alignment = 'center';\r\n                                        doc.styles.tableBodyOdd.alignment = 'center'; \r\n                                    },\r\n                                    exportOptions:{\r\n                                        columns: [0,1,2,3,4,5,6,7]\r\n                                    }\r\n                                },\r\n                                { \r\n                                    extend: 'excel',\r\n                                    exportOptions:{\r\n                                        columns: [0,1,2,3,4,5,6,7]\r\n                                    }\r\n                                }\r\n                            ]\r\n                        })\r\n\r\n                        $('#searchBarTec').on('keyup change', function () {\r\n                            dataTable.search(this.value).draw();\r\n                        })\r\n\r\n                        $('#exportExcel').on('click', function() {\r\n                            dataTable.button('.buttons-excel').trigger();\r\n                        });\r\n\r\n                        $('#exportPdf').on('click', function() {\r\n                            dataTable.button('.buttons-pdf').trigger();\r\n                        });\r\n\r\n                        refLoading.current.executeLoading()\r\n                    })\r\n                })\r\n                .catch(err => {\r\n                    toast.info(messages(err.response.data.message))\r\n                    if(err.response.data.message == 'Token invalid'){\r\n                        setTimeout(() => {\r\n                            window.location.href = `${BASE_URL_LOGIN}`\r\n                        }, 5000);\r\n                    }\r\n                })\r\n    },[])\r\n\r\n    if(isAuth == false){\r\n        window.location.href = `${BASE_URL_LOGIN}`\r\n    }\r\n\r\n    const deleteItem = () => {\r\n        const configAxios = {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }\r\n\r\n        axios.delete(`${BASE_URL_BACK}/collections/${lineId}`,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message == 'card collection deleted'){\r\n                    toast.success(messages(resp.data.message))\r\n                    const filtered = data.filter(cards => {\r\n                        return cards.id != lineId\r\n                    })            \r\n                    setData(filtered)\r\n                    refModal.current.openModal()\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const renderRow = () => {\r\n        return data.map(line => (\r\n                <tr key={line.id}>\r\n                    <td>{line.card_name}</td>\r\n                    <td className=\"text-center\">{line.card_type}</td>\r\n                    <td className=\"text-center\">{line.card_color}</td>\r\n                    <td className=\"text-center\">{line.edition}</td>\r\n                    <td className=\"text-center\">{line.rarity}</td>\r\n                    <td className=\"text-center\">{line.quality}</td>\r\n                    <td className=\"text-center\">{line.language}</td>\r\n                    <td className=\"text-center\">{line.quantity}</td>\r\n                    <td className=\"text-center\"><Link className='link_text_pen' to={`cardview/${line.id}`}><i className=\"fas fa-eye click\"></i></Link></td>\r\n                    <td className=\"text-center\"><Link className='link_text_pen' to={`editcard/${line.id}`}><i className=\"fas fa-pencil-alt click\"></i></Link></td>\r\n                    <td className=\"text-center\"><i className=\"fas fa-trash-alt click\" onClick={() => openModal(line.id)}></i></td>\r\n                </tr>\r\n            )\r\n        )\r\n    }\r\n\r\n    const openModal = (id) => {\r\n        setLineId(id)\r\n        refModal.current.openModal()\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            \r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                    <div className=\"col-12 mt-2 mb-2\">\r\n                        <h1>Minha Coleção</h1>\r\n                    </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-9\">\r\n                            <div className=\"input-group mb-3\">\r\n                            <input type=\"email\" className=\"form-control\" id=\"searchBarTec\" placeholder=\"Qual carta você está procurando?\" />\r\n                            <div className=\"input-group-append\">\r\n                                <div className=\"input-group-text\">\r\n                                <i className=\"fas fa-search\"></i>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-3 mb-2 mr-0\">\r\n                            <button type=\"button\" className=\"btn btn-dark mr-1\"><Link className='link_text' to='/addcard'>Adicionar</Link></button>\r\n                            <button type=\"button\" className=\"btn btn-dark mr-1\" id='exportPdf'>PDF</button>\r\n                            <button type=\"button\" className=\"btn btn-dark mr-1\" id='exportExcel'>Excel</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <table id=\"dataTable\" className=\"table table-bordered table-responsive-sm table-responsive-md\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Nome</th>\r\n                            <th className=\"text-center\">Tipo</th>\r\n                            <th className=\"text-center\">Cor</th>\r\n                            <th className=\"text-center\">Edição</th>\r\n                            <th className=\"text-center\">Raridade</th>\r\n                            <th className=\"text-center\">Qualidade</th>\r\n                            <th className=\"text-center\">Idioma</th>\r\n                            <th className=\"text-center\">Quantidade</th>\r\n                            <th className=\"text-center\">Visualizar</th>\r\n                            <th className=\"text-center\">Editar</th>\r\n                            <th className=\"text-center\">Remover</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {renderRow()}\r\n                        </tbody>\r\n                        </table>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <ToastContainer />\r\n            <Modals \r\n                title='Exclusão de card'\r\n                body='Deseja realmente excluir este card?'\r\n                nameButton='Excluir'\r\n                deleteItem={deleteItem}\r\n                ref={refModal}\r\n            />\r\n            <Loading \r\n                ref={refLoading}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\MenuLeft\\index.js",["279","280","281","282","283","284"],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddCardsCollection\\index.js",["285","286","287","288","289","290"],"import React, { useEffect, useRef, useState, useContext } from 'react'\r\nimport './index.css'\r\nimport { Typeahead} from 'react-bootstrap-typeahead'\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css'\r\nimport {messages} from '../../utils/messages'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport {useHistory, Link, Redirect} from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport _ from 'lodash'\r\nimport jwt from 'jsonwebtoken'\r\n\r\nconst AddCardsCollection = () => {\r\n\r\n    let {isAuth} = useContext(AuthContext)\r\n    const history = useHistory()\r\n    const [allcards, setAllCards] = useState([])\r\n    const [cardName, setCardName] = useState([]);\r\n    const [cardSelected, setCardSelected] = useState('')\r\n    const [cardQuality, setCardQuality] = useState([])\r\n    const [cardLanguage, setCardLanguage] = useState([])\r\n    const [cadastrar, setCadastrar] = useState(false)\r\n    const refQuality = useRef()\r\n    const refLanguage = useRef()\r\n    const [quantity, setQuantity] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const user = jwt.decode(token)\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cards`,configAxios)\r\n            .then(resp => {\r\n                setAllCards(resp.data)\r\n                const data = resp.data.map((cards, index, array) => {                    \r\n                        return `${cards.card_name} | ${cards.edition}`\r\n                })\r\n                setCardName(data)\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n\r\n        axios.get(`${BASE_URL_BACK}/cardqualities`,configAxios)\r\n            .then(resp => {\r\n                setCardQuality(resp.data.quality)\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n\r\n        axios.get(`${BASE_URL_BACK}/cardlanguages`,configAxios)\r\n            .then(resp => {\r\n                setCardLanguage(resp.data.language)\r\n            })\r\n            .catch(err => {\r\n                toast.info(messages(err.response.data.message))\r\n                if(err.response.data.message == 'Token invalid'){\r\n                    setTimeout(() => {\r\n                        window.location.href = `${BASE_URL_LOGIN}`\r\n                    }, 5000);\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    const handleChange = (selected) => {\r\n        setCardSelected(selected)\r\n    }\r\n\r\n    const handleOnBlur = (selected) => {\r\n        if(selected.target.value.indexOf('|') == -1){\r\n            setCadastrar(false)\r\n        }else{\r\n            setCadastrar(true)\r\n        }\r\n    }\r\n\r\n    const renderQuality = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Qualidade da Carta</label>\r\n                <select className=\"form-control\" ref={refQuality} required>\r\n                   {cardQuality.map(quality => {\r\n                        return(\r\n                            <option key={quality.id} value={quality.id}>{quality.quality}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderLanguage = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Idioma da Carta</label>\r\n                <select className=\"form-control\" ref={refLanguage} required>\r\n                    {cardLanguage.map(language => {\r\n                        return(\r\n                            <option key={language.id} value={language.id}>{language.language}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const cardQuantity = evt => {\r\n        setQuantity(evt.target.value)\r\n    }\r\n\r\n    const saveCard = evt => {\r\n        evt.preventDefault()\r\n        \r\n        const nameArr = cardSelected[0].split('|')\r\n        const nameArrTrim = nameArr.map(name => {\r\n            return name.trim()\r\n        })\r\n        const userCardsSelected = (_.find(allcards, {card_name: nameArrTrim[0], edition: nameArrTrim[1]}));\r\n        const qualityId = refQuality.current.value\r\n        const languageId = refLanguage.current.value\r\n        const userCardsSelectedId = userCardsSelected.id\r\n        const userId = user.id\r\n        const objAddCard = {\r\n            user_id: userId,\r\n            cardLanguage_id: languageId,\r\n            cardQuality_id: qualityId,\r\n            cards_id: userCardsSelectedId,\r\n            quantity\r\n        }\r\n\r\n        axios.post(`${BASE_URL_BACK}/collections`,objAddCard,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/cards')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n        <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                <div className=\"col-12 mt-2 mb-3\">\r\n                    <h1>Cadastro de cartas na sua coleção</h1>\r\n                </div>\r\n                </div>\r\n\r\n                <form onSubmit={saveCard}>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-4 mb-5\">\r\n                        <div className=\"form-group\">\r\n                        <label>Nome da Carta</label>\r\n                            <Typeahead\r\n                                id=\"cardsName\"\r\n                                onChange={(selected) => {\r\n                                    handleChange(selected)\r\n                                }}\r\n\r\n                                onBlur={(selected) => {\r\n                                    handleOnBlur(selected)\r\n                                }}\r\n                                options={cardName}\r\n                                minLength={2}\r\n                                inputProps={{ required: true }}\r\n                                >\r\n                            </Typeahead>\r\n                        </div>\r\n                    </div>\r\n                    {renderQuality()}\r\n                    {renderLanguage()}\r\n                    <div className=\"col-lg-4\">\r\n                        <div className=\"form-group\">\r\n                        <label>Quantidade de Carta</label>\r\n                        <input type=\"number\" className=\"form-control\" value={quantity} placeholder=\"Digite a quantidade de cartas\" onChange={cardQuantity} required min=\"1\" />\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <button type=\"submit\" className={cadastrar ? 'btn btn-dark mr-2' : 'btn btn-dark mr-2 disabled'}>Cadastrar</button>\r\n                        <Link className=\"btn btn-dark mr-2\" to='/cards'>Voltar</Link>\r\n                    </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <ToastContainer />\r\n        </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddCardsCollection","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditionCards\\index.js",["291","292","293","294","295","296","297","298","299","300"],"import React, { useEffect, useRef, useState, useContext } from 'react'\r\nimport './index.css'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport {messages} from '../../utils/messages'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport {toast, ToastContainer } from 'react-toastify'\r\nimport Modals from '../Modals'\r\nimport _ from 'lodash'\r\nimport $ from 'jquery'\r\n\r\n\r\nconst EditionCards = () => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [cardEditions, setCardEditions] = useState([])\r\n    const [cardFilterEdition, setCardFilterEdition] = useState([])\r\n    const [idEdition, setIdEdition] = useState()\r\n    const [lineId, setLineId] = useState()\r\n    const [hiddenCards, setHiddensCard] = useState(true)\r\n    const token = localStorage.getItem('token')\r\n    const refEdition = useRef()\r\n    const refModal = useRef()\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardeditions`,configAxios)\r\n            .then(resp => {\r\n                setCardEditions(resp.data.edition)\r\n                let dataTable = $('#dataTableEditionCards').DataTable({\r\n                    \"responsive\": true,\r\n                    \"autoWidth\": false,\r\n                    \"lengthChange\": false,\r\n                    \"pageLength\": 10,\r\n                    \"bInfo\" : false,\r\n                    \"language\": {\r\n                        \"paginate\": {\r\n                          \"previous\": \"Anterior\",\r\n                          \"next\": \"Próxima\"\r\n                        },\r\n                        \"emptyTable\": \"Não existe dados para serem carregados\"\r\n                    },\r\n                    buttons: [\r\n                        { \r\n                            extend: 'pdfHtml5',\r\n                            customize: function(doc) {\r\n                                doc.styles.tableBodyEven.alignment = 'center';\r\n                                doc.styles.tableBodyOdd.alignment = 'center'; \r\n                            },\r\n                            exportOptions:{\r\n                                columns: [0,1,2,3,4,5,6,7]\r\n                            }\r\n                        },\r\n                        { \r\n                            extend: 'excel',\r\n                            exportOptions:{\r\n                                columns: [0,1,2,3,4,5,6,7]\r\n                            }\r\n                        }\r\n                    ]\r\n                })\r\n\r\n                $('#searchBarTec').on('keyup change', function () {\r\n                    dataTable.search(this.value).draw()\r\n                })\r\n\r\n                $('#exportExcel').on('click', function() {\r\n                    dataTable.button('.buttons-excel').trigger()\r\n                })\r\n\r\n                $('#exportPdf').on('click', function() {\r\n                    dataTable.button('.buttons-pdf').trigger()\r\n                })\r\n            })\r\n            .catch(err => {\r\n                toast.info(messages(err.response.data.message))\r\n                if(err.response.data.message == 'Token invalid'){\r\n                    setTimeout(() => {\r\n                        window.location.href = `${BASE_URL_LOGIN}`\r\n                    }, 5000);\r\n                }\r\n            })\r\n    \r\n    }, [])\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/cards' />\r\n        )\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    const handleChangeOptions = (e) => {\r\n        if(e.target.value == 'Selecione uma edição'){\r\n            setIdEdition(null)\r\n            setHiddensCard(true)\r\n        }else{\r\n            setHiddensCard(false)\r\n            const idEdition = refEdition.current.value\r\n            setIdEdition(idEdition)\r\n            axios.get(`${BASE_URL_BACK}/cards`,configAxios)\r\n            .then(resp => {\r\n                $('#dataTableEditionCards').DataTable().destroy()\r\n                setCardFilterEdition(_.filter(resp.data, {'edition_id': parseInt(idEdition)}))\r\n                let dataTable = $('#dataTableEditionCards').DataTable({\r\n                    \"responsive\": true,\r\n                    \"autoWidth\": false,\r\n                    \"lengthChange\": false,\r\n                    \"pageLength\": 10,\r\n                    \"bInfo\" : false,\r\n                    \"language\": {\r\n                        \"paginate\": {\r\n                          \"previous\": \"Anterior\",\r\n                          \"next\": \"Próxima\"\r\n                        },\r\n                        \"emptyTable\": \"Não existe dados para serem carregados\"\r\n                    },\r\n                    buttons: [\r\n                        { \r\n                            extend: 'pdfHtml5',\r\n                            customize: function(doc) {\r\n                                doc.styles.tableBodyEven.alignment = 'center';\r\n                                doc.styles.tableBodyOdd.alignment = 'center'; \r\n                            },\r\n                            exportOptions:{\r\n                                columns: [0,1,2,3,4,5,6,7]\r\n                            }\r\n                        },\r\n                        { \r\n                            extend: 'excel',\r\n                            exportOptions:{\r\n                                columns: [0,1,2,3,4,5,6,7]\r\n                            }\r\n                        }\r\n                    ]\r\n                })\r\n\r\n                $('#searchBarTec').on('keyup change', function () {\r\n                    dataTable.search(this.value).draw()\r\n                })\r\n\r\n                $('#exportExcel').on('click', function() {\r\n                    dataTable.button('.buttons-excel').trigger()\r\n                })\r\n\r\n                $('#exportPdf').on('click', function() {\r\n                    dataTable.button('.buttons-pdf').trigger()\r\n                })\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n        }\r\n    }\r\n\r\n    const renderEditions = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mt-3\">\r\n                <div className=\"form-group\">\r\n                <label>Selecione a edição</label>\r\n                <select className=\"form-control\" ref={refEdition} onChange={e => handleChangeOptions(e)} required>\r\n                    <option>Selecione uma edição</option>\r\n                    {cardEditions.map(edition => {\r\n                        return(\r\n                            <option key={edition.id} value={edition.id}>{edition.edition}</option>\r\n                        )\r\n                    })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderRow = () => {\r\n        return cardFilterEdition.map(line => (\r\n                <tr key={line.id}>\r\n                    <td>{line.card_name}</td>\r\n                    <td className=\"text-center\">{line.card_type}</td>\r\n                    <td className=\"text-center\">{line.card_color}</td>\r\n                    <td className=\"text-center\">{line.edition}</td>\r\n                    <td className=\"text-center\">{line.rarity}</td>\r\n                    <td className=\"text-center\"><Link className='link_text_pen' to={`/editioncards/${line.id}`}><i className=\"fas fa-pencil-alt click\"></i></Link></td>\r\n                    <td className=\"text-center\"><i className=\"fas fa-trash-alt click\" onClick={() => openModal(line.id)}></i></td>\r\n                </tr>\r\n            )\r\n        )\r\n    }\r\n\r\n    const openModal = (id) => {\r\n        setLineId(id)\r\n        refModal.current.openModal()\r\n    }\r\n\r\n    const deleteItem = () => {\r\n        axios.delete(`${BASE_URL_BACK}/cards/${lineId}`,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message == 'card deleted'){\r\n                    toast.success(messages(resp.data.message))\r\n                    const filtered = cardFilterEdition.filter(cards => {\r\n                        return cards.id != lineId\r\n                    })            \r\n                    setCardFilterEdition(filtered)\r\n                    refModal.current.openModal()\r\n                }\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }\r\n\r\n    const saveNewEdition = (evt) => {\r\n        evt.preventDefault()\r\n        const objAddEdtion = {\r\n            'edition': evt.target.newEdition.value.trim(),\r\n            'code': evt.target.codeNewEdition.value.trim()\r\n        }\r\n\r\n        axios.post(`${BASE_URL_BACK}/cardeditions`,objAddEdtion,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                axios.get(`${BASE_URL_BACK}/cardeditions`,configAxios)\r\n                    .then(resp => {\r\n                        setCardEditions(resp.data.edition)\r\n                    })\r\n\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }\r\n\r\n    return(\r\n        <section className=\"content\">\r\n           <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 mt-2 mb-3\">\r\n                    <h1>Edições e Cards</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {renderEditions()}\r\n                    <div className=\"col-lg-4 mt-5\">                \r\n                        <button type=\"button\" data-toggle=\"collapse\" href=\"#addNewEdition\" className=\"btn btn-dark mb-3\">Nova Edição</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <form onSubmit={saveNewEdition}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-4\">\r\n                            <div className=\"collapse multi-collapse\" id=\"addNewEdition\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-6\">\r\n                                        <input type=\"text\" name='newEdition' className=\"form-control mb-3\" placeholder=\"Qual o nome da edição?\" required />\r\n                                    </div>\r\n                                    <div className=\"col-lg-6\">\r\n                                        <input type=\"text\" name='codeNewEdition' className=\"form-control mb-3\" placeholder=\"Qual o código da edição?\" required />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-4\">\r\n                            <div className=\"collapse multi-collapse\" id=\"addNewEdition\">\r\n                                <button type=\"submit\" className=\"btn btn-dark mr-2\">Salvar</button>\r\n                                <a href=\"https://pt.wikipedia.org/wiki/Expans%C3%B5es_de_Magic:_The_Gathering\" target='_blank'><i className=\"fas fa-question-circle text-primary helpme\" title='Código da edição'></i></a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n                <hr className=\"mb-4\"></hr>\r\n\r\n                <div hidden={hiddenCards}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-3\">\r\n                        <h1>Cards</h1>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-11\">\r\n                            <div className=\"input-group mb-3\">\r\n                                <input type=\"email\" className=\"form-control\" id=\"searchBarTec\" placeholder=\"Qual carta você está procurando?\" />\r\n                                <div className=\"input-group-append\">\r\n                                <div className=\"input-group-text\">\r\n                                    <i className=\"fas fa-search\"></i>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-1 mb-2\">\r\n                            <Link className={idEdition ? 'btn btn-dark' : 'btn btn-dark disabled'} to={`/addeditioncards/${idEdition}`}>Adicionar</Link>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                        <div className=\"col-lg-12\">\r\n                            <table id=\"dataTableEditionCards\" className=\"table table-bordered table-responsive-sm table-responsive-md\">\r\n                            <thead>\r\n                            <tr>\r\n                                <th>Nome</th>\r\n                                <th className=\"text-center\">Tipo</th>\r\n                                <th className=\"text-center\">Cor</th>\r\n                                <th className=\"text-center\">Edição</th>\r\n                                <th className=\"text-center\">Raridade</th>\r\n                                <th className=\"text-center\">Editar</th>\r\n                                <th className=\"text-center\">Remover</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {renderRow()}\r\n                            </tbody>\r\n                            </table>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n           </div>\r\n           <ToastContainer />\r\n           <Modals \r\n                title='Exclusão de card'\r\n                body='Deseja realmente excluir este card? Se você fizer isso, este card será removido de todos os usuários'\r\n                nameButton='Excluir'\r\n                deleteItem={deleteItem}\r\n                ref={refModal}\r\n            />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default EditionCards\r\n","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditEditionCards\\index.js",["301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317"],"import React, { useEffect, useRef, useState, useContext } from 'react';\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {messages} from '../../utils/messages'\r\nimport { useHistory, useParams, Link, Redirect } from 'react-router-dom';\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios';\r\nimport _ from 'lodash'\r\n\r\nconst EditEditionCards = (props) => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [card, setCard] = useState([])\r\n    const [cardName, setCardName] = useState('')\r\n    const [typeId, setTypeId] = useState([])\r\n    const [cardType, setCardType] = useState([])\r\n    const [cardColor, setCardColor] = useState([])\r\n    const [cardEdition, setCardEdition] = useState([])\r\n    const [cardRarity, setCardRarity] = useState([])\r\n    const token = localStorage.getItem('token')\r\n    const history = useHistory()\r\n    const {id} = props.match.params\r\n    const refCardType = useRef()\r\n    const refCardColor = useRef()\r\n    const refCardEdition = useRef()\r\n    const refCardRarity = useRef()\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        axios.get(`${BASE_URL_BACK}/cards`,configAxios)\r\n            .then(resp => {\r\n                setCardName(_.filter(resp.data, {'id': parseInt(id)})[0].card_name)\r\n                setCard(_.filter(resp.data, {'id': parseInt(id)})[0])\r\n\r\n            })\r\n    },[id])\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardtypes`,configAxios)\r\n            .then(resp => {\r\n                setCardType(resp.data.type)\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    },[card.type_id])\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardcolors`,configAxios)\r\n            .then(resp => {\r\n                setCardColor(resp.data.color)\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }, [card.color_id])\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardeditions`,configAxios)\r\n            .then(resp => {\r\n                setCardEdition(resp.data.edition)\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }, [card.edition_id])\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardrarities`,configAxios)\r\n            .then(resp => {\r\n                setCardRarity(resp.data.rarity)\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    },[card.rarity_id])\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }\r\n\r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/cards' />\r\n        )\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    \r\n\r\n    const renderCardType = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Tipo da Carta</label>\r\n                <select className=\"form-control\" ref={refCardType} required>\r\n                    {card.type_id > 0 && _.orderBy(cardType,[i => i.id == card.type_id],['desc']).map(type => {\r\n                        return(\r\n                            <option key={type.id} value={type.id}>{type.type}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderCardColor = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Cor da Carta</label>\r\n                <select className=\"form-control\" ref={refCardColor} required>\r\n                    {card.color_id > 0 && _.orderBy(cardColor,[i => i.id == card.color_id],['desc']).map(color => {\r\n                        return(\r\n                            <option key={color.id} value={color.id}>{color.color}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderEdition = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Edição da Carta</label>\r\n                <select className=\"form-control\" ref={refCardEdition} required>\r\n                    {card.edition_id > 0 && _.orderBy(cardEdition,[i => i.id == card.edition_id],['desc']).map(edition => {\r\n                        return(\r\n                            <option key={edition.id} value={edition.id}>{edition.edition}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderRarity = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Raridade da Carta</label>\r\n                <select className=\"form-control\" ref={refCardRarity} required>\r\n                    {card.rarity_id > 0 && _.orderBy(cardRarity,[i => i.id == card.rarity_id],['desc']).map(rarity => {\r\n                        return(\r\n                            <option key={rarity.id} value={rarity.id}>{rarity.rarity}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const handleChangeName = (evt) => {\r\n        setCardName(evt.target.value)\r\n    }\r\n\r\n\r\n    const saveCard = (evt) => {\r\n        evt.preventDefault()\r\n\r\n        const objAddCard = {\r\n            cardName: evt.target.cardName.value.trim(),\r\n            cardColor_id: refCardColor.current.value.trim(),\r\n            cardEdition_id: refCardEdition.current.value.trim(),\r\n            cardType_id: refCardType.current.value.trim(),\r\n            cardRarity_id: refCardRarity.current.value.trim()\r\n        }\r\n\r\n        axios.put(`${BASE_URL_BACK}/cards/${id}`,objAddCard,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message == 'card updated'){\r\n                    toast.success(messages(resp.data.message))\r\n                    setTimeout(() => {\r\n                        history.push('/editioncards')\r\n                    }, 5000);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }\r\n\r\n    return(\r\n        <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                <div className=\"col-12 mt-2 mb-3\">\r\n                    <h1>Cadastro de Cards</h1>\r\n                </div>\r\n                </div>\r\n\r\n                <form onSubmit={saveCard}>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-4 mb-5\">\r\n                        <div className=\"form-group\">\r\n                        <label>Nome da Carta</label>\r\n                            <input type=\"text\" name='cardName' value={cardName} onChange={handleChangeName} className=\"form-control\" placeholder=\"Digite a quantidade de cartas\" required />\r\n                        </div>\r\n                    </div>\r\n                    {renderCardType()}\r\n                    {renderCardColor()}\r\n                    {renderEdition()}\r\n                    {renderRarity()}\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <button type=\"submit\" className=\"btn btn-dark mr-2\">Atualizar</button>\r\n                        <Link className=\"btn btn-dark mr-2\" to='/editioncards'>Voltar</Link>\r\n                    </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <ToastContainer />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default EditEditionCards","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddEditionCards\\index.js",["318","319","320","321","322","323"],"import React, { useEffect, useRef, useState, useContext } from 'react';\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {messages} from '../../utils/messages'\r\nimport {useHistory, Link, Redirect} from 'react-router-dom'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios';\r\nimport _ from 'lodash'\r\n\r\nconst AddEditionCards = (props) => {\r\n\r\n    let {isAuth} = useContext(AuthContext)\r\n    const [cardType, setCardType] = useState([])\r\n    const [cardColor, setCardColor] = useState([])\r\n    const [cardEdition, setCardEdition] = useState([])\r\n    const [cardRarity, setCardRarity] = useState([])\r\n    const token = localStorage.getItem('token')\r\n    const refCardType = useRef()\r\n    const refCardColor = useRef()\r\n    const refCardEdition = useRef()\r\n    const refCardRarity = useRef()\r\n    const history = useHistory()\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardtypes`,configAxios)\r\n            .then(resp => {\r\n                setCardType(resp.data.type)\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n\r\n        axios.get(`${BASE_URL_BACK}/cardcolors`,configAxios)\r\n            .then(resp => {\r\n                setCardColor(resp.data.color)\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n\r\n        axios.get(`${BASE_URL_BACK}/cardeditions`,configAxios)\r\n            .then(resp => {\r\n                const filterEdition = _.filter(resp.data.edition, {'id': parseInt(props.match.params.id)})\r\n                setCardEdition(filterEdition[0].edition)\r\n            })\r\n            .catch(err => {\r\n                toast.info(messages(err.response.data.message))\r\n                if(err.response.data.message == 'Token invalid'){\r\n                    setTimeout(() => {\r\n                        window.location.href = `${BASE_URL_LOGIN}`\r\n                    }, 5000);\r\n                }\r\n            })\r\n\r\n        axios.get(`${BASE_URL_BACK}/cardrarities`,configAxios)\r\n            .then(resp => {\r\n                setCardRarity(resp.data.rarity)\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    },[])\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            <Redirect to='/login' />\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    const renderCardType = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Tipo da Carta</label>\r\n                <select className=\"form-control\" ref={refCardType} required>\r\n                   {cardType.map(type => {\r\n                        return(\r\n                            <option key={type.id} value={type.id}>{type.type}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderCardColor = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Cor da Carta</label>\r\n                <select className=\"form-control\" ref={refCardColor} required>\r\n                   {cardColor.map(color => {\r\n                        return(\r\n                            <option key={color.id} value={color.id}>{color.color}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderRarity = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Raridade da Carta</label>\r\n                <select className=\"form-control\" ref={refCardRarity} required>\r\n                   {cardRarity.map(rarity => {\r\n                        return(\r\n                            <option key={rarity.id} value={rarity.id}>{rarity.rarity}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    const saveCard = (evt) => {\r\n        evt.preventDefault()\r\n\r\n        const objAddCard = {\r\n            cardName: evt.target.cardName.value.trim(),\r\n            cardColor_id: refCardColor.current.value.trim(),\r\n            cardEdition_id: parseInt(props.match.params.id),\r\n            cardType_id: refCardType.current.value.trim(),\r\n            cardRarity_id: refCardRarity.current.value.trim()\r\n        }\r\n\r\n        axios.post(`${BASE_URL_BACK}/cards`,objAddCard,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message == 'card created'){\r\n                    toast.success(messages(resp.data.message))\r\n                    setTimeout(() => {\r\n                        history.push('/editioncards')\r\n                    }, 5000);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log({err});\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }\r\n\r\n    return(\r\n        <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                <div className=\"col-12 mt-2 mb-3\">\r\n                    <h1>Cadastro de Cards</h1>\r\n                </div>\r\n                </div>\r\n\r\n                <form onSubmit={saveCard}>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-4 mb-5\">\r\n                        <div className=\"form-group\">\r\n                        <label>Nome da Carta</label>\r\n                            <input type=\"text\" name='cardName' className=\"form-control\" placeholder=\"Digite o nome da carta\" required />\r\n                        </div>\r\n                    </div>\r\n                    {renderCardType()}\r\n                    {renderCardColor()}\r\n                    <div className=\"col-lg-4 mb-5\">\r\n                        <div className=\"form-group\">\r\n                        <label>Edição da Carta</label>\r\n                            <input type=\"text\" name='cardEdition' value={cardEdition} className=\"form-control\" disabled />\r\n                        </div>\r\n                    </div>\r\n                    {renderRarity()}\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <button type=\"submit\" className=\"btn btn-dark mr-2\">Cadastrar</button>\r\n                        <Link className=\"btn btn-dark mr-2\" to='/editioncards'>Voltar</Link>\r\n                    </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <ToastContainer />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default AddEditionCards","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\Users\\index.js",["324","325","326","327","328","329","330","331","332","333"],"import React, {useEffect, useState, useRef, useContext} from 'react';\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport Modals from '../Modals'\r\nimport {messages} from '../../utils/messages'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport _ from 'lodash'\r\nimport $ from 'jquery'\r\nimport axios from 'axios';\r\n\r\nconst Users = () => {\r\n    const token = localStorage.getItem('token')\r\n    const [data, setData] = useState([])\r\n    const [lineId, setLineId] = useState()\r\n    const refModal = useRef()\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/users`,configAxios)\r\n            .then(resp => {\r\n                setData(resp.data)\r\n                $(document).ready(function(){\r\n                    let dataTable = $('#dataTableUser').DataTable({\r\n                        \"responsive\": true,\r\n                        \"autoWidth\": false,\r\n                        \"lengthChange\": false,\r\n                        \"pageLength\": 10,\r\n                        \"bInfo\" : false,\r\n                        \"language\": {\r\n                            \"paginate\": {\r\n                              \"previous\": \"Anterior\",\r\n                              \"next\": \"Próxima\"\r\n                            },\r\n                            \"emptyTable\": \"Não existe dados para serem carregados\"\r\n                        },\r\n                        buttons: [\r\n                            { \r\n                                extend: 'pdfHtml5',\r\n                                customize: function(doc) {\r\n                                    doc.styles.tableBodyEven.alignment = 'center';\r\n                                    doc.styles.tableBodyOdd.alignment = 'center'; \r\n                                },\r\n                                exportOptions:{\r\n                                    columns: [0,1,2,3,4,5,6,7]\r\n                                }\r\n                            },\r\n                            { \r\n                                extend: 'excel',\r\n                                exportOptions:{\r\n                                    columns: [0,1,2,3,4,5,6,7]\r\n                                }\r\n                            }\r\n                        ]\r\n                    })\r\n\r\n                    $('#searchBarTecUser').on('keyup change', function () {\r\n                        dataTable.search(this.value).draw();\r\n                    })\r\n                })\r\n            })\r\n            .catch(err => {\r\n              toast.info(messages(err.response.data.message))\r\n              if(err.response.data.message == 'Token invalid'){\r\n                  setTimeout(() => {\r\n                      window.location.href = `${BASE_URL_LOGIN}`\r\n                  }, 5000);\r\n              }\r\n            })\r\n    },[])\r\n\r\n    const openModal = (id) => {\r\n      setLineId(id)\r\n      refModal.current.openModal()\r\n    }\r\n\r\n    const deleteItem = () => {\r\n      const configAxios = {\r\n          headers: {\r\n              Authorization: `Bearer ${token}`\r\n          }\r\n      }\r\n\r\n      axios.get(`${BASE_URL_BACK}/users/`,configAxios)\r\n        .then(resp => {\r\n            const users = resp.data\r\n            const user = _.filter(resp.data, {'id': lineId})\r\n            const email = user[0].email\r\n            axios.delete(`${BASE_URL_BACK}/users/${email}`,configAxios)\r\n                .then(resp => {\r\n                    if(resp.data.message == 'user deleted'){\r\n                        toast.success(messages(resp.data.message))\r\n                        const filtered = _.filter(users, (o) => {\r\n                          return o.email != email\r\n                        })           \r\n                        setData(filtered)\r\n                        refModal.current.openModal()\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                  toast.info(messages(err.response.data.message))\r\n                })\r\n        })\r\n\r\n  }\r\n\r\n    if(isAuth == false){\r\n      return (\r\n          window.location.href = `${BASE_URL_LOGIN}`\r\n      )\r\n    }else{\r\n        \r\n    }\r\n\r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n    \r\n    if(isAdmin == false){\r\n      return (\r\n          <Redirect to='/users' />\r\n      )\r\n    }else{\r\n        \r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    const renderRow = () => {\r\n        return data.map(line => (\r\n                <tr key={line.id}>\r\n                    <td>{line.name}</td>\r\n                    <td className=\"text-center\">{line.email}</td>\r\n                    <td className=\"text-center\">{line.permission == 0 ? 'Admin' : 'User'}</td>\r\n                    <td className=\"text-center\"><Link className='link_text_pen' to={`/edituser/${line.id}`}><i className=\"fas fa-pencil-alt click\"></i></Link></td>\r\n                    <td className=\"text-center\"><i className=\"fas fa-trash-alt click\" onClick={() => openModal(line.id)}></i></td>\r\n                </tr>\r\n            )\r\n        )\r\n    }\r\n\r\n    return (\r\n        <section className=\"content\">\r\n        <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n            <div className=\"col-12 mt-2 mb-3\">\r\n              <h1>Usuários</h1>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"input-group mb-3\">\r\n                <input type=\"email\" id=\"searchBarTecUser\" className=\"form-control\" placeholder=\"Qual usuário você está procurando?\" />\r\n                <div className=\"input-group-append\">\r\n                  <div className=\"input-group-text\">\r\n                    <i className=\"fas fa-search\"></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n              <table id=\"dataTableUser\" className=\"table table-bordered table-responsive-sm table-responsive-md\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Usuário</th>\r\n                    <th className=\"text-center\">E-mail</th>\r\n                    <th className=\"text-center\">Tipo</th>\r\n                    <th className=\"text-center\">Editar</th>\r\n                    <th className=\"text-center\">Excluir</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {renderRow()}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Modals \r\n            title='Exclusão de card'\r\n            body='Tem certeza que deseja excluir este usuário? Se excluir, a coleção do usuário também será excluída'\r\n            nameButton='Excluir'\r\n            deleteItem={deleteItem}\r\n            ref={refModal}\r\n        />\r\n      <ToastContainer />\r\n      </section>\r\n    )\r\n}\r\n\r\nexport default Users","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\DashboardAdmin\\index.js",["334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349"],"import React, { useEffect, useRef, useState, useContext } from 'react';\r\nimport Loading from '../Loading'\r\nimport './index.css'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport {messages} from '../../utils/messages'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport axios from 'axios';\r\nimport jwt from 'jsonwebtoken'\r\nimport _ from 'lodash'\r\nimport { Chart } from \"react-google-charts\";\r\nimport $ from 'jquery'\r\nimport moment from 'moment'\r\n\r\nconst DashboardAdmin = () => {\r\n    const token = localStorage.getItem('token')\r\n    const [users, setUsers] = useState(0)\r\n    const [cardEdition, setCardEdition] = useState([])\r\n    const [cardEditionLen, setCardEdtionLen] = useState(0)\r\n    const [card, setCard] = useState(0)\r\n    const [dataChart, setDataChart] = useState([])\r\n    const [threeCollection, setThreeCollection] = useState([])\r\n    const [logs, setLogs] = useState([])\r\n    const refLoading = useRef()\r\n    let {isAdmin} = useContext(AuthContext)\r\n    let {isAuth} = useContext(AuthContext)\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/logs`,configAxios)\r\n            .then(resp => {\r\n                setLogs(resp.data.logs)\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardeditions`,configAxios)\r\n            .then(resp => {\r\n                setCardEdtionLen(resp.data.edition.length)\r\n                setCardEdition(_.map(resp.data.edition, i => _.pick(i, 'id', 'edition')))\r\n                $(document).ready(function(){\r\n                    let dataTable = $('#dataTable').DataTable({\r\n                        \"order\": [[ 5, \"desc\" ]],\r\n                        \"responsive\": true,\r\n                        \"autoWidth\": false,\r\n                        \"lengthChange\": false,\r\n                        \"pageLength\": 10,\r\n                        \"bInfo\" : false,\r\n                        \"language\": {\r\n                            \"paginate\": {\r\n                              \"previous\": \"Anterior\",\r\n                              \"next\": \"Próxima\"\r\n                            },\r\n                            \"emptyTable\": \"Não existe dados para serem carregados\"\r\n                        }\r\n                    })\r\n    \r\n                    $('#searchBarTec').on('keyup change', function () {\r\n                        dataTable.search(this.value).draw();\r\n                    })\r\n\r\n                    refLoading.current.executeLoading()\r\n                })\r\n            })\r\n            .catch(err => {\r\n                toast.info(messages(err.response.data.message))\r\n                if(err.response.data.message == 'Token invalid'){\r\n                    setTimeout(() => {\r\n                        window.location.href = `${BASE_URL_LOGIN}`\r\n                    }, 5000);\r\n                }\r\n            })\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        const arrDataChart = []\r\n        axios.get(`${BASE_URL_BACK}/cards`,configAxios)\r\n        .then(resp => {\r\n            _.map(_.groupBy(resp.data, 'edition_id'), (card, index) => {\r\n                if(_.find(cardEdition, {'id': parseInt(index)}) != undefined){\r\n                    _.find(cardEdition, {'id': parseInt(index)})['qtd'] = card.length\r\n                }\r\n            })\r\n            _.map(cardEdition, (card) => {\r\n                if(_.has(card, 'qtd') == false){\r\n                    card['qtd'] = 0\r\n                }\r\n            })\r\n\r\n            cardEdition.map(card => {\r\n                arrDataChart.push([card.edition, card.qtd])\r\n            })\r\n\r\n            setDataChart(arrDataChart)\r\n        })\r\n    },[cardEdition])\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/users`,configAxios)\r\n            .then(resp => {\r\n                setUsers(resp.data.length)\r\n            })\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        if(!isAdmin){\r\n            return null\r\n        }else{\r\n            axios.get(`${BASE_URL_BACK}/cards`,configAxios)\r\n            .then(resp => {\r\n                setCard(resp.data.length)\r\n            })\r\n        }\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/collections`,configAxios)\r\n            .then(resp => {\r\n                const arrObj = _.map(_.groupBy(resp.data, 'user_name'), (n) => {\r\n                    const obj = _.pick(n[0], 'user_name')\r\n                    const sum = _.sumBy(n, (a) => {return a.quantity})\r\n                    obj['qtd'] = sum\r\n                    return obj\r\n                })\r\n\r\n                const arrOrderBy = _.orderBy(arrObj, ['qtd'], ['desc'])\r\n\r\n                const arrModify = []\r\n\r\n                for (let index = 0; index < 3; index++) {\r\n                    arrModify.push(_.valuesIn(arrOrderBy[index]))\r\n                }\r\n\r\n                setThreeCollection(arrModify)\r\n\r\n            })\r\n    },[])\r\n\r\n    const renderRow = () => {\r\n        return logs.map(line => (\r\n                <tr key={line.id}>\r\n                    <td>{line.user}</td>\r\n                    <td className=\"text-center\">{line.logType}</td>\r\n                    <td className=\"text-center\">{line.lineTableId}</td>\r\n                    <td className=\"text-center\">{line.tableName}</td>\r\n                    <td className=\"text-center\"><Link className='link_text_pen' to={`logview/${line.id}`}><i className=\"fas fa-eye click\"></i></Link></td>\r\n                    <td className=\"text-center\">{moment(line.dateTime).format('DD-MM-YYYY HH:mm:ss')}</td>\r\n                </tr>\r\n            )\r\n        )\r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n\r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n    \r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/cards' />\r\n        )\r\n    }else{\r\n        \r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return(\r\n        <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                <div className=\"col-12 mt-2\">\r\n                    <h1>Dashboard Admin</h1>\r\n                </div>\r\n                </div>\r\n\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <div className=\"col-lg-3 col-12\">\r\n                        <div className=\"info-box mb-3 bg-primary\">\r\n                        <div className=\"info-box-content\">\r\n                            <span className=\"info-box-number\"><h1 className=\"text-white text-bold\">{users}</h1></span>\r\n                            <span className=\"info-box-text\"><h4 className=\"text-white text-bold\">{users > 1 ? 'Usuários' : 'Usuário'}</h4></span>\r\n                        </div>\r\n                            <span className=\"info-box-icon\"><i className=\"fas fa-users iconDashboardAdmin mr-3\"></i></span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-3 col-12\">\r\n                        <div className=\"info-box mb-3 bg-success\">\r\n                        <div className=\"info-box-content\">\r\n                            <span className=\"info-box-number\"><h1 className=\"text-white text-bold\">{cardEditionLen}</h1></span>\r\n                            <span className=\"info-box-text\"><h4 className=\"text-white text-bold\">{cardEditionLen > 1 ? 'Edições' : 'Edição'}</h4></span>\r\n                        </div>\r\n                            <span className=\"info-box-icon\"><i className=\"fas fa-wallet iconDashboardAdmin mr-3\"></i></span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-3 col-12\">\r\n                        <div className=\"info-box mb-3 bg-warning\">\r\n                        <div className=\"info-box-content\">\r\n                            <span className=\"info-box-number\"><h1 className=\"text-white text-bold\">{card}</h1></span>\r\n                            <span className=\"info-box-text\"><h4 className=\"text-white text-bold\">{card > 1 ? 'Cartas' : 'Carta'}</h4></span>\r\n                        </div>\r\n                            <span className=\"info-box-icon\"><i className=\"fab fa-wizards-of-the-coast text-white iconDashboardAdmin mr-3\"></i></span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-6\">\r\n                        <div className=\"card card-danger\">\r\n                        <div className=\"card-header\">\r\n                            <h3 className=\"card-title\">Cartas por edição</h3>\r\n                            <div className=\"card-tools\">\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"chart\">\r\n                                <div>\r\n                                    <Chart\r\n                                    chartType=\"PieChart\"\r\n                                    loader={<div>Carregando o gráfico</div>}\r\n                                    data={[\r\n                                        ['Card Type', 'Number'],\r\n                                        ...dataChart\r\n                                    ]}\r\n                                    options={{\r\n                                        chartArea: { left: 0, top: 0, right: 0, bottom: 10 },\r\n                                        legend: {position: 'right', textStyle: {fontSize: 20}}, \r\n                                        is3D: true,  \r\n                                        legend: {\r\n                                            textStyle: {fontSize: 20},\r\n                                            scrollArrows: { inactiveColor: \"black\", activeColor: \"black\" },\r\n                                            pagingTextStyle: { color: 'black'},\r\n                                        }                                     \r\n                                    }}\r\n                                    rootProps={{ 'data-testid': '1' }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-6\">\r\n                    <div className=\"card card-success\">\r\n                    <div className=\"card-header\">\r\n                        <h3 className=\"card-title\">Top 3 maiores coleções</h3>\r\n                        <div className=\"card-tools\">\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <Chart\r\n                            chartType=\"ColumnChart\"\r\n                            loader={<div>Carregando o gráfico</div>}\r\n                            data={[\r\n                                ['Pessoa', 'Cards'],\r\n                                ...threeCollection                            \r\n                            ]}\r\n                            options={{\r\n                                legend: {\r\n                                    position: 'none',\r\n                                },\r\n                                colors: ['black'],\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <div className=\"input-group mb-3\">\r\n                            <input type=\"email\" className=\"form-control\" id=\"searchBarTec\" placeholder=\"Qual log você está procurando?\" />\r\n                            <div className=\"input-group-append\">\r\n                                <div className=\"input-group-text\">\r\n                                    <i className=\"fas fa-search\"></i>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <table id=\"dataTable\" className=\"table table-bordered table-responsive-sm table-responsive-md\">\r\n                                <thead className=\"text-center\">\r\n                                    <tr>\r\n                                        <th>Usuário</th>                                        \r\n                                        <th>Ação</th>                                        \r\n                                        <th>Linha da tabela</th>                                        \r\n                                        <th>Nome da tabela</th>\r\n                                        <th>Último valor</th>\r\n                                        <th>Data</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {renderRow()}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n                <Loading\r\n                ref={refLoading}\r\n                />   \r\n            <ToastContainer />         \r\n        </section>\r\n    )\r\n}\r\n\r\nexport default DashboardAdmin","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditUser\\index.js",["350","351","352","353","354","355","356","357","358","359"],"import React, { useEffect, useRef, useState, useContext } from 'react';\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport { useHistory, useParams, Link, Redirect } from 'react-router-dom'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {messages} from '../../utils/messages'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios';\r\nimport _ from 'lodash'\r\n\r\nconst EditUser = (props) => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    const {id} = props.match.params\r\n    const token = localStorage.getItem('token')\r\n    const [nameUser, setNameUser] = useState('')\r\n    const [emailUser, setEmailUser] = useState('')\r\n    const [permissionId, setPermissionId] = useState()\r\n    const history = useHistory()\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        axios.get(`${BASE_URL_BACK}/users`,configAxios)\r\n            .then(resp => {\r\n               const user = _.filter(resp.data, {'id': parseInt(id)})\r\n               setNameUser(user[0].name)\r\n               setEmailUser(user[0].email)\r\n               setPermissionId(user[0].permission)\r\n            })\r\n            .catch(err => {\r\n                toast.info(messages(err.response.data.error))\r\n                if(err.response.data.error == 'Token invalid'){\r\n                    setTimeout(() => {\r\n                        window.location.href = `${BASE_URL_LOGIN}`\r\n                    }, 5000);\r\n                }\r\n            })\r\n    },[id])\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n\r\n    const saveCard = (evt) => {\r\n        evt.preventDefault()\r\n\r\n        const objUser = {\r\n            name: nameUser,\r\n            email: emailUser,\r\n            permission: parseInt(permissionId)\r\n            \r\n        }\r\n\r\n        axios.put(`${BASE_URL_BACK}/users/${emailUser}`,objUser,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message == 'user updated'){\r\n                    toast.success(messages(resp.data.message))\r\n                    setTimeout(() => {\r\n                        history.push('/users')\r\n                    }, 5000);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }\r\n\r\n    const handlePermissionId = (evt) => {\r\n        setPermissionId(evt.target.value)\r\n    }\r\n\r\n    const renderPermission = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Edição da Carta</label>\r\n                <select className=\"form-control\" onChange={handlePermissionId}  required>\r\n                    {permissionId == 0 &&\r\n                        <>\r\n                            <option value='0'>Admin</option>\r\n                            <option value='1'>User</option>\r\n                        </>\r\n                    }\r\n\r\n                    {permissionId == 1 &&\r\n                        <>\r\n                            <option value='1'>User</option>\r\n                            <option value='0'>Admin</option>\r\n                        </>\r\n                    }\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const handleNameUser = (evt) =>{\r\n        setNameUser(evt.target.value)\r\n    }\r\n\r\n    const handleEmailUser = (evt) =>{\r\n        setEmailUser(evt.target.value)\r\n    }\r\n\r\n    return(\r\n        <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                <div className=\"col-12 mt-2 mb-3\">\r\n                    <h1>Edição de cartas</h1>\r\n                </div>\r\n                </div>\r\n\r\n                <form onSubmit={saveCard}>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-4 mb-5\">\r\n                        <div className=\"form-group\">\r\n                        <label>Usuário</label>\r\n                            <input type=\"text\" name='nameUser' value={nameUser} className=\"form-control\" onChange={handleNameUser} placeholder=\"Digite o seu usuário\" required />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-4 mb-5\">\r\n                        <div className=\"form-group\">\r\n                        <label>E-mail</label>\r\n                            <input type=\"text\" name='emailUser' value={emailUser} className=\"form-control\" onChange={handleEmailUser} placeholder=\"Digite seu e-mail\" required />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {renderPermission()}\r\n                    \r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <button type=\"submit\" className=\"btn btn-dark mr-2\">Atualizar</button>\r\n                        <Link className=\"btn btn-dark mr-2\" to='/users'>Voltar</Link>\r\n                    </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <ToastContainer />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default EditUser","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\Dashboard\\index.js",["360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408"],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\Loading\\index.js",["409","410","411"],"import React, { forwardRef, useImperativeHandle, useState } from 'react';\r\nimport './index.css'\r\n\r\nconst Loading = forwardRef((props, ref) => {\r\n\r\n    const [showLoading, setShowLoading] = useState(true)\r\n    \r\n    useImperativeHandle(\r\n        ref,\r\n        () => ({\r\n            executeLoading(){\r\n                {showLoading == false ? setShowLoading(true) : setShowLoading(false)}\r\n            }\r\n        })\r\n    )\r\n\r\n    if(showLoading == false){\r\n        return null\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n            <div className=\"d-flex justify-content-center loading\">\r\n                <div className=\"spinner-grow text-dark\" role=\"status\">\r\n                </div>\r\n                <div className=\"spinner-grow text-dark\" role=\"status\">\r\n                </div>\r\n                <div className=\"spinner-grow text-dark\" role=\"status\">\r\n                </div>\r\n                <div className=\"spinner-grow text-dark\" role=\"status\">\r\n                </div>\r\n                <div className=\"spinner-grow text-dark\" role=\"status\">\r\n                </div>\r\n                <div className=\"spinner-grow text-dark\" role=\"status\">\r\n                </div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-center loading-text\">\r\n                <h5>Carregando...</h5>\r\n            </div>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default Loading","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\Modals\\index.js",["412","413"],"import React, { useState, useImperativeHandle, forwardRef } from 'react';\r\nimport {Modal, Button} from 'react-bootstrap'\r\n\r\nconst Modals = forwardRef((props, ref) => {\r\n\r\n    const [showModal, setShow] = useState(false)\r\n    const handleClose = () => setShow(false)\r\n    \r\n\r\n    useImperativeHandle(\r\n        ref,\r\n        () => ({\r\n            openModal () {\r\n                {showModal == true ? setShow(false) : setShow(true)}\r\n            }\r\n        })\r\n    )\r\n\r\n    return(\r\n        <>\r\n            <div className=\"d-flex align-items-center justify-content-center\">\r\n            </div>\r\n            <Modal show={showModal} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>{props.title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>{props.body}</Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"btn btn-dark\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"btn btn-dark\" onClick={props.deleteItem}>\r\n                    {props.nameButton}\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default Modals","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\ConfigUser\\index.js",["414","415","416","417","418","419","420"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport jwt from 'jsonwebtoken'\r\nimport {useHistory, Link, Redirect} from 'react-router-dom'\r\nimport {BASE_URL_BACK, BASE_URL_PHOTO, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {messages} from '../../utils/messages'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios';\r\nimport _ from 'lodash'\r\n\r\nconst ConfigUser = () => {\r\n    \r\n    let {isAuth} = useContext(AuthContext)\r\n    const token = localStorage.getItem('token')\r\n    const {id} = jwt.decode(token) || 'error'\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/users`,configAxios)\r\n        .then(resp => {\r\n            const user = _.filter(resp.data, {'id': id})\r\n            const name = user[0].name\r\n            const email = user[0].email\r\n            setName(name)\r\n            setEmail(email)\r\n        })\r\n        .catch(err => {\r\n            if(token != 'sair'){\r\n                toast.info(messages(err.response.data.message))\r\n            }\r\n            if(err.response.data.message == 'Token invalid'){\r\n                setTimeout(() => {\r\n                    window.location.href = `${BASE_URL_LOGIN}`\r\n                }, 5000);\r\n            }\r\n        })\r\n    },[id])\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    const changeName = evt => {\r\n        setName(evt.target.value)\r\n    }\r\n\r\n    const changeNameFile = evt => {\r\n        const label = document.querySelector('.custom-file-label')\r\n        label.innerHTML = evt.target.files[0].name\r\n    }\r\n\r\n    const saveUser = (evt) => {\r\n        evt.preventDefault()\r\n        if(evt.target[1].files[0]){\r\n            const formData = new FormData()\r\n            formData.append('img', evt.target[1].files[0])\r\n\r\n            axios.post(`${BASE_URL_BACK}/upload`,formData,configAxios)\r\n            .then(resp => {\r\n                    const objUser = {\r\n                        name,\r\n                        photo: `${BASE_URL_PHOTO}/${resp.data.filename}`,                    \r\n                    }\r\n                    axios.put(`${BASE_URL_BACK}/users/${email}`,objUser,configAxios)\r\n                    .then(resp => {\r\n                        toast.success(messages(resp.data.message))\r\n                        setTimeout(() => {\r\n                            document.location.reload()\r\n                        }, 5000);\r\n                    })\r\n                    .catch(err => {\r\n                        //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                        toast.info(messages(err.response.data.message))\r\n                    })\r\n                })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n        }else{\r\n            const objUser = {\r\n                name                 \r\n            }\r\n            axios.put(`${BASE_URL_BACK}/users/${email}`,objUser,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    document.location.reload()\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n        }        \r\n\r\n    }\r\n\r\n    return(\r\n        <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                <div className=\"col-12 mt-2 mb-3\">\r\n                    <h1>Configurações do Usuário</h1>\r\n                </div>\r\n                </div>\r\n\r\n                <form onSubmit={saveUser}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-4 mb-5\">\r\n                            <div className=\"form-group\">\r\n                            <label>Nome</label>\r\n                                <input type=\"text\" name='nameUser' value={name} onChange={changeName} className=\"form-control\" placeholder=\"Digite o seu nome\" required />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-4 mb-5\">\r\n                            <div className=\"form-group\">\r\n                                <label>Foto do avatar</label>\r\n                                <div className=\"custom-file\">\r\n                                    <input type=\"file\" onChange={changeNameFile} className=\"custom-file-input\" name=\"img\"/>\r\n                                    <label className=\"custom-file-label\">Escolha a foto</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <button type=\"submit\" className=\"btn btn-dark mr-2\">Alterar</button>\r\n                            <Link className=\"btn btn-dark mr-2\" to='/dashboard'>Voltar</Link>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <ToastContainer />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ConfigUser","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\ColorsCard\\index.js",["421","422","423","424","425","426","427","428","429"],"import React, { useEffect, useContext, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../../utils/auth'\r\nimport { BASE_URL_BACK, BASE_URL_LOGIN } from '../../utils/variaveisAmbiente'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport {messages} from '../../utils/messages'\r\nimport Loading from '../Loading'\r\nimport Modals from '../Modals'\r\nimport $ from 'jquery'\r\n\r\nconst ColorsCard = () => {\r\n    const [data, setData] = useState([])\r\n    const [lineId, setLineId] = useState()\r\n    const token = localStorage.getItem('token')\r\n    const refLoading = useRef()\r\n    const refModal = useRef()\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!isAdmin){\r\n            return null\r\n        }\r\n        axios.get(`${BASE_URL_BACK}/cardcolors`, configAxios)\r\n        .then(resp => {\r\n            setData(resp.data.color)\r\n            $(document).ready(function(){\r\n                let dataTable = $('#dataTable').DataTable({\r\n                    \"responsive\": true,\r\n                    \"autoWidth\": false,\r\n                    \"lengthChange\": false,\r\n                    \"pageLength\": 10,\r\n                    \"bInfo\" : false,\r\n                    \"language\": {\r\n                        \"paginate\": {\r\n                          \"previous\": \"Anterior\",\r\n                          \"next\": \"Próxima\"\r\n                        },\r\n                        \"emptyTable\": \"Não existe dados para serem carregados\"\r\n                    }\r\n                })\r\n\r\n                $('#searchBarTec').on('keyup change', function () {\r\n                    dataTable.search(this.value).draw();\r\n                })\r\n\r\n                refLoading.current.executeLoading()\r\n            })\r\n        })\r\n        .catch(err => {\r\n            toast.info(messages(err.response.data.message))\r\n            if(err.response.data.message == 'Token invalid'){\r\n                setTimeout(() => {\r\n                    window.location.href = `${BASE_URL_LOGIN}`\r\n                }, 5000);\r\n            }\r\n        })\r\n    },[isAdmin])\r\n\r\n    const renderRow = () => {\r\n        return data.map(line => (\r\n                <tr key={line.id}>\r\n                    <td>{line.color}</td>\r\n                    <td className=\"text-center\"><Link className='link_text_pen' to={`editcolorscard/${line.id}`}><i className=\"fas fa-pencil-alt click\"></i></Link></td>\r\n                    <td className=\"text-center\"><i className=\"fas fa-trash-alt click\" onClick={() => openModal(line.id)}></i></td>\r\n                </tr>\r\n            )\r\n        )\r\n    }\r\n\r\n    const openModal = (id) => {\r\n        setLineId(id)\r\n        refModal.current.openModal()\r\n    }\r\n\r\n    const deleteItem = () => {\r\n        axios.delete(`${BASE_URL_BACK}/cardcolors/${lineId}`,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message == 'color deleted'){\r\n                    toast.success(messages(resp.data.message))\r\n                    const filtered = data.filter(color => {\r\n                        return color.id != lineId\r\n                    })            \r\n                    setData(filtered)\r\n                    refModal.current.openModal()\r\n                }\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }\r\n\r\n    if (isAuth == false) {\r\n        window.location.href = `${BASE_URL_LOGIN}`\r\n    }\r\n\r\n    if (isAuth == false) {\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/cards' />\r\n        )\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-2\">\r\n                            <h1>Cores das cartas</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-9\">\r\n                            <div className=\"input-group mb-3\">\r\n                                <input type=\"email\" className=\"form-control\" id=\"searchBarTec\" placeholder=\"Qual cor você está procurando?\" />\r\n                                <div className=\"input-group-append\">\r\n                                    <div className=\"input-group-text\">\r\n                                        <i className=\"fas fa-search\"></i>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-3 mb-2 mr-0\">\r\n                            <button type=\"button\" className=\"btn btn-dark mr-1\"><Link className='link_text' to='/addcolorscard'>Adicionar</Link></button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <table id=\"dataTable\" className=\"table table-bordered table-responsive-sm table-responsive-md\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Cor</th>\r\n                                        <th className=\"text-center\">Editar</th>\r\n                                        <th className=\"text-center\">Remover</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {renderRow()}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <ToastContainer />\r\n            <Modals\r\n                title='Exclusão de card'\r\n                body='Deseja realmente excluir esta cor? Se excluir, todo os cards desta cor serão removidos automaticamente'\r\n                nameButton='Excluir'\r\n                deleteItem={deleteItem}\r\n                ref={refModal}\r\n            />\r\n            <Loading\r\n                ref={refLoading}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ColorsCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddColorsCard\\index.js",["430","431","432","433"],"import React, { useState, useContext } from 'react';\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios'\r\nimport {messages} from '../../utils/messages'\r\n\r\nconst AddColorsCard = () => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [color, setColor] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const history = useHistory()\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    const changeColor = evt => {\r\n        setColor(evt.target.value)\r\n    }\r\n\r\n    const saveColor = evt => {\r\n        evt.preventDefault()\r\n\r\n        const objColorCard ={\r\n            color\r\n        }\r\n\r\n        axios.post(`${BASE_URL_BACK}/cardcolors`,objColorCard,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/colors')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                console.log({err});\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n        \r\n    }\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/colors' />\r\n        )\r\n    }else{\r\n        \r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-3\">\r\n                            <h1>Cadastrar Cores</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <form onSubmit={saveColor}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Nome da cor</label>\r\n                                    <input type=\"text\" className=\"form-control\" value={color} placeholder=\"Digite a cor\" onChange={changeColor} required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <button type=\"submit\" className=\"btn btn-dark mr-2\">Cadastrar</button>\r\n                                <Link className=\"btn btn-dark mr-2\" to='/colors'>Voltar</Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <ToastContainer />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddColorsCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditColorsCard\\index.js",["434","435","436","437","438"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios'\r\nimport {messages} from '../../utils/messages'\r\nimport _ from 'lodash'\r\n\r\nconst EditColorsCard = (props) => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [color, setColor] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const history = useHistory()\r\n    const {id} = props.match.params\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardcolors`,configAxios)\r\n            .then(resp => {\r\n                // console.log(resp.data.color);\r\n                const colorFilter = _.filter(resp.data.color, {'id': parseInt(id)})\r\n                setColor(colorFilter[0].color)\r\n            })\r\n    },[id])\r\n\r\n    const changeColor = evt => {\r\n        setColor(evt.target.value)\r\n    }\r\n\r\n    const saveColor = evt => {\r\n        evt.preventDefault()\r\n\r\n        const objColorCard ={\r\n            color\r\n        }\r\n\r\n        axios.put(`${BASE_URL_BACK}/cardcolors/${id}`,objColorCard,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/colors')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                console.log({err});\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n        \r\n    }\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/cards' />\r\n        )\r\n    }else{\r\n        \r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-3\">\r\n                            <h1>Editar cor</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <form onSubmit={saveColor}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Cor</label>\r\n                                    <input type=\"text\" className=\"form-control\" value={color} placeholder=\"Digite a cor\" onChange={changeColor} required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <button type=\"submit\" className=\"btn btn-dark mr-2\">Alterar</button>\r\n                                <Link className=\"btn btn-dark mr-2\" to='/colors'>Voltar</Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <ToastContainer />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditColorsCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\LanguageCard\\index.js",["439","440","441","442","443","444","445","446","447"],"import React, { useEffect, useContext, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../../utils/auth'\r\nimport { BASE_URL_BACK, BASE_URL_LOGIN } from '../../utils/variaveisAmbiente'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport {messages} from '../../utils/messages'\r\nimport Loading from '../Loading'\r\nimport Modals from '../Modals'\r\nimport $ from 'jquery'\r\n\r\nconst LanguageCard = () => {\r\n    const [data, setData] = useState([])\r\n    const [lineId, setLineId] = useState()\r\n    const token = localStorage.getItem('token')\r\n    const refLoading = useRef()\r\n    const refModal = useRef()\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!isAdmin){\r\n            return null\r\n        }\r\n        axios.get(`${BASE_URL_BACK}/cardlanguages`, configAxios)\r\n        .then(resp => {\r\n            setData(resp.data.language)\r\n            $(document).ready(function(){\r\n                let dataTable = $('#dataTable').DataTable({\r\n                    \"responsive\": true,\r\n                    \"autoWidth\": false,\r\n                    \"lengthChange\": false,\r\n                    \"pageLength\": 10,\r\n                    \"bInfo\" : false,\r\n                    \"language\": {\r\n                        \"paginate\": {\r\n                          \"previous\": \"Anterior\",\r\n                          \"next\": \"Próxima\"\r\n                        },\r\n                        \"emptyTable\": \"Não existe dados para serem carregados\"\r\n                    }\r\n                })\r\n\r\n                $('#searchBarTec').on('keyup change', function () {\r\n                    dataTable.search(this.value).draw();\r\n                })\r\n\r\n                refLoading.current.executeLoading()\r\n            })\r\n        })\r\n        .catch(err => {\r\n            toast.info(messages(err.response.data.message))\r\n            if(err.response.data.message == 'Token invalid'){\r\n                setTimeout(() => {\r\n                    window.location.href = `${BASE_URL_LOGIN}`\r\n                }, 5000);\r\n            }\r\n        })\r\n    },[isAdmin])\r\n\r\n    const renderRow = () => {\r\n        return data.map(line => (\r\n                <tr key={line.id}>\r\n                    <td>{line.language}</td>\r\n                    <td className=\"text-center\"><Link className='link_text_pen' to={`editlanguagescard/${line.id}`}><i className=\"fas fa-pencil-alt click\"></i></Link></td>\r\n                    <td className=\"text-center\"><i className=\"fas fa-trash-alt click\" onClick={() => openModal(line.id)}></i></td>\r\n                </tr>\r\n            )\r\n        )\r\n    }\r\n\r\n    const openModal = (id) => {\r\n        setLineId(id)\r\n        refModal.current.openModal()\r\n    }\r\n\r\n    const deleteItem = () => {\r\n        axios.delete(`${BASE_URL_BACK}/cardlanguages/${lineId}`,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message == 'language deleted'){\r\n                    toast.success(messages(resp.data.message))\r\n                    const filtered = data.filter(language => {\r\n                        return language.id != lineId\r\n                    })            \r\n                    setData(filtered)\r\n                    refModal.current.openModal()\r\n                }\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }\r\n\r\n    if (isAuth == false) {\r\n        window.location.href = `${BASE_URL_LOGIN}`\r\n    }\r\n\r\n    if (isAuth == false) {\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/cards' />\r\n        )\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-2\">\r\n                            <h1>Idiomas das cartas</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-9\">\r\n                            <div className=\"input-group mb-3\">\r\n                                <input type=\"email\" className=\"form-control\" id=\"searchBarTec\" placeholder=\"Qual idioma você está procurando?\" />\r\n                                <div className=\"input-group-append\">\r\n                                    <div className=\"input-group-text\">\r\n                                        <i className=\"fas fa-search\"></i>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-3 mb-2 mr-0\">\r\n                            <button type=\"button\" className=\"btn btn-dark mr-1\"><Link className='link_text' to='/addlanguagescard'>Adicionar</Link></button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <table id=\"dataTable\" className=\"table table-bordered table-responsive-sm table-responsive-md\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Linguagem</th>\r\n                                        <th className=\"text-center\">Editar</th>\r\n                                        <th className=\"text-center\">Remover</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {renderRow()}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <ToastContainer />\r\n            <Modals\r\n                title='Exclusão de card'\r\n                body='Deseja realmente excluir este idioma? Se excluir, todo os cards com este idioma serão removidos automaticamente'\r\n                nameButton='Excluir'\r\n                deleteItem={deleteItem}\r\n                ref={refModal}\r\n            />\r\n            <Loading\r\n                ref={refLoading}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LanguageCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddLanguagesCard\\index.js",["448","449","450","451"],"import React, { useState, useContext } from 'react';\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios'\r\nimport {messages} from '../../utils/messages'\r\n\r\nconst AddLanguagesCard = () => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [language, setLanguage] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const history = useHistory()\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    const changeLanguage = evt => {\r\n        setLanguage(evt.target.value)\r\n    }\r\n\r\n    const saveLanguage = evt => {\r\n        evt.preventDefault()\r\n\r\n        const objLanguage ={\r\n            language\r\n        }\r\n\r\n        axios.post(`${BASE_URL_BACK}/cardlanguages`,objLanguage,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/languages')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                console.log({err});\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n        \r\n    }\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/cards' />\r\n        )\r\n    }else{\r\n        \r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-3\">\r\n                            <h1>Cadastrar Idiomas</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <form onSubmit={saveLanguage}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Nome da idioma</label>\r\n                                    <input type=\"text\" className=\"form-control\" value={language} placeholder=\"Digite o idioma\" onChange={changeLanguage} required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <button type=\"submit\" className=\"btn btn-dark mr-2\">Cadastrar</button>\r\n                                <Link className=\"btn btn-dark mr-2\" to='/languages'>Voltar</Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <ToastContainer />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddLanguagesCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditLanguagesCard\\index.js",["452","453","454","455","456"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios'\r\nimport {messages} from '../../utils/messages'\r\nimport _ from 'lodash'\r\n\r\nconst EditLanguagesCard = (props) => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [language, setLanguage] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const history = useHistory()\r\n    const {id} = props.match.params\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardlanguages`,configAxios)\r\n            .then(resp => {\r\n                const colorFilter = _.filter(resp.data.language, {'id': parseInt(id)})\r\n                setLanguage(colorFilter[0].language)\r\n            })\r\n    },[id])\r\n\r\n    const changeColor = evt => {\r\n        setLanguage(evt.target.value)\r\n    }\r\n\r\n    const saveColor = evt => {\r\n        evt.preventDefault()\r\n\r\n        const objLanguage ={\r\n            language \r\n        }\r\n\r\n        axios.put(`${BASE_URL_BACK}/cardlanguages/${id}`,objLanguage,configAxios)\r\n            .then(resp => {\r\n                console.log(resp.data);\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/languages')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                console.log({err});\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n        \r\n    }\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/cards' />\r\n        )\r\n    }else{\r\n        \r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-3\">\r\n                            <h1>Editar linguagem</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <form onSubmit={saveColor}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Linguagem</label>\r\n                                    <input type=\"text\" className=\"form-control\" value={language} placeholder=\"Digite a linguagem\" onChange={changeColor} required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <button type=\"submit\" className=\"btn btn-dark mr-2\">Alterar</button>\r\n                                <Link className=\"btn btn-dark mr-2\" to='/languages'>Voltar</Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <ToastContainer />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditLanguagesCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddQualityCard\\index.js",["457","458","459","460"],"import React, { useState, useContext } from 'react';\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios'\r\nimport {messages} from '../../utils/messages'\r\n\r\nconst AddQualityCard = () => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [quality, setQuality] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const history = useHistory()\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    const changeQuality = evt => {\r\n        setQuality(evt.target.value)\r\n    }\r\n\r\n    const saveQuality = evt => {\r\n        evt.preventDefault()\r\n\r\n        const objQuality ={\r\n            quality\r\n        }\r\n\r\n        axios.post(`${BASE_URL_BACK}/cardqualities`,objQuality,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/qualities')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                console.log({err});\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n        \r\n    }\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/cards' />\r\n        )\r\n    }else{\r\n        \r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-3\">\r\n                            <h1>Cadastrar Qualidade</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <form onSubmit={saveQuality}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Nome da qualidade</label>\r\n                                    <input type=\"text\" className=\"form-control\" value={quality} placeholder=\"Digite a qualidade\" onChange={changeQuality} required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <button type=\"submit\" className=\"btn btn-dark mr-2\">Cadastrar</button>\r\n                                <Link className=\"btn btn-dark mr-2\" to='/languages'>Voltar</Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <ToastContainer />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddQualityCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditQualitiesCard\\index.js",["461","462","463","464","465"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios'\r\nimport {messages} from '../../utils/messages'\r\nimport _ from 'lodash'\r\n\r\nconst EditQualitiesCard = (props) => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [quality, setQuality] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const history = useHistory()\r\n    const {id} = props.match.params\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardqualities`,configAxios)\r\n            .then(resp => {\r\n                const colorFilter = _.filter(resp.data.quality, {'id': parseInt(id)})\r\n                setQuality(colorFilter[0].quality)\r\n            })\r\n    },[id])\r\n\r\n    const changeQuality = evt => {\r\n        setQuality(evt.target.value)\r\n    }\r\n\r\n    const saveColor = evt => {\r\n        evt.preventDefault()\r\n\r\n        const objQuality ={\r\n            quality \r\n        }\r\n\r\n        axios.put(`${BASE_URL_BACK}/cardqualities/${id}`,objQuality,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/qualities')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n        \r\n    }\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/cards' />\r\n        )\r\n    }else{\r\n        \r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-3\">\r\n                            <h1>Qualidade</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <form onSubmit={saveColor}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Qualidade</label>\r\n                                    <input type=\"text\" className=\"form-control\" value={quality} placeholder=\"Digite a qualidade\" onChange={changeQuality} required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <button type=\"submit\" className=\"btn btn-dark mr-2\">Alterar</button>\r\n                                <Link className=\"btn btn-dark mr-2\" to='/languages'>Voltar</Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <ToastContainer />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditQualitiesCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\QualitiesCard\\index.js",["466","467","468","469","470","471","472","473","474"],"import React, { useEffect, useContext, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../../utils/auth'\r\nimport { BASE_URL_BACK, BASE_URL_LOGIN } from '../../utils/variaveisAmbiente'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport {messages} from '../../utils/messages'\r\nimport Loading from '../Loading'\r\nimport Modals from '../Modals'\r\nimport $ from 'jquery'\r\n\r\nconst QualitiesCard = () => {\r\n    const [data, setData] = useState([])\r\n    const [lineId, setLineId] = useState()\r\n    const token = localStorage.getItem('token')\r\n    const refLoading = useRef()\r\n    const refModal = useRef()\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!isAdmin){\r\n            return null\r\n        }\r\n        axios.get(`${BASE_URL_BACK}/cardqualities`, configAxios)\r\n        .then(resp => {\r\n            setData(resp.data.quality)\r\n            $(document).ready(function(){\r\n                let dataTable = $('#dataTable').DataTable({\r\n                    \"responsive\": true,\r\n                    \"autoWidth\": false,\r\n                    \"lengthChange\": false,\r\n                    \"pageLength\": 10,\r\n                    \"bInfo\" : false,\r\n                    \"language\": {\r\n                        \"paginate\": {\r\n                          \"previous\": \"Anterior\",\r\n                          \"next\": \"Próxima\"\r\n                        },\r\n                        \"emptyTable\": \"Não existe dados para serem carregados\"\r\n                    }\r\n                })\r\n\r\n                $('#searchBarTec').on('keyup change', function () {\r\n                    dataTable.search(this.value).draw();\r\n                })\r\n\r\n                refLoading.current.executeLoading()\r\n            })\r\n        })\r\n        .catch(err => {\r\n            toast.info(messages(err.response.data.message))\r\n            if(err.response.data.message == 'Token invalid'){\r\n                setTimeout(() => {\r\n                    window.location.href = `${BASE_URL_LOGIN}`\r\n                }, 5000);\r\n            }\r\n        })\r\n    },[isAdmin])\r\n\r\n    const renderRow = () => {\r\n        return data.map(line => (\r\n                <tr key={line.id}>\r\n                    <td>{line.quality}</td>\r\n                    <td className=\"text-center\"><Link className='link_text_pen' to={`editqualitiescard/${line.id}`}><i className=\"fas fa-pencil-alt click\"></i></Link></td>\r\n                    <td className=\"text-center\"><i className=\"fas fa-trash-alt click\" onClick={() => openModal(line.id)}></i></td>\r\n                </tr>\r\n            )\r\n        )\r\n    }\r\n\r\n    const openModal = (id) => {\r\n        setLineId(id)\r\n        refModal.current.openModal()\r\n    }\r\n\r\n    const deleteItem = () => {\r\n        axios.delete(`${BASE_URL_BACK}/cardqualities/${lineId}`,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message == 'quality deleted'){\r\n                    toast.success(messages(resp.data.message))\r\n                    const filtered = data.filter(qualities => {\r\n                        return qualities.id != lineId\r\n                    })            \r\n                    setData(filtered)\r\n                    refModal.current.openModal()\r\n                }\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }\r\n\r\n    if (isAuth == false) {\r\n        window.location.href = `${BASE_URL_LOGIN}`\r\n    }\r\n\r\n    if (isAuth == false) {\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/cards' />\r\n        )\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-2\">\r\n                            <h1>Qualidade das cartas</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-9\">\r\n                            <div className=\"input-group mb-3\">\r\n                                <input type=\"email\" className=\"form-control\" id=\"searchBarTec\" placeholder=\"Qual qualidade você está procurando?\" />\r\n                                <div className=\"input-group-append\">\r\n                                    <div className=\"input-group-text\">\r\n                                        <i className=\"fas fa-search\"></i>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-3 mb-2 mr-0\">\r\n                            <button type=\"button\" className=\"btn btn-dark mr-1\"><Link className='link_text' to='/addqualitiescard'>Adicionar</Link></button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <table id=\"dataTable\" className=\"table table-bordered table-responsive-sm table-responsive-md\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Qualitdade</th>\r\n                                        <th className=\"text-center\">Editar</th>\r\n                                        <th className=\"text-center\">Remover</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {renderRow()}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <ToastContainer />\r\n            <Modals\r\n                title='Exclusão de card'\r\n                body='Deseja realmente excluir esta qualidade? Se excluir, todo os cards com esta qualidade serão removidos automaticamente'\r\n                nameButton='Excluir'\r\n                deleteItem={deleteItem}\r\n                ref={refModal}\r\n            />\r\n            <Loading\r\n                ref={refLoading}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QualitiesCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\RaritiesCard\\index.js",["475","476","477","478","479","480","481","482","483"],"import React, { useEffect, useContext, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../../utils/auth'\r\nimport { BASE_URL_BACK, BASE_URL_LOGIN } from '../../utils/variaveisAmbiente'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport {messages} from '../../utils/messages'\r\nimport Loading from '../Loading'\r\nimport Modals from '../Modals'\r\nimport $ from 'jquery'\r\n\r\nconst RaritiesCard = () => {\r\n    const [data, setData] = useState([])\r\n    const [lineId, setLineId] = useState()\r\n    const token = localStorage.getItem('token')\r\n    const refLoading = useRef()\r\n    const refModal = useRef()\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!isAdmin){\r\n            return null\r\n        }\r\n        axios.get(`${BASE_URL_BACK}/cardrarities`, configAxios)\r\n        .then(resp => {\r\n            setData(resp.data.rarity)\r\n            $(document).ready(function(){\r\n                let dataTable = $('#dataTable').DataTable({\r\n                    \"responsive\": true,\r\n                    \"autoWidth\": false,\r\n                    \"lengthChange\": false,\r\n                    \"pageLength\": 10,\r\n                    \"bInfo\" : false,\r\n                    \"language\": {\r\n                        \"paginate\": {\r\n                          \"previous\": \"Anterior\",\r\n                          \"next\": \"Próxima\"\r\n                        },\r\n                        \"emptyTable\": \"Não existe dados para serem carregados\"\r\n                    }\r\n                })\r\n\r\n                $('#searchBarTec').on('keyup change', function () {\r\n                    dataTable.search(this.value).draw();\r\n                })\r\n\r\n                refLoading.current.executeLoading()\r\n            })\r\n        })\r\n        .catch(err => {\r\n            toast.info(messages(err.response.data.message))\r\n            if(err.response.data.message == 'Token invalid'){\r\n                setTimeout(() => {\r\n                    window.location.href = `${BASE_URL_LOGIN}`\r\n                }, 5000);\r\n            }\r\n        })\r\n    },[isAdmin])\r\n\r\n    const renderRow = () => {\r\n        return data.map(line => (\r\n                <tr key={line.id}>\r\n                    <td>{line.rarity}</td>\r\n                    <td className=\"text-center\"><Link className='link_text_pen' to={`editraritiescard/${line.id}`}><i className=\"fas fa-pencil-alt click\"></i></Link></td>\r\n                    <td className=\"text-center\"><i className=\"fas fa-trash-alt click\" onClick={() => openModal(line.id)}></i></td>\r\n                </tr>\r\n            )\r\n        )\r\n    }\r\n\r\n    const openModal = (id) => {\r\n        setLineId(id)\r\n        refModal.current.openModal()\r\n    }\r\n\r\n    const deleteItem = () => {\r\n        axios.delete(`${BASE_URL_BACK}/cardrarities/${lineId}`,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message == 'rarity deleted'){\r\n                    toast.success(messages(resp.data.message))\r\n                    const filtered = data.filter(rarity => {\r\n                        return rarity.id != lineId\r\n                    })            \r\n                    setData(filtered)\r\n                    refModal.current.openModal()\r\n                }\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }\r\n\r\n    if (isAuth == false) {\r\n        window.location.href = `${BASE_URL_LOGIN}`\r\n    }\r\n\r\n    if (isAuth == false) {\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/cards' />\r\n        )\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-2\">\r\n                            <h1>Raridade das cartas</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-9\">\r\n                            <div className=\"input-group mb-3\">\r\n                                <input type=\"email\" className=\"form-control\" id=\"searchBarTec\" placeholder=\"Qual raridade você está procurando?\" />\r\n                                <div className=\"input-group-append\">\r\n                                    <div className=\"input-group-text\">\r\n                                        <i className=\"fas fa-search\"></i>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-3 mb-2 mr-0\">\r\n                            <button type=\"button\" className=\"btn btn-dark mr-1\"><Link className='link_text' to='/addraritiescard'>Adicionar</Link></button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <table id=\"dataTable\" className=\"table table-bordered table-responsive-sm table-responsive-md\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Qualitdade</th>\r\n                                        <th className=\"text-center\">Editar</th>\r\n                                        <th className=\"text-center\">Remover</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {renderRow()}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <ToastContainer />\r\n            <Modals\r\n                title='Exclusão de card'\r\n                body='Deseja realmente excluir esta raridade? Se excluir, todo os cards com esta raridade serão removidos automaticamente'\r\n                nameButton='Excluir'\r\n                deleteItem={deleteItem}\r\n                ref={refModal}\r\n            />\r\n            <Loading\r\n                ref={refLoading}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RaritiesCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddRarityCard\\index.js",["484","485","486","487"],"import React, { useState, useContext } from 'react';\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios'\r\nimport {messages} from '../../utils/messages'\r\n\r\nconst AddRarityCard = () => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [rarity, setRarity] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const history = useHistory()\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    const changeRarity = evt => {\r\n        setRarity(evt.target.value)\r\n    }\r\n\r\n    const saveRarity = evt => {\r\n        evt.preventDefault()\r\n\r\n        const objRarity ={\r\n            rarity\r\n        }\r\n\r\n        axios.post(`${BASE_URL_BACK}/cardrarities`,objRarity,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/rarities')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                console.log({err});\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n        \r\n    }\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/cards' />\r\n        )\r\n    }else{\r\n        \r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-3\">\r\n                            <h1>Cadastrar Raridade</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <form onSubmit={saveRarity}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Nome da Raridade</label>\r\n                                    <input type=\"text\" className=\"form-control\" value={rarity} placeholder=\"Digite a raridade\" onChange={changeRarity} required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <button type=\"submit\" className=\"btn btn-dark mr-2\">Cadastrar</button>\r\n                                <Link className=\"btn btn-dark mr-2\" to='/rarities'>Voltar</Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <ToastContainer />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddRarityCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditRaritiesCard\\index.js",["488","489","490","491","492"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios'\r\nimport {messages} from '../../utils/messages'\r\nimport _ from 'lodash'\r\n\r\nconst EditRaritiesCard = (props) => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [rarity, setRarity] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const history = useHistory()\r\n    const {id} = props.match.params\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardrarities`,configAxios)\r\n            .then(resp => {\r\n                const colorFilter = _.filter(resp.data.rarity, {'id': parseInt(id)})\r\n                setRarity(colorFilter[0].rarity)\r\n            })\r\n    },[id])\r\n\r\n    const changeRarity = evt => {\r\n        setRarity(evt.target.value)\r\n    }\r\n\r\n    const saveRarity = evt => {\r\n        evt.preventDefault()\r\n\r\n        const objRarity ={\r\n            rarity \r\n        }\r\n\r\n        axios.put(`${BASE_URL_BACK}/cardrarities/${id}`,objRarity,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/rarities')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n        \r\n    }\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/cards' />\r\n        )\r\n    }else{\r\n        \r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-3\">\r\n                            <h1>Raridade</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <form onSubmit={saveRarity}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Raridade</label>\r\n                                    <input type=\"text\" className=\"form-control\" value={rarity} placeholder=\"Digite a raridade\" onChange={changeRarity} required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <button type=\"submit\" className=\"btn btn-dark mr-2\">Alterar</button>\r\n                                <Link className=\"btn btn-dark mr-2\" to='/rarities'>Voltar</Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <ToastContainer />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditRaritiesCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\TypesCard\\index.js",["493","494","495","496","497","498","499","500","501"],"import React, { useEffect, useContext, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../../utils/auth'\r\nimport { BASE_URL_BACK, BASE_URL_LOGIN } from '../../utils/variaveisAmbiente'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport {messages} from '../../utils/messages'\r\nimport Loading from '../Loading'\r\nimport Modals from '../Modals'\r\nimport $ from 'jquery'\r\n\r\nconst TypesCard = () => {\r\n    const [data, setData] = useState([])\r\n    const [lineId, setLineId] = useState()\r\n    const token = localStorage.getItem('token')\r\n    const refLoading = useRef()\r\n    const refModal = useRef()\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!isAdmin){\r\n            return null\r\n        }\r\n        axios.get(`${BASE_URL_BACK}/cardtypes`, configAxios)\r\n        .then(resp => {\r\n            setData(resp.data.type)\r\n            $(document).ready(function(){\r\n                let dataTable = $('#dataTable').DataTable({\r\n                    \"responsive\": true,\r\n                    \"autoWidth\": false,\r\n                    \"lengthChange\": false,\r\n                    \"pageLength\": 10,\r\n                    \"bInfo\" : false,\r\n                    \"language\": {\r\n                        \"paginate\": {\r\n                          \"previous\": \"Anterior\",\r\n                          \"next\": \"Próxima\"\r\n                        },\r\n                        \"emptyTable\": \"Não existe dados para serem carregados\"\r\n                    }\r\n                })\r\n\r\n                $('#searchBarTec').on('keyup change', function () {\r\n                    dataTable.search(this.value).draw();\r\n                })\r\n\r\n                refLoading.current.executeLoading()\r\n            })\r\n        })\r\n        .catch(err => {\r\n            toast.info(messages(err.response.data.message))\r\n            if(err.response.data.message == 'Token invalid'){\r\n                setTimeout(() => {\r\n                    window.location.href = `${BASE_URL_LOGIN}`\r\n                }, 5000);\r\n            }\r\n        })\r\n    },[isAdmin])\r\n\r\n    const renderRow = () => {\r\n        return data.map(line => (\r\n                <tr key={line.id}>\r\n                    <td>{line.type}</td>\r\n                    <td className=\"text-center\"><Link className='link_text_pen' to={`edittypescard/${line.id}`}><i className=\"fas fa-pencil-alt click\"></i></Link></td>\r\n                    <td className=\"text-center\"><i className=\"fas fa-trash-alt click\" onClick={() => openModal(line.id)}></i></td>\r\n                </tr>\r\n            )\r\n        )\r\n    }\r\n\r\n    const openModal = (id) => {\r\n        setLineId(id)\r\n        refModal.current.openModal()\r\n    }\r\n\r\n    const deleteItem = () => {\r\n        axios.delete(`${BASE_URL_BACK}/cardtypes/${lineId}`,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message == 'type deleted'){\r\n                    toast.success(messages(resp.data.message))\r\n                    const filtered = data.filter(rarity => {\r\n                        return rarity.id != lineId\r\n                    })            \r\n                    setData(filtered)\r\n                    refModal.current.openModal()\r\n                }\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }\r\n\r\n    if (isAuth == false) {\r\n        window.location.href = `${BASE_URL_LOGIN}`\r\n    }\r\n\r\n    if (isAuth == false) {\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/cards' />\r\n        )\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-2\">\r\n                            <h1>Tipo das cartas</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-9\">\r\n                            <div className=\"input-group mb-3\">\r\n                                <input type=\"email\" className=\"form-control\" id=\"searchBarTec\" placeholder=\"Qual tipo você está procurando?\" />\r\n                                <div className=\"input-group-append\">\r\n                                    <div className=\"input-group-text\">\r\n                                        <i className=\"fas fa-search\"></i>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-3 mb-2 mr-0\">\r\n                            <button type=\"button\" className=\"btn btn-dark mr-1\"><Link className='link_text' to='/addtypescard'>Adicionar</Link></button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <table id=\"dataTable\" className=\"table table-bordered table-responsive-sm table-responsive-md\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Tipo</th>\r\n                                        <th className=\"text-center\">Editar</th>\r\n                                        <th className=\"text-center\">Remover</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {renderRow()}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <ToastContainer />\r\n            <Modals\r\n                title='Exclusão de card'\r\n                body='Deseja realmente excluir este tipo? Se excluir, todo os cards com este tipo serão removidos automaticamente'\r\n                nameButton='Excluir'\r\n                deleteItem={deleteItem}\r\n                ref={refModal}\r\n            />\r\n            <Loading\r\n                ref={refLoading}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TypesCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddTypesCard\\index.js",["502","503","504","505"],"import React, { useState, useContext } from 'react';\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios'\r\nimport {messages} from '../../utils/messages'\r\n\r\nconst AddTypesCard = () => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [type, setType] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const history = useHistory()\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    const changeType = evt => {\r\n        setType(evt.target.value)\r\n    }\r\n\r\n    const saveType = evt => {\r\n        evt.preventDefault()\r\n\r\n        const objType ={\r\n            type\r\n        }\r\n\r\n        axios.post(`${BASE_URL_BACK}/cardtypes`,objType,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/types')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                console.log({err});\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n        \r\n    }\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/cards' />\r\n        )\r\n    }else{\r\n        \r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-3\">\r\n                            <h1>Cadastrar Tipos</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <form onSubmit={saveType}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Nome do Tipo</label>\r\n                                    <input type=\"text\" className=\"form-control\" value={type} placeholder=\"Digite o tipo\" onChange={changeType} required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <button type=\"submit\" className=\"btn btn-dark mr-2\">Cadastrar</button>\r\n                                <Link className=\"btn btn-dark mr-2\" to='/types'>Voltar</Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <ToastContainer />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddTypesCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditTypesCard\\index.js",["506","507","508","509","510"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios'\r\nimport {messages} from '../../utils/messages'\r\nimport _ from 'lodash'\r\n\r\nconst EditTypesCard = (props) => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [type, setType] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const history = useHistory()\r\n    const {id} = props.match.params\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardtypes`,configAxios)\r\n            .then(resp => {\r\n                const colorFilter = _.filter(resp.data.type, {'id': parseInt(id)})\r\n                setType(colorFilter[0].type)\r\n            })\r\n    },[id])\r\n\r\n    const changeType = evt => {\r\n        setType(evt.target.value)\r\n    }\r\n\r\n    const saveType = evt => {\r\n        evt.preventDefault()\r\n\r\n        const objType ={\r\n            type \r\n        }\r\n\r\n        axios.put(`${BASE_URL_BACK}/cardtypes/${id}`,objType,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/types')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n        \r\n    }\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/cards' />\r\n        )\r\n    }else{\r\n        \r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-3\">\r\n                            <h1>Raridade</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <form onSubmit={saveType}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Tipo</label>\r\n                                    <input type=\"text\" className=\"form-control\" value={type} placeholder=\"Digite o tipo\" onChange={changeType} required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <button type=\"submit\" className=\"btn btn-dark mr-2\">Alterar</button>\r\n                                <Link className=\"btn btn-dark mr-2\" to='/types'>Voltar</Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <ToastContainer />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditTypesCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditionsCards\\index.js",["511","512","513","514","515","516","517","518","519"],"import React, { useEffect, useContext, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../../utils/auth'\r\nimport { BASE_URL_BACK, BASE_URL_LOGIN } from '../../utils/variaveisAmbiente'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport {messages} from '../../utils/messages'\r\nimport Loading from '../Loading'\r\nimport Modals from '../Modals'\r\nimport $ from 'jquery'\r\n\r\nconst EditionsCard = () => {\r\n    const [data, setData] = useState([])\r\n    const [lineId, setLineId] = useState()\r\n    const token = localStorage.getItem('token')\r\n    const refLoading = useRef()\r\n    const refModal = useRef()\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!isAdmin){\r\n            return null\r\n        }\r\n        axios.get(`${BASE_URL_BACK}/cardeditions`, configAxios)\r\n        .then(resp => {\r\n            setData(resp.data.edition)\r\n            $(document).ready(function(){\r\n                let dataTable = $('#dataTable').DataTable({\r\n                    \"responsive\": true,\r\n                    \"autoWidth\": false,\r\n                    \"lengthChange\": false,\r\n                    \"pageLength\": 10,\r\n                    \"bInfo\" : false,\r\n                    \"language\": {\r\n                        \"paginate\": {\r\n                          \"previous\": \"Anterior\",\r\n                          \"next\": \"Próxima\"\r\n                        },\r\n                        \"emptyTable\": \"Não existe dados para serem carregados\"\r\n                    }\r\n                })\r\n\r\n                $('#searchBarTec').on('keyup change', function () {\r\n                    dataTable.search(this.value).draw();\r\n                })\r\n\r\n                refLoading.current.executeLoading()\r\n            })\r\n        })\r\n        .catch(err => {\r\n            toast.info(messages(err.response.data.message))\r\n            if(err.response.data.message == 'Token invalid'){\r\n                setTimeout(() => {\r\n                    window.location.href = `${BASE_URL_LOGIN}`\r\n                }, 5000);\r\n            }\r\n        })\r\n    },[isAdmin])\r\n\r\n    const renderRow = () => {\r\n        return data.map(line => (\r\n                <tr key={line.id}>\r\n                    <td>{line.edition}</td>\r\n                    <td className=\"text-center\"><Link className='link_text_pen' to={`editeditionscards/${line.id}`}><i className=\"fas fa-pencil-alt click\"></i></Link></td>\r\n                    <td className=\"text-center\"><i className=\"fas fa-trash-alt click\" onClick={() => openModal(line.id)}></i></td>\r\n                </tr>\r\n            )\r\n        )\r\n    }\r\n\r\n    const openModal = (id) => {\r\n        setLineId(id)\r\n        refModal.current.openModal()\r\n    }\r\n\r\n    const deleteItem = () => {\r\n        axios.delete(`${BASE_URL_BACK}/cardeditions/${lineId}`,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message == 'edition deleted'){\r\n                    toast.success(messages(resp.data.message))\r\n                    const filtered = data.filter(color => {\r\n                        return color.id != lineId\r\n                    })            \r\n                    setData(filtered)\r\n                    refModal.current.openModal()\r\n                }\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }\r\n\r\n    if (isAuth == false) {\r\n        window.location.href = `${BASE_URL_LOGIN}`\r\n    }\r\n\r\n    if (isAuth == false) {\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/cards' />\r\n        )\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-2\">\r\n                            <h1>Edições das cartas</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-9\">\r\n                            <div className=\"input-group mb-3\">\r\n                                <input type=\"email\" className=\"form-control\" id=\"searchBarTec\" placeholder=\"Qual edição você está procurando?\" />\r\n                                <div className=\"input-group-append\">\r\n                                    <div className=\"input-group-text\">\r\n                                        <i className=\"fas fa-search\"></i>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <table id=\"dataTable\" className=\"table table-bordered table-responsive-sm table-responsive-md\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Cor</th>\r\n                                        <th className=\"text-center\">Editar</th>\r\n                                        <th className=\"text-center\">Remover</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {renderRow()}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <ToastContainer />\r\n            <Modals\r\n                title='Exclusão de card'\r\n                body='Deseja realmente excluir esta edição? Se excluir, todo os cards desta edição serão removidos automaticamente'\r\n                nameButton='Excluir'\r\n                deleteItem={deleteItem}\r\n                ref={refModal}\r\n            />\r\n            <Loading\r\n                ref={refLoading}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditionsCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditEditionsCards\\index.js",["520","521","522","523","524","525"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios'\r\nimport {messages} from '../../utils/messages'\r\nimport _ from 'lodash'\r\n\r\nconst EditEditionsCards = (props) => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [edition, setEdition] = useState('')\r\n    const [code, setCode] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const history = useHistory()\r\n    const {id} = props.match.params\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardeditions`,configAxios)\r\n            .then(resp => {\r\n                const colorFilter = _.filter(resp.data.edition, {'id': parseInt(id)})\r\n                const code = _.filter(resp.data.edition, {'id': parseInt(id)})\r\n                setEdition(colorFilter[0].edition)\r\n                setCode(colorFilter[0].code)\r\n            })\r\n    },[id])\r\n\r\n    const changeEdition = evt => {\r\n        setEdition(evt.target.value)\r\n    }\r\n\r\n    const changeCode = evt => {\r\n        setCode(evt.target.value)\r\n    }\r\n\r\n    const saveColor = evt => {\r\n        evt.preventDefault()\r\n\r\n        const objLanguage ={\r\n            edition,\r\n            code\r\n        }\r\n\r\n        axios.put(`${BASE_URL_BACK}/cardeditions/${id}`,objLanguage,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/editions')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                console.log({err});\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n        \r\n    }\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/cards' />\r\n        )\r\n    }else{\r\n        \r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-3\">\r\n                            <h1>Editar edição</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <form onSubmit={saveColor}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Edição</label>\r\n                                    <input type=\"text\" className=\"form-control\" value={edition} placeholder=\"Digite a linguagem\" onChange={changeEdition} required />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Código</label>\r\n                                    <input type=\"text\" className=\"form-control\" value={code} placeholder=\"Digite a linguagem\" onChange={changeCode} required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <button type=\"submit\" className=\"btn btn-dark mr-2\">Alterar</button>\r\n                                <Link className=\"btn btn-dark mr-2\" to='/editions'>Voltar</Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <ToastContainer />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditEditionsCards","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\LogView\\index.js",["526","527","528","529","530","531","532","533","534","535"],"import React, {useEffect, useRef, useState, useContext} from 'react';\r\nimport './index.css'\r\nimport Loading from '../Loading'\r\nimport axios from 'axios';\r\nimport {BASE_URL_BACK, BASE_URL_API_MAGIC, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport BackCard from '../../img/backCard.png'\r\nimport Birds from '../../img/aves_do_paraiso.png'\r\nimport jwt from 'jsonwebtoken'\r\nimport _ from 'lodash'\r\n\r\nconst LogView = (props) => {\r\n\r\n    let {isAuth} = useContext(AuthContext)\r\n    const urlId = props.match.params.id\r\n    const token = localStorage.getItem('token')\r\n    const [logUser, setLogUser] = useState([])\r\n    const [lastValue, setLastValues] = useState()\r\n    const refLoading = useRef()\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/logs`,configAxios)\r\n        .then(resp => {\r\n            const logsFilter = _.filter(resp.data.logs, {'id': parseInt(urlId)})\r\n            setLogUser(logsFilter)\r\n            const lastValue = logsFilter[0].lastValue\r\n            setLastValues(JSON.parse(lastValue))\r\n            refLoading.current.executeLoading()\r\n        })\r\n        .catch(err => {\r\n            if(err.response.data.message == 'token invalid'){\r\n                window.location.href = `${BASE_URL_LOGIN}`\r\n            }\r\n        })\r\n        \r\n    },[urlId])\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    return(\r\n        <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-2\">\r\n                            <h1>LogView</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12 mt-2\">\r\n                            <code>\r\n                                {<div><pre>{JSON.stringify(logUser[0], null, 2) }</pre></div>}\r\n                            </code>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-2\">\r\n                            <h1>LastValue</h1>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12 mt-2\">\r\n                            <code>\r\n                                {<div><pre>{JSON.stringify(lastValue, null, 2) }</pre></div>}\r\n                            </code>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Loading \r\n                    ref={refLoading}\r\n                />\r\n            </section>\r\n\r\n    )\r\n}\r\n\r\nexport default LogView","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\pages\\Forgot\\index.js",["536"],"import {React, useState, useEffect} from 'react';\r\nimport Logo from '../../img/logo.png'\r\nimport axios from 'axios'\r\nimport {BASE_URL_BACK, BASE_URL_FRONT} from '../../utils/variaveisAmbiente'\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css'; \r\nimport {messages} from '../../utils/messages'\r\n\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport './index.css'\r\n\r\nconst Forgot = (props) => {\r\n    const [email, setEmail] = useState('')\r\n\r\n    //Pega os valores de e-mail e adiciona no estado\r\n    const onChangeMail = evt => {\r\n        setEmail(evt.target.value)\r\n    }\r\n\r\n    //Envia os dados para o backend validar\r\n    const sendBack = (evt) => {\r\n        evt.preventDefault()\r\n\r\n        const data = {\r\n            email\r\n        }\r\n\r\n        //Criação do usuário no backend\r\n        axios.post(`${BASE_URL_BACK}/forgot`,data)\r\n        .then(resp => {\r\n            toast.success(messages(resp.data.message))\r\n            setTimeout(() => {\r\n                window.location.href = `${BASE_URL_FRONT}/login`\r\n            }, 5000)\r\n        })\r\n        .catch(err => {\r\n            toast.info(messages(err.response.data.message))\r\n            setTimeout(() => {\r\n                window.location.href = `${BASE_URL_FRONT}/login`\r\n            }, 5000)\r\n        })\r\n            \r\n    }\r\n\r\n    return(\r\n        <div className='wrapper'>\r\n        <div className='row text-center contentLogin'>\r\n        <div className='col-md-6 offset-md-3 col-10 offset-1'>\r\n            <img src={Logo} className='img-fluid' alt='Logo Magic Collections'/>\r\n            <form onSubmit={sendBack}>\r\n                <div className='row'>\r\n                    <div className='col-md-6 offset-md-3 col-10 offset-1'>\r\n                        <div className='input-group mb-3'>\r\n                            <input type='text' name='email' value={email} onChange={onChangeMail} className='form-control' placeholder='E-mail' required />\r\n                            <div className='input-group-prepend'>\r\n                            <span className='input-group-text'><i className='fas fa-envelope'></i></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button type='submit' className='btn btn-dark mb-2'>Esqueci minha senha</button>\r\n            </form>\r\n            <ToastContainer />\r\n        </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Forgot","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\pages\\Reset\\index.js",["537","538","539","540"],"import {React, useState, useEffect} from 'react';\r\nimport Logo from '../../img/logo.png'\r\nimport axios from 'axios'\r\nimport {BASE_URL_BACK, BASE_URL_FRONT} from '../../utils/variaveisAmbiente'\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css'; \r\nimport {messages} from '../../utils/messages'\r\n\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport './index.css'\r\n\r\nconst Reset = (props) => {\r\n    const [password, setPassword] = useState('')\r\n    const [passwordConfirm, setPasswordConfirm] = useState('')\r\n    const [name, setName] = useState('')\r\n\r\n    //Pega os valores de password e adiciona no estado\r\n    const onChangePass = evt => {\r\n        setPassword(evt.target.value)\r\n    }\r\n\r\n    //Pega os valores de password e adiciona no estado\r\n    const onChangePassConfirm = evt => {\r\n        setPasswordConfirm(evt.target.value)\r\n    }\r\n\r\n    //Envia os dados para o backend validar\r\n    const sendBack = (evt) => {\r\n        evt.preventDefault()\r\n        const uuid = props.location.pathname.split('/')[2]\r\n\r\n        //Verifica se as senhas informadas são iguais\r\n        if(password == passwordConfirm){\r\n            const data = {\r\n                password,\r\n                hashUrl: uuid\r\n            }\r\n           \r\n           axios.post(`${BASE_URL_BACK}/reset`,data)\r\n           .then(resp => {   \r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    window.location.href = `${BASE_URL_FRONT}/login`\r\n                }, 5000)\r\n           })\r\n           .catch(err => {\r\n               toast.info(messages(err.response.data.message))\r\n               setTimeout(() => {\r\n                window.location.href = `${BASE_URL_FRONT}/login`\r\n            }, 5000)\r\n           })\r\n        }else{\r\n            //Caso a senha não sejam iguais é apresentada a mensagem\r\n            toast.info('As senhas não coincidem')\r\n        }\r\n            \r\n    }\r\n\r\n    return(\r\n        <div className='wrapper'>\r\n        <div className='row text-center contentLogin'>\r\n        <div className='col-md-6 offset-md-3 col-10 offset-1'>\r\n            <img src={Logo} className='img-fluid' alt='Logo Magic Collections'/>\r\n            <form onSubmit={sendBack}>\r\n                <div className='row'>\r\n                    <div className='col-md-6 offset-md-3 col-10 offset-1'>\r\n                        <div className='input-group mb-3'>\r\n                            <input type='password' value={password} onChange={onChangePass} className='form-control' placeholder='Senha' required/>\r\n                            <div className='input-group-prepend'>\r\n                            <span className='input-group-text'><i className='fas fa-unlock-alt'></i></span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='input-group mb-3'>\r\n                            <input type='password' value={passwordConfirm} onChange={onChangePassConfirm} className='form-control' placeholder='Confirme sua senha' required/>\r\n                            <div className='input-group-prepend'>\r\n                            <span className='input-group-text'><i className='fas fa-unlock-alt'></i></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button type='submit' className='btn btn-dark mb-2'>Alterar Senha</button>\r\n            </form>\r\n            <ToastContainer />\r\n        </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reset","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\utils\\colors.js",["541"],{"ruleId":"542","replacedBy":"543"},{"ruleId":"544","replacedBy":"545"},{"ruleId":"546","severity":1,"message":"547","line":9,"column":1,"nodeType":"548","endLine":21,"endColumn":2},{"ruleId":"549","severity":1,"message":"550","line":1,"column":10,"nodeType":"551","messageId":"552","endLine":1,"endColumn":27},{"ruleId":"553","severity":1,"message":"554","line":16,"column":8,"nodeType":"555","endLine":16,"endColumn":10,"suggestions":"556"},{"ruleId":"553","severity":1,"message":"557","line":26,"column":5,"nodeType":"551","endLine":26,"endColumn":14,"suggestions":"558"},{"ruleId":"559","severity":1,"message":"560","line":27,"column":23,"nodeType":"561","messageId":"562","endLine":27,"endColumn":25},{"ruleId":"559","severity":1,"message":"560","line":64,"column":34,"nodeType":"561","messageId":"562","endLine":64,"endColumn":36},{"ruleId":"559","severity":1,"message":"560","line":98,"column":42,"nodeType":"561","messageId":"562","endLine":98,"endColumn":44},{"ruleId":"559","severity":1,"message":"560","line":138,"column":34,"nodeType":"561","messageId":"562","endLine":138,"endColumn":36},{"ruleId":"559","severity":1,"message":"560","line":171,"column":42,"nodeType":"561","messageId":"562","endLine":171,"endColumn":44},{"ruleId":"549","severity":1,"message":"563","line":2,"column":25,"nodeType":"551","messageId":"552","endLine":2,"endColumn":33},{"ruleId":"549","severity":1,"message":"564","line":5,"column":9,"nodeType":"551","messageId":"552","endLine":5,"endColumn":22},{"ruleId":"559","severity":1,"message":"560","line":48,"column":15,"nodeType":"561","messageId":"562","endLine":48,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":52,"column":15,"nodeType":"561","messageId":"562","endLine":52,"endColumn":17},{"ruleId":"549","severity":1,"message":"565","line":1,"column":26,"nodeType":"551","messageId":"552","endLine":1,"endColumn":35},{"ruleId":"559","severity":1,"message":"560","line":43,"column":21,"nodeType":"561","messageId":"562","endLine":43,"endColumn":23},{"ruleId":"559","severity":1,"message":"560","line":53,"column":38,"nodeType":"561","messageId":"562","endLine":53,"endColumn":40},{"ruleId":"559","severity":1,"message":"560","line":63,"column":46,"nodeType":"561","messageId":"562","endLine":63,"endColumn":48},{"ruleId":"566","severity":1,"message":"567","line":81,"column":9,"nodeType":"568","messageId":"562","endLine":82,"endColumn":47},{"ruleId":"566","severity":1,"message":"567","line":83,"column":9,"nodeType":"568","messageId":"562","endLine":84,"endColumn":38},{"ruleId":"549","severity":1,"message":"569","line":5,"column":9,"nodeType":"551","messageId":"552","endLine":5,"endColumn":13},{"ruleId":"549","severity":1,"message":"563","line":5,"column":15,"nodeType":"551","messageId":"552","endLine":5,"endColumn":23},{"ruleId":"549","severity":1,"message":"570","line":8,"column":8,"nodeType":"551","messageId":"552","endLine":8,"endColumn":13},{"ruleId":"559","severity":1,"message":"560","line":52,"column":42,"nodeType":"561","messageId":"562","endLine":52,"endColumn":44},{"ruleId":"553","severity":1,"message":"571","line":57,"column":7,"nodeType":"555","endLine":57,"endColumn":14,"suggestions":"572"},{"ruleId":"559","severity":1,"message":"560","line":59,"column":15,"nodeType":"561","messageId":"562","endLine":59,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":67,"column":15,"nodeType":"561","messageId":"562","endLine":67,"endColumn":17},{"ruleId":"549","severity":1,"message":"563","line":9,"column":39,"nodeType":"551","messageId":"552","endLine":9,"endColumn":47},{"ruleId":"549","severity":1,"message":"573","line":23,"column":12,"nodeType":"551","messageId":"552","endLine":23,"endColumn":24},{"ruleId":"549","severity":1,"message":"574","line":23,"column":26,"nodeType":"551","messageId":"552","endLine":23,"endColumn":41},{"ruleId":"559","severity":1,"message":"560","line":36,"column":59,"nodeType":"561","messageId":"562","endLine":36,"endColumn":61},{"ruleId":"559","severity":1,"message":"560","line":37,"column":60,"nodeType":"561","messageId":"562","endLine":37,"endColumn":62},{"ruleId":"559","severity":1,"message":"560","line":38,"column":58,"nodeType":"561","messageId":"562","endLine":38,"endColumn":60},{"ruleId":"559","severity":1,"message":"560","line":39,"column":58,"nodeType":"561","messageId":"562","endLine":39,"endColumn":60},{"ruleId":"559","severity":1,"message":"560","line":40,"column":56,"nodeType":"561","messageId":"562","endLine":40,"endColumn":58},{"ruleId":"553","severity":1,"message":"575","line":42,"column":7,"nodeType":"555","endLine":42,"endColumn":9,"suggestions":"576"},{"ruleId":"553","severity":1,"message":"577","line":49,"column":7,"nodeType":"555","endLine":49,"endColumn":19,"suggestions":"578"},{"ruleId":"553","severity":1,"message":"577","line":56,"column":7,"nodeType":"555","endLine":56,"endColumn":18,"suggestions":"579"},{"ruleId":"559","severity":1,"message":"560","line":58,"column":15,"nodeType":"561","messageId":"562","endLine":58,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":66,"column":15,"nodeType":"561","messageId":"562","endLine":66,"endColumn":17},{"ruleId":"580","severity":1,"message":"581","line":86,"column":20,"nodeType":"582","messageId":"583","endLine":86,"endColumn":65},{"ruleId":"559","severity":1,"message":"560","line":101,"column":71,"nodeType":"561","messageId":"562","endLine":101,"endColumn":73},{"ruleId":"559","severity":1,"message":"560","line":118,"column":74,"nodeType":"561","messageId":"562","endLine":118,"endColumn":76},{"ruleId":"549","severity":1,"message":"584","line":16,"column":11,"nodeType":"551","messageId":"552","endLine":16,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":86,"column":50,"nodeType":"561","messageId":"562","endLine":86,"endColumn":52},{"ruleId":"553","severity":1,"message":"554","line":92,"column":7,"nodeType":"555","endLine":92,"endColumn":9,"suggestions":"585"},{"ruleId":"559","severity":1,"message":"560","line":94,"column":15,"nodeType":"561","messageId":"562","endLine":94,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":107,"column":38,"nodeType":"561","messageId":"562","endLine":107,"endColumn":40},{"ruleId":"559","severity":1,"message":"586","line":110,"column":41,"nodeType":"561","messageId":"562","endLine":110,"endColumn":43},{"ruleId":"549","severity":1,"message":"584","line":14,"column":11,"nodeType":"551","messageId":"552","endLine":14,"endColumn":18},{"ruleId":"553","severity":1,"message":"587","line":42,"column":7,"nodeType":"555","endLine":42,"endColumn":17,"suggestions":"588"},{"ruleId":"559","severity":1,"message":"560","line":44,"column":15,"nodeType":"561","messageId":"562","endLine":44,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":52,"column":15,"nodeType":"561","messageId":"562","endLine":52,"endColumn":17},{"ruleId":"589","severity":1,"message":"590","line":69,"column":21,"nodeType":"591","endLine":69,"endColumn":91},{"ruleId":"589","severity":1,"message":"590","line":74,"column":17,"nodeType":"591","endLine":74,"endColumn":52},{"ruleId":"549","severity":1,"message":"563","line":9,"column":27,"nodeType":"551","messageId":"552","endLine":9,"endColumn":35},{"ruleId":"559","severity":1,"message":"560","line":64,"column":46,"nodeType":"561","messageId":"562","endLine":64,"endColumn":48},{"ruleId":"553","severity":1,"message":"577","line":70,"column":8,"nodeType":"555","endLine":70,"endColumn":10,"suggestions":"592"},{"ruleId":"559","severity":1,"message":"560","line":77,"column":47,"nodeType":"561","messageId":"562","endLine":77,"endColumn":49},{"ruleId":"559","severity":1,"message":"560","line":155,"column":15,"nodeType":"561","messageId":"562","endLine":155,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":163,"column":15,"nodeType":"561","messageId":"562","endLine":163,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":82,"column":46,"nodeType":"561","messageId":"562","endLine":82,"endColumn":48},{"ruleId":"553","severity":1,"message":"577","line":89,"column":8,"nodeType":"555","endLine":89,"endColumn":10,"suggestions":"593"},{"ruleId":"559","severity":1,"message":"560","line":91,"column":15,"nodeType":"561","messageId":"562","endLine":91,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":99,"column":15,"nodeType":"561","messageId":"562","endLine":99,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":103,"column":16,"nodeType":"561","messageId":"562","endLine":103,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":109,"column":16,"nodeType":"561","messageId":"562","endLine":109,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":114,"column":27,"nodeType":"561","messageId":"562","endLine":114,"endColumn":29},{"ruleId":"559","severity":1,"message":"560","line":218,"column":38,"nodeType":"561","messageId":"562","endLine":218,"endColumn":40},{"ruleId":"559","severity":1,"message":"586","line":221,"column":41,"nodeType":"561","messageId":"562","endLine":221,"endColumn":43},{"ruleId":"594","severity":1,"message":"595","line":287,"column":33,"nodeType":"591","endLine":287,"endColumn":128},{"ruleId":"549","severity":1,"message":"596","line":5,"column":22,"nodeType":"551","messageId":"552","endLine":5,"endColumn":31},{"ruleId":"549","severity":1,"message":"597","line":15,"column":12,"nodeType":"551","messageId":"552","endLine":15,"endColumn":18},{"ruleId":"549","severity":1,"message":"598","line":15,"column":20,"nodeType":"551","messageId":"552","endLine":15,"endColumn":29},{"ruleId":"553","severity":1,"message":"577","line":42,"column":7,"nodeType":"555","endLine":42,"endColumn":11,"suggestions":"599"},{"ruleId":"553","severity":1,"message":"577","line":53,"column":7,"nodeType":"555","endLine":53,"endColumn":21,"suggestions":"600"},{"ruleId":"553","severity":1,"message":"577","line":64,"column":8,"nodeType":"555","endLine":64,"endColumn":23,"suggestions":"601"},{"ruleId":"553","severity":1,"message":"577","line":75,"column":8,"nodeType":"555","endLine":75,"endColumn":25,"suggestions":"602"},{"ruleId":"553","severity":1,"message":"577","line":86,"column":7,"nodeType":"555","endLine":86,"endColumn":23,"suggestions":"603"},{"ruleId":"559","severity":1,"message":"560","line":88,"column":15,"nodeType":"561","messageId":"562","endLine":88,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":94,"column":15,"nodeType":"561","messageId":"562","endLine":94,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":98,"column":16,"nodeType":"561","messageId":"562","endLine":98,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":104,"column":16,"nodeType":"561","messageId":"562","endLine":104,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":116,"column":72,"nodeType":"561","messageId":"562","endLine":116,"endColumn":74},{"ruleId":"559","severity":1,"message":"560","line":133,"column":74,"nodeType":"561","messageId":"562","endLine":133,"endColumn":76},{"ruleId":"559","severity":1,"message":"560","line":150,"column":78,"nodeType":"561","messageId":"562","endLine":150,"endColumn":80},{"ruleId":"559","severity":1,"message":"560","line":167,"column":76,"nodeType":"561","messageId":"562","endLine":167,"endColumn":78},{"ruleId":"559","severity":1,"message":"560","line":196,"column":38,"nodeType":"561","messageId":"562","endLine":196,"endColumn":40},{"ruleId":"549","severity":1,"message":"604","line":20,"column":11,"nodeType":"551","messageId":"552","endLine":20,"endColumn":25},{"ruleId":"559","severity":1,"message":"560","line":56,"column":46,"nodeType":"561","messageId":"562","endLine":56,"endColumn":48},{"ruleId":"553","severity":1,"message":"605","line":71,"column":7,"nodeType":"555","endLine":71,"endColumn":9,"suggestions":"606"},{"ruleId":"559","severity":1,"message":"560","line":73,"column":15,"nodeType":"561","messageId":"562","endLine":73,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":81,"column":15,"nodeType":"561","messageId":"562","endLine":81,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":150,"column":38,"nodeType":"561","messageId":"562","endLine":150,"endColumn":40},{"ruleId":"549","severity":1,"message":"607","line":2,"column":15,"nodeType":"551","messageId":"552","endLine":2,"endColumn":25},{"ruleId":"559","severity":1,"message":"560","line":70,"column":44,"nodeType":"561","messageId":"562","endLine":70,"endColumn":46},{"ruleId":"553","severity":1,"message":"577","line":76,"column":7,"nodeType":"555","endLine":76,"endColumn":9,"suggestions":"608"},{"ruleId":"559","severity":1,"message":"560","line":97,"column":42,"nodeType":"561","messageId":"562","endLine":97,"endColumn":44},{"ruleId":"559","severity":1,"message":"586","line":100,"column":42,"nodeType":"561","messageId":"562","endLine":100,"endColumn":44},{"ruleId":"559","severity":1,"message":"560","line":113,"column":15,"nodeType":"561","messageId":"562","endLine":113,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":121,"column":15,"nodeType":"561","messageId":"562","endLine":121,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":125,"column":16,"nodeType":"561","messageId":"562","endLine":125,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":133,"column":16,"nodeType":"561","messageId":"562","endLine":133,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":142,"column":66,"nodeType":"561","messageId":"562","endLine":142,"endColumn":68},{"ruleId":"549","severity":1,"message":"609","line":10,"column":8,"nodeType":"551","messageId":"552","endLine":10,"endColumn":11},{"ruleId":"553","severity":1,"message":"577","line":40,"column":8,"nodeType":"555","endLine":40,"endColumn":10,"suggestions":"610"},{"ruleId":"559","severity":1,"message":"560","line":73,"column":46,"nodeType":"561","messageId":"562","endLine":73,"endColumn":48},{"ruleId":"553","severity":1,"message":"577","line":79,"column":7,"nodeType":"555","endLine":79,"endColumn":9,"suggestions":"611"},{"ruleId":"559","severity":1,"message":"586","line":86,"column":65,"nodeType":"561","messageId":"562","endLine":86,"endColumn":67},{"ruleId":"559","severity":1,"message":"560","line":91,"column":39,"nodeType":"561","messageId":"562","endLine":91,"endColumn":41},{"ruleId":"612","severity":1,"message":"613","line":96,"column":34,"nodeType":"614","messageId":"615","endLine":96,"endColumn":36},{"ruleId":"553","severity":1,"message":"577","line":102,"column":7,"nodeType":"555","endLine":102,"endColumn":20,"suggestions":"616"},{"ruleId":"553","severity":1,"message":"577","line":109,"column":7,"nodeType":"555","endLine":109,"endColumn":9,"suggestions":"617"},{"ruleId":"553","severity":1,"message":"618","line":120,"column":7,"nodeType":"555","endLine":120,"endColumn":9,"suggestions":"619"},{"ruleId":"553","severity":1,"message":"577","line":143,"column":7,"nodeType":"555","endLine":143,"endColumn":9,"suggestions":"620"},{"ruleId":"559","severity":1,"message":"560","line":159,"column":15,"nodeType":"561","messageId":"562","endLine":159,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":167,"column":15,"nodeType":"561","messageId":"562","endLine":167,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":171,"column":16,"nodeType":"561","messageId":"562","endLine":171,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":179,"column":16,"nodeType":"561","messageId":"562","endLine":179,"endColumn":18},{"ruleId":"621","severity":1,"message":"622","line":243,"column":41,"nodeType":"623","messageId":"562","endLine":243,"endColumn":47},{"ruleId":"549","severity":1,"message":"624","line":1,"column":28,"nodeType":"551","messageId":"552","endLine":1,"endColumn":34},{"ruleId":"549","severity":1,"message":"596","line":3,"column":22,"nodeType":"551","messageId":"552","endLine":3,"endColumn":31},{"ruleId":"549","severity":1,"message":"563","line":3,"column":39,"nodeType":"551","messageId":"552","endLine":3,"endColumn":47},{"ruleId":"559","severity":1,"message":"560","line":36,"column":44,"nodeType":"561","messageId":"562","endLine":36,"endColumn":46},{"ruleId":"553","severity":1,"message":"577","line":42,"column":7,"nodeType":"555","endLine":42,"endColumn":11,"suggestions":"625"},{"ruleId":"559","severity":1,"message":"560","line":44,"column":15,"nodeType":"561","messageId":"562","endLine":44,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":52,"column":15,"nodeType":"561","messageId":"562","endLine":52,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":69,"column":38,"nodeType":"561","messageId":"562","endLine":69,"endColumn":40},{"ruleId":"559","severity":1,"message":"560","line":92,"column":35,"nodeType":"561","messageId":"562","endLine":92,"endColumn":37},{"ruleId":"559","severity":1,"message":"560","line":99,"column":35,"nodeType":"561","messageId":"562","endLine":99,"endColumn":37},{"ruleId":"549","severity":1,"message":"569","line":3,"column":9,"nodeType":"551","messageId":"552","endLine":3,"endColumn":13},{"ruleId":"549","severity":1,"message":"563","line":3,"column":15,"nodeType":"551","messageId":"552","endLine":3,"endColumn":23},{"ruleId":"559","severity":1,"message":"560","line":71,"column":42,"nodeType":"561","messageId":"562","endLine":71,"endColumn":44},{"ruleId":"553","severity":1,"message":"571","line":77,"column":7,"nodeType":"555","endLine":77,"endColumn":9,"suggestions":"626"},{"ruleId":"549","severity":1,"message":"627","line":95,"column":15,"nodeType":"551","messageId":"552","endLine":95,"endColumn":26},{"ruleId":"559","severity":1,"message":"560","line":138,"column":15,"nodeType":"561","messageId":"562","endLine":138,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":146,"column":15,"nodeType":"561","messageId":"562","endLine":146,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":166,"column":40,"nodeType":"561","messageId":"562","endLine":166,"endColumn":42},{"ruleId":"559","severity":1,"message":"560","line":166,"column":72,"nodeType":"561","messageId":"562","endLine":166,"endColumn":74},{"ruleId":"559","severity":1,"message":"560","line":166,"column":104,"nodeType":"561","messageId":"562","endLine":166,"endColumn":106},{"ruleId":"559","severity":1,"message":"560","line":172,"column":40,"nodeType":"561","messageId":"562","endLine":172,"endColumn":42},{"ruleId":"559","severity":1,"message":"560","line":172,"column":69,"nodeType":"561","messageId":"562","endLine":172,"endColumn":71},{"ruleId":"559","severity":1,"message":"560","line":172,"column":98,"nodeType":"561","messageId":"562","endLine":172,"endColumn":100},{"ruleId":"559","severity":1,"message":"560","line":178,"column":40,"nodeType":"561","messageId":"562","endLine":178,"endColumn":42},{"ruleId":"559","severity":1,"message":"560","line":178,"column":70,"nodeType":"561","messageId":"562","endLine":178,"endColumn":72},{"ruleId":"559","severity":1,"message":"560","line":178,"column":100,"nodeType":"561","messageId":"562","endLine":178,"endColumn":102},{"ruleId":"559","severity":1,"message":"560","line":178,"column":131,"nodeType":"561","messageId":"562","endLine":178,"endColumn":133},{"ruleId":"559","severity":1,"message":"560","line":178,"column":162,"nodeType":"561","messageId":"562","endLine":178,"endColumn":164},{"ruleId":"559","severity":1,"message":"560","line":184,"column":40,"nodeType":"561","messageId":"562","endLine":184,"endColumn":42},{"ruleId":"559","severity":1,"message":"560","line":184,"column":69,"nodeType":"561","messageId":"562","endLine":184,"endColumn":71},{"ruleId":"559","severity":1,"message":"560","line":190,"column":40,"nodeType":"561","messageId":"562","endLine":190,"endColumn":42},{"ruleId":"559","severity":1,"message":"560","line":190,"column":68,"nodeType":"561","messageId":"562","endLine":190,"endColumn":70},{"ruleId":"559","severity":1,"message":"560","line":196,"column":40,"nodeType":"561","messageId":"562","endLine":196,"endColumn":42},{"ruleId":"559","severity":1,"message":"560","line":196,"column":71,"nodeType":"561","messageId":"562","endLine":196,"endColumn":73},{"ruleId":"559","severity":1,"message":"560","line":196,"column":104,"nodeType":"561","messageId":"562","endLine":196,"endColumn":106},{"ruleId":"559","severity":1,"message":"560","line":202,"column":40,"nodeType":"561","messageId":"562","endLine":202,"endColumn":42},{"ruleId":"559","severity":1,"message":"560","line":202,"column":74,"nodeType":"561","messageId":"562","endLine":202,"endColumn":76},{"ruleId":"559","severity":1,"message":"560","line":202,"column":109,"nodeType":"561","messageId":"562","endLine":202,"endColumn":111},{"ruleId":"559","severity":1,"message":"586","line":209,"column":43,"nodeType":"561","messageId":"562","endLine":209,"endColumn":45},{"ruleId":"559","severity":1,"message":"586","line":210,"column":43,"nodeType":"561","messageId":"562","endLine":210,"endColumn":45},{"ruleId":"559","severity":1,"message":"586","line":211,"column":43,"nodeType":"561","messageId":"562","endLine":211,"endColumn":45},{"ruleId":"559","severity":1,"message":"586","line":212,"column":43,"nodeType":"561","messageId":"562","endLine":212,"endColumn":45},{"ruleId":"559","severity":1,"message":"586","line":213,"column":43,"nodeType":"561","messageId":"562","endLine":213,"endColumn":45},{"ruleId":"559","severity":1,"message":"586","line":214,"column":43,"nodeType":"561","messageId":"562","endLine":214,"endColumn":45},{"ruleId":"559","severity":1,"message":"586","line":215,"column":43,"nodeType":"561","messageId":"562","endLine":215,"endColumn":45},{"ruleId":"559","severity":1,"message":"586","line":216,"column":43,"nodeType":"561","messageId":"562","endLine":216,"endColumn":45},{"ruleId":"559","severity":1,"message":"586","line":217,"column":43,"nodeType":"561","messageId":"562","endLine":217,"endColumn":45},{"ruleId":"559","severity":1,"message":"586","line":218,"column":43,"nodeType":"561","messageId":"562","endLine":218,"endColumn":45},{"ruleId":"559","severity":1,"message":"586","line":219,"column":43,"nodeType":"561","messageId":"562","endLine":219,"endColumn":45},{"ruleId":"559","severity":1,"message":"586","line":220,"column":43,"nodeType":"561","messageId":"562","endLine":220,"endColumn":45},{"ruleId":"559","severity":1,"message":"586","line":221,"column":43,"nodeType":"561","messageId":"562","endLine":221,"endColumn":45},{"ruleId":"559","severity":1,"message":"586","line":222,"column":43,"nodeType":"561","messageId":"562","endLine":222,"endColumn":45},{"ruleId":"559","severity":1,"message":"586","line":223,"column":43,"nodeType":"561","messageId":"562","endLine":223,"endColumn":45},{"ruleId":"559","severity":1,"message":"586","line":224,"column":43,"nodeType":"561","messageId":"562","endLine":224,"endColumn":45},{"ruleId":"559","severity":1,"message":"586","line":225,"column":43,"nodeType":"561","messageId":"562","endLine":225,"endColumn":45},{"ruleId":"559","severity":1,"message":"586","line":226,"column":43,"nodeType":"561","messageId":"562","endLine":226,"endColumn":45},{"ruleId":"559","severity":1,"message":"586","line":227,"column":43,"nodeType":"561","messageId":"562","endLine":227,"endColumn":45},{"ruleId":"559","severity":1,"message":"586","line":228,"column":43,"nodeType":"561","messageId":"562","endLine":228,"endColumn":45},{"ruleId":"559","severity":1,"message":"586","line":229,"column":43,"nodeType":"561","messageId":"562","endLine":229,"endColumn":45},{"ruleId":"628","severity":1,"message":"629","line":12,"column":17,"nodeType":"630","messageId":"631","endLine":12,"endColumn":86},{"ruleId":"559","severity":1,"message":"560","line":12,"column":30,"nodeType":"561","messageId":"562","endLine":12,"endColumn":32},{"ruleId":"559","severity":1,"message":"560","line":17,"column":20,"nodeType":"561","messageId":"562","endLine":17,"endColumn":22},{"ruleId":"628","severity":1,"message":"629","line":14,"column":17,"nodeType":"630","messageId":"631","endLine":14,"endColumn":69},{"ruleId":"559","severity":1,"message":"560","line":14,"column":28,"nodeType":"561","messageId":"562","endLine":14,"endColumn":30},{"ruleId":"549","severity":1,"message":"607","line":3,"column":9,"nodeType":"551","messageId":"552","endLine":3,"endColumn":19},{"ruleId":"549","severity":1,"message":"563","line":3,"column":27,"nodeType":"551","messageId":"552","endLine":3,"endColumn":35},{"ruleId":"559","severity":1,"message":"586","line":35,"column":22,"nodeType":"561","messageId":"562","endLine":35,"endColumn":24},{"ruleId":"559","severity":1,"message":"560","line":38,"column":42,"nodeType":"561","messageId":"562","endLine":38,"endColumn":44},{"ruleId":"553","severity":1,"message":"632","line":44,"column":7,"nodeType":"555","endLine":44,"endColumn":11,"suggestions":"633"},{"ruleId":"559","severity":1,"message":"560","line":46,"column":15,"nodeType":"561","messageId":"562","endLine":46,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":54,"column":15,"nodeType":"561","messageId":"562","endLine":54,"endColumn":17},{"ruleId":"549","severity":1,"message":"607","line":6,"column":15,"nodeType":"551","messageId":"552","endLine":6,"endColumn":25},{"ruleId":"559","severity":1,"message":"560","line":58,"column":42,"nodeType":"561","messageId":"562","endLine":58,"endColumn":44},{"ruleId":"553","severity":1,"message":"577","line":64,"column":7,"nodeType":"555","endLine":64,"endColumn":16,"suggestions":"634"},{"ruleId":"559","severity":1,"message":"560","line":85,"column":38,"nodeType":"561","messageId":"562","endLine":85,"endColumn":40},{"ruleId":"559","severity":1,"message":"586","line":88,"column":41,"nodeType":"561","messageId":"562","endLine":88,"endColumn":43},{"ruleId":"559","severity":1,"message":"560","line":100,"column":16,"nodeType":"561","messageId":"562","endLine":100,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":104,"column":16,"nodeType":"561","messageId":"562","endLine":104,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":108,"column":16,"nodeType":"561","messageId":"562","endLine":108,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":114,"column":16,"nodeType":"561","messageId":"562","endLine":114,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":48,"column":15,"nodeType":"561","messageId":"562","endLine":48,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":56,"column":15,"nodeType":"561","messageId":"562","endLine":56,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":60,"column":16,"nodeType":"561","messageId":"562","endLine":60,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":68,"column":16,"nodeType":"561","messageId":"562","endLine":68,"endColumn":18},{"ruleId":"553","severity":1,"message":"577","line":31,"column":7,"nodeType":"555","endLine":31,"endColumn":11,"suggestions":"635"},{"ruleId":"559","severity":1,"message":"560","line":59,"column":15,"nodeType":"561","messageId":"562","endLine":59,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":67,"column":15,"nodeType":"561","messageId":"562","endLine":67,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":71,"column":16,"nodeType":"561","messageId":"562","endLine":71,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":79,"column":16,"nodeType":"561","messageId":"562","endLine":79,"endColumn":18},{"ruleId":"549","severity":1,"message":"607","line":6,"column":15,"nodeType":"551","messageId":"552","endLine":6,"endColumn":25},{"ruleId":"559","severity":1,"message":"560","line":58,"column":42,"nodeType":"561","messageId":"562","endLine":58,"endColumn":44},{"ruleId":"553","severity":1,"message":"577","line":64,"column":7,"nodeType":"555","endLine":64,"endColumn":16,"suggestions":"636"},{"ruleId":"559","severity":1,"message":"560","line":85,"column":38,"nodeType":"561","messageId":"562","endLine":85,"endColumn":40},{"ruleId":"559","severity":1,"message":"586","line":88,"column":44,"nodeType":"561","messageId":"562","endLine":88,"endColumn":46},{"ruleId":"559","severity":1,"message":"560","line":100,"column":16,"nodeType":"561","messageId":"562","endLine":100,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":104,"column":16,"nodeType":"561","messageId":"562","endLine":104,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":108,"column":16,"nodeType":"561","messageId":"562","endLine":108,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":114,"column":16,"nodeType":"561","messageId":"562","endLine":114,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":48,"column":15,"nodeType":"561","messageId":"562","endLine":48,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":56,"column":15,"nodeType":"561","messageId":"562","endLine":56,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":60,"column":16,"nodeType":"561","messageId":"562","endLine":60,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":68,"column":16,"nodeType":"561","messageId":"562","endLine":68,"endColumn":18},{"ruleId":"553","severity":1,"message":"577","line":30,"column":7,"nodeType":"555","endLine":30,"endColumn":11,"suggestions":"637"},{"ruleId":"559","severity":1,"message":"560","line":59,"column":15,"nodeType":"561","messageId":"562","endLine":59,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":67,"column":15,"nodeType":"561","messageId":"562","endLine":67,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":71,"column":16,"nodeType":"561","messageId":"562","endLine":71,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":79,"column":16,"nodeType":"561","messageId":"562","endLine":79,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":48,"column":15,"nodeType":"561","messageId":"562","endLine":48,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":56,"column":15,"nodeType":"561","messageId":"562","endLine":56,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":60,"column":16,"nodeType":"561","messageId":"562","endLine":60,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":68,"column":16,"nodeType":"561","messageId":"562","endLine":68,"endColumn":18},{"ruleId":"553","severity":1,"message":"577","line":30,"column":7,"nodeType":"555","endLine":30,"endColumn":11,"suggestions":"638"},{"ruleId":"559","severity":1,"message":"560","line":57,"column":15,"nodeType":"561","messageId":"562","endLine":57,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":65,"column":15,"nodeType":"561","messageId":"562","endLine":65,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":69,"column":16,"nodeType":"561","messageId":"562","endLine":69,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":77,"column":16,"nodeType":"561","messageId":"562","endLine":77,"endColumn":18},{"ruleId":"549","severity":1,"message":"607","line":6,"column":15,"nodeType":"551","messageId":"552","endLine":6,"endColumn":25},{"ruleId":"559","severity":1,"message":"560","line":58,"column":42,"nodeType":"561","messageId":"562","endLine":58,"endColumn":44},{"ruleId":"553","severity":1,"message":"577","line":64,"column":7,"nodeType":"555","endLine":64,"endColumn":16,"suggestions":"639"},{"ruleId":"559","severity":1,"message":"560","line":85,"column":38,"nodeType":"561","messageId":"562","endLine":85,"endColumn":40},{"ruleId":"559","severity":1,"message":"586","line":88,"column":45,"nodeType":"561","messageId":"562","endLine":88,"endColumn":47},{"ruleId":"559","severity":1,"message":"560","line":100,"column":16,"nodeType":"561","messageId":"562","endLine":100,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":104,"column":16,"nodeType":"561","messageId":"562","endLine":104,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":108,"column":16,"nodeType":"561","messageId":"562","endLine":108,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":114,"column":16,"nodeType":"561","messageId":"562","endLine":114,"endColumn":18},{"ruleId":"549","severity":1,"message":"607","line":6,"column":15,"nodeType":"551","messageId":"552","endLine":6,"endColumn":25},{"ruleId":"559","severity":1,"message":"560","line":58,"column":42,"nodeType":"561","messageId":"562","endLine":58,"endColumn":44},{"ruleId":"553","severity":1,"message":"577","line":64,"column":7,"nodeType":"555","endLine":64,"endColumn":16,"suggestions":"640"},{"ruleId":"559","severity":1,"message":"560","line":85,"column":38,"nodeType":"561","messageId":"562","endLine":85,"endColumn":40},{"ruleId":"559","severity":1,"message":"586","line":88,"column":42,"nodeType":"561","messageId":"562","endLine":88,"endColumn":44},{"ruleId":"559","severity":1,"message":"560","line":100,"column":16,"nodeType":"561","messageId":"562","endLine":100,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":104,"column":16,"nodeType":"561","messageId":"562","endLine":104,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":108,"column":16,"nodeType":"561","messageId":"562","endLine":108,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":114,"column":16,"nodeType":"561","messageId":"562","endLine":114,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":48,"column":15,"nodeType":"561","messageId":"562","endLine":48,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":56,"column":15,"nodeType":"561","messageId":"562","endLine":56,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":60,"column":16,"nodeType":"561","messageId":"562","endLine":60,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":68,"column":16,"nodeType":"561","messageId":"562","endLine":68,"endColumn":18},{"ruleId":"553","severity":1,"message":"577","line":30,"column":7,"nodeType":"555","endLine":30,"endColumn":11,"suggestions":"641"},{"ruleId":"559","severity":1,"message":"560","line":57,"column":15,"nodeType":"561","messageId":"562","endLine":57,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":65,"column":15,"nodeType":"561","messageId":"562","endLine":65,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":69,"column":16,"nodeType":"561","messageId":"562","endLine":69,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":77,"column":16,"nodeType":"561","messageId":"562","endLine":77,"endColumn":18},{"ruleId":"549","severity":1,"message":"607","line":6,"column":15,"nodeType":"551","messageId":"552","endLine":6,"endColumn":25},{"ruleId":"559","severity":1,"message":"560","line":58,"column":42,"nodeType":"561","messageId":"562","endLine":58,"endColumn":44},{"ruleId":"553","severity":1,"message":"577","line":64,"column":7,"nodeType":"555","endLine":64,"endColumn":16,"suggestions":"642"},{"ruleId":"559","severity":1,"message":"560","line":85,"column":38,"nodeType":"561","messageId":"562","endLine":85,"endColumn":40},{"ruleId":"559","severity":1,"message":"586","line":88,"column":42,"nodeType":"561","messageId":"562","endLine":88,"endColumn":44},{"ruleId":"559","severity":1,"message":"560","line":100,"column":16,"nodeType":"561","messageId":"562","endLine":100,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":104,"column":16,"nodeType":"561","messageId":"562","endLine":104,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":108,"column":16,"nodeType":"561","messageId":"562","endLine":108,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":114,"column":16,"nodeType":"561","messageId":"562","endLine":114,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":48,"column":15,"nodeType":"561","messageId":"562","endLine":48,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":56,"column":15,"nodeType":"561","messageId":"562","endLine":56,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":60,"column":16,"nodeType":"561","messageId":"562","endLine":60,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":68,"column":16,"nodeType":"561","messageId":"562","endLine":68,"endColumn":18},{"ruleId":"553","severity":1,"message":"577","line":30,"column":7,"nodeType":"555","endLine":30,"endColumn":11,"suggestions":"643"},{"ruleId":"559","severity":1,"message":"560","line":57,"column":15,"nodeType":"561","messageId":"562","endLine":57,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":65,"column":15,"nodeType":"561","messageId":"562","endLine":65,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":69,"column":16,"nodeType":"561","messageId":"562","endLine":69,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":77,"column":16,"nodeType":"561","messageId":"562","endLine":77,"endColumn":18},{"ruleId":"549","severity":1,"message":"607","line":6,"column":15,"nodeType":"551","messageId":"552","endLine":6,"endColumn":25},{"ruleId":"559","severity":1,"message":"560","line":58,"column":42,"nodeType":"561","messageId":"562","endLine":58,"endColumn":44},{"ruleId":"553","severity":1,"message":"577","line":64,"column":7,"nodeType":"555","endLine":64,"endColumn":16,"suggestions":"644"},{"ruleId":"559","severity":1,"message":"560","line":85,"column":38,"nodeType":"561","messageId":"562","endLine":85,"endColumn":40},{"ruleId":"559","severity":1,"message":"586","line":88,"column":41,"nodeType":"561","messageId":"562","endLine":88,"endColumn":43},{"ruleId":"559","severity":1,"message":"560","line":100,"column":16,"nodeType":"561","messageId":"562","endLine":100,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":104,"column":16,"nodeType":"561","messageId":"562","endLine":104,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":108,"column":16,"nodeType":"561","messageId":"562","endLine":108,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":114,"column":16,"nodeType":"561","messageId":"562","endLine":114,"endColumn":18},{"ruleId":"549","severity":1,"message":"645","line":29,"column":23,"nodeType":"551","messageId":"552","endLine":29,"endColumn":27},{"ruleId":"553","severity":1,"message":"577","line":33,"column":7,"nodeType":"555","endLine":33,"endColumn":11,"suggestions":"646"},{"ruleId":"559","severity":1,"message":"560","line":66,"column":15,"nodeType":"561","messageId":"562","endLine":66,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":74,"column":15,"nodeType":"561","messageId":"562","endLine":74,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":78,"column":16,"nodeType":"561","messageId":"562","endLine":78,"endColumn":18},{"ruleId":"559","severity":1,"message":"560","line":86,"column":16,"nodeType":"561","messageId":"562","endLine":86,"endColumn":18},{"ruleId":"549","severity":1,"message":"647","line":5,"column":24,"nodeType":"551","messageId":"552","endLine":5,"endColumn":42},{"ruleId":"549","severity":1,"message":"569","line":6,"column":9,"nodeType":"551","messageId":"552","endLine":6,"endColumn":13},{"ruleId":"549","severity":1,"message":"563","line":6,"column":15,"nodeType":"551","messageId":"552","endLine":6,"endColumn":23},{"ruleId":"549","severity":1,"message":"648","line":8,"column":8,"nodeType":"551","messageId":"552","endLine":8,"endColumn":16},{"ruleId":"549","severity":1,"message":"570","line":9,"column":8,"nodeType":"551","messageId":"552","endLine":9,"endColumn":13},{"ruleId":"549","severity":1,"message":"609","line":10,"column":8,"nodeType":"551","messageId":"552","endLine":10,"endColumn":11},{"ruleId":"559","severity":1,"message":"560","line":38,"column":42,"nodeType":"561","messageId":"562","endLine":38,"endColumn":44},{"ruleId":"553","severity":1,"message":"577","line":43,"column":7,"nodeType":"555","endLine":43,"endColumn":14,"suggestions":"649"},{"ruleId":"559","severity":1,"message":"560","line":45,"column":15,"nodeType":"561","messageId":"562","endLine":45,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":53,"column":15,"nodeType":"561","messageId":"562","endLine":53,"endColumn":17},{"ruleId":"549","severity":1,"message":"565","line":1,"column":26,"nodeType":"551","messageId":"552","endLine":1,"endColumn":35},{"ruleId":"549","severity":1,"message":"565","line":1,"column":26,"nodeType":"551","messageId":"552","endLine":1,"endColumn":35},{"ruleId":"549","severity":1,"message":"650","line":15,"column":12,"nodeType":"551","messageId":"552","endLine":15,"endColumn":16},{"ruleId":"549","severity":1,"message":"651","line":15,"column":18,"nodeType":"551","messageId":"552","endLine":15,"endColumn":25},{"ruleId":"559","severity":1,"message":"560","line":33,"column":21,"nodeType":"561","messageId":"562","endLine":33,"endColumn":23},{"ruleId":"652","severity":1,"message":"653","line":60,"column":13,"nodeType":"654","messageId":"655","endLine":60,"endColumn":19},"no-native-reassign",["656"],"no-negated-in-lhs",["657"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'JsonWebTokenError' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["658"],"React Hook useEffect contains a call to 'setIsAdmin'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [permission] as a second argument to the useEffect Hook.",["659"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Redirect' is defined but never used.","'BASE_URL_BACK' is defined but never used.","'useEffect' is defined but never used.","no-duplicate-case","Duplicate case label.","SwitchCase","'Link' is defined but never used.","'Birds' is defined but never used.","React Hook useEffect has missing dependencies: 'configAxios' and 'id'. Either include them or remove the dependency array.",["660"],"'redirectPage' is assigned a value but never used.","'setRedirectPage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'configAxios', 'id', and 'jwtId.id'. Either include them or remove the dependency array.",["661"],"React Hook useEffect has a missing dependency: 'configAxios'. Either include it or remove the dependency array.",["662"],["663"],"no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'history' is assigned a value but never used.",["664"],"Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'configAxios' and 'user.id'. Either include them or remove the dependency array.",["665"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["666"],["667"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'useParams' is defined but never used.","'typeId' is assigned a value but never used.","'setTypeId' is assigned a value but never used.",["668"],["669"],["670"],["671"],["672"],"'refCardEdition' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'configAxios' and 'props.match.params.id'. Either include them or remove the dependency array.",["673"],"'useHistory' is defined but never used.",["674"],"'jwt' is defined but never used.",["675"],["676"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["677"],["678"],"React Hook useEffect has missing dependencies: 'configAxios' and 'isAdmin'. Either include them or remove the dependency array.",["679"],["680"],"no-dupe-keys","Duplicate key 'legend'.","ObjectExpression","'useRef' is defined but never used.",["681"],["682"],"'colorPicker' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has missing dependencies: 'configAxios' and 'token'. Either include them or remove the dependency array.",["683"],["684"],["685"],["686"],["687"],["688"],["689"],["690"],["691"],["692"],["693"],["694"],"'code' is assigned a value but never used.",["695"],"'BASE_URL_API_MAGIC' is defined but never used.","'BackCard' is defined but never used.",["696"],"'name' is assigned a value but never used.","'setName' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-global-assign","no-unsafe-negation",{"desc":"697","fix":"698"},{"desc":"699","fix":"700"},{"desc":"701","fix":"702"},{"desc":"703","fix":"704"},{"desc":"705","fix":"706"},{"desc":"707","fix":"708"},{"desc":"697","fix":"709"},{"desc":"710","fix":"711"},{"desc":"712","fix":"713"},{"desc":"712","fix":"714"},{"desc":"715","fix":"716"},{"desc":"717","fix":"718"},{"desc":"719","fix":"720"},{"desc":"721","fix":"722"},{"desc":"723","fix":"724"},{"desc":"725","fix":"726"},{"desc":"712","fix":"727"},{"desc":"712","fix":"728"},{"desc":"712","fix":"729"},{"desc":"730","fix":"731"},{"desc":"712","fix":"732"},{"desc":"733","fix":"734"},{"desc":"712","fix":"735"},{"desc":"715","fix":"736"},{"desc":"715","fix":"737"},{"desc":"738","fix":"739"},{"desc":"733","fix":"740"},{"desc":"715","fix":"741"},{"desc":"733","fix":"742"},{"desc":"715","fix":"743"},{"desc":"715","fix":"744"},{"desc":"733","fix":"745"},{"desc":"733","fix":"746"},{"desc":"715","fix":"747"},{"desc":"733","fix":"748"},{"desc":"715","fix":"749"},{"desc":"733","fix":"750"},{"desc":"715","fix":"751"},{"desc":"752","fix":"753"},"Update the dependencies array to be: [token]",{"range":"754","text":"755"},"Add dependencies array: [permission]",{"range":"756","text":"757"},"Update the dependencies array to be: [configAxios, id, urlId]",{"range":"758","text":"759"},"Update the dependencies array to be: [configAxios, id, jwtId.id]",{"range":"760","text":"761"},"Update the dependencies array to be: [configAxios, languageId]",{"range":"762","text":"763"},"Update the dependencies array to be: [configAxios, qualityId]",{"range":"764","text":"765"},{"range":"766","text":"755"},"Update the dependencies array to be: [configAxios, user.id, userName]",{"range":"767","text":"768"},"Update the dependencies array to be: [configAxios]",{"range":"769","text":"770"},{"range":"771","text":"770"},"Update the dependencies array to be: [configAxios, id]",{"range":"772","text":"773"},"Update the dependencies array to be: [card.type_id, configAxios]",{"range":"774","text":"775"},"Update the dependencies array to be: [card.color_id, configAxios]",{"range":"776","text":"777"},"Update the dependencies array to be: [card.edition_id, configAxios]",{"range":"778","text":"779"},"Update the dependencies array to be: [card.rarity_id, configAxios]",{"range":"780","text":"781"},"Update the dependencies array to be: [configAxios, props.match.params.id]",{"range":"782","text":"783"},{"range":"784","text":"770"},{"range":"785","text":"770"},{"range":"786","text":"770"},"Update the dependencies array to be: [cardEdition, configAxios]",{"range":"787","text":"788"},{"range":"789","text":"770"},"Update the dependencies array to be: [configAxios, isAdmin]",{"range":"790","text":"791"},{"range":"792","text":"770"},{"range":"793","text":"773"},{"range":"794","text":"773"},"Update the dependencies array to be: [configAxios, id, token]",{"range":"795","text":"796"},{"range":"797","text":"791"},{"range":"798","text":"773"},{"range":"799","text":"791"},{"range":"800","text":"773"},{"range":"801","text":"773"},{"range":"802","text":"791"},{"range":"803","text":"791"},{"range":"804","text":"773"},{"range":"805","text":"791"},{"range":"806","text":"773"},{"range":"807","text":"791"},{"range":"808","text":"773"},"Update the dependencies array to be: [configAxios, urlId]",{"range":"809","text":"810"},[450,452],"[token]",[835,835],", [permission]",[1879,1886],"[configAxios, id, urlId]",[1841,1843],"[configAxios, id, jwtId.id]",[2040,2052],"[configAxios, languageId]",[2251,2262],"[configAxios, qualityId]",[3887,3889],[1523,1533],"[configAxios, user.id, userName]",[2759,2761],"[configAxios]",[3454,3456],[1574,1578],"[configAxios, id]",[1949,1963],"[card.type_id, configAxios]",[2338,2353],"[card.color_id, configAxios]",[2734,2751],"[card.edition_id, configAxios]",[3129,3145],"[card.rarity_id, configAxios]",[2716,2718],"[configAxios, props.match.params.id]",[3080,3082],[1437,1439],[3051,3053],[3816,3829],"[cardEdition, configAxios]",[4009,4011],[4269,4271],"[configAxios, isAdmin]",[5029,5031],[1568,1572],[3041,3043],[1502,1506],"[configAxios, id, token]",[2290,2299],[1129,1133],[2298,2307],[1100,1104],[1095,1099],[2298,2307],[2295,2304],[1088,1092],[2287,2296],[1072,1076],[2296,2305],[1262,1266],[1495,1502],"[configAxios, urlId]"]