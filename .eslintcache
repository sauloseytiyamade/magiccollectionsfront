[{"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\index.js":"1","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\App.js":"2","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\reportWebVitals.js":"3","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\utils\\imports.js":"4","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\Routes.js":"5","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\utils\\auth.js":"6","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\pages\\Login\\index.js":"7","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\pages\\UserCollection\\index.js":"8","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\pages\\Register\\index.js":"9","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\utils\\variaveisAmbiente.js":"10","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\utils\\messages.js":"11","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\CardView\\index.js":"12","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditCardsCollection\\index.js":"13","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\Cards\\index.js":"14","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\MenuLeft\\index.js":"15","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddCardsCollection\\index.js":"16","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditionCards\\index.js":"17","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditEditionCards\\index.js":"18","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddEditionCards\\index.js":"19","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\Users\\index.js":"20","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\DashboardAdmin\\index.js":"21","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditUser\\index.js":"22","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\Dashboard\\index.js":"23","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\Loading\\index.js":"24","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\Modals\\index.js":"25","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\ConfigUser\\index.js":"26","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\ColorsCard\\index.js":"27","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddColorsCard\\index.js":"28","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditColorsCard\\index.js":"29","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\LanguageCard\\index.js":"30","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddLanguagesCard\\index.js":"31","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditLanguagesCard\\index.js":"32","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddQualityCard\\index.js":"33","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditQualitiesCard\\index.js":"34","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\QualitiesCard\\index.js":"35","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\RaritiesCard\\index.js":"36","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddRarityCard\\index.js":"37","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditRaritiesCard\\index.js":"38","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\TypesCard\\index.js":"39","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddTypesCard\\index.js":"40","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditTypesCard\\index.js":"41","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditionsCards\\index.js":"42","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditEditionsCards\\index.js":"43","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\LogView\\index.js":"44"},{"size":542,"mtime":1612744833312,"results":"45","hashOfConfig":"46"},{"size":242,"mtime":1613472241160,"results":"47","hashOfConfig":"46"},{"size":375,"mtime":1612744833314,"results":"48","hashOfConfig":"46"},{"size":2177,"mtime":1612744833315,"results":"49","hashOfConfig":"46"},{"size":572,"mtime":1613471321363,"results":"50","hashOfConfig":"46"},{"size":1136,"mtime":1613415893287,"results":"51","hashOfConfig":"46"},{"size":11226,"mtime":1613472460283,"results":"52","hashOfConfig":"46"},{"size":5518,"mtime":1613672334598,"results":"53","hashOfConfig":"46"},{"size":4940,"mtime":1613337978818,"results":"54","hashOfConfig":"46"},{"size":317,"mtime":1613419112120,"results":"55","hashOfConfig":"46"},{"size":3878,"mtime":1613644651101,"results":"56","hashOfConfig":"46"},{"size":3263,"mtime":1613434315332,"results":"57","hashOfConfig":"46"},{"size":6404,"mtime":1613419391877,"results":"58","hashOfConfig":"46"},{"size":9241,"mtime":1613434305725,"results":"59","hashOfConfig":"46"},{"size":9919,"mtime":1613646744337,"results":"60","hashOfConfig":"46"},{"size":7610,"mtime":1613602190331,"results":"61","hashOfConfig":"46"},{"size":13976,"mtime":1613599798287,"results":"62","hashOfConfig":"46"},{"size":8682,"mtime":1613601535699,"results":"63","hashOfConfig":"46"},{"size":7513,"mtime":1613434282254,"results":"64","hashOfConfig":"46"},{"size":7160,"mtime":1613600069474,"results":"65","hashOfConfig":"46"},{"size":13605,"mtime":1613672242410,"results":"66","hashOfConfig":"46"},{"size":5452,"mtime":1613600080321,"results":"67","hashOfConfig":"46"},{"size":18263,"mtime":1613434336020,"results":"68","hashOfConfig":"46"},{"size":1358,"mtime":1612744833291,"results":"69","hashOfConfig":"46"},{"size":1243,"mtime":1612744833292,"results":"70","hashOfConfig":"46"},{"size":5690,"mtime":1613434325058,"results":"71","hashOfConfig":"46"},{"size":6608,"mtime":1613508458967,"results":"72","hashOfConfig":"46"},{"size":3277,"mtime":1613599948571,"results":"73","hashOfConfig":"46"},{"size":3673,"mtime":1613508197475,"results":"74","hashOfConfig":"46"},{"size":6659,"mtime":1613508669406,"results":"75","hashOfConfig":"46"},{"size":3324,"mtime":1613558674249,"results":"76","hashOfConfig":"46"},{"size":3723,"mtime":1613558670124,"results":"77","hashOfConfig":"46"},{"size":3317,"mtime":1613558706664,"results":"78","hashOfConfig":"46"},{"size":3632,"mtime":1613558720124,"results":"79","hashOfConfig":"46"},{"size":6672,"mtime":1613508906173,"results":"80","hashOfConfig":"46"},{"size":6653,"mtime":1613511534819,"results":"81","hashOfConfig":"46"},{"size":3298,"mtime":1613558745194,"results":"82","hashOfConfig":"46"},{"size":3613,"mtime":1613558765657,"results":"83","hashOfConfig":"46"},{"size":6607,"mtime":1613558440172,"results":"84","hashOfConfig":"46"},{"size":3254,"mtime":1613558066847,"results":"85","hashOfConfig":"46"},{"size":3559,"mtime":1613558380408,"results":"86","hashOfConfig":"46"},{"size":6395,"mtime":1613647887452,"results":"87","hashOfConfig":"46"},{"size":4350,"mtime":1613647591908,"results":"88","hashOfConfig":"46"},{"size":3064,"mtime":1613673740242,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"tukzo8",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"92"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"92"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"92"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"92"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"92"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"92"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"92"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"92"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"92"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"92"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"92"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"92"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"92"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"92"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"92"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"92"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"92"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"92"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"92"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"92"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"92"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"92"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"92"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"92"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"92"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"92"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"92"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"92"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"92"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"92"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"92"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"92"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"92"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"92"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"92"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\index.js",[],["215","216"],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\App.js",[],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\reportWebVitals.js",[],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\utils\\imports.js",[],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\Routes.js",["217"],"import React from 'react';\r\nimport {BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom'\r\nimport Login from './pages/Login'\r\nimport Register from './pages/Register'\r\nimport UserCollection from './pages/UserCollection'\r\n\r\nexport default props => (\r\n    <Router>\r\n        <Switch>\r\n            <Route path='/login' exact component={Login} />\r\n            <Route path='/register' exact component={Register} />\r\n            <Route path='/' component={UserCollection} />\r\n            <Redirect from='*' to='/login' />\r\n        </Switch>\r\n    </Router>\r\n\r\n)","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\utils\\auth.js",["218","219","220","221"],"import { JsonWebTokenError } from 'jsonwebtoken';\r\nimport React, { useEffect, useState } from 'react';\r\nimport jwt from 'jsonwebtoken'\r\n\r\nexport const AuthContext = React.createContext()\r\n\r\nconst UseIsAuth = () => {\r\n    const [logged, setLogged] = useState()\r\n    const token = localStorage.getItem('token')\r\n    useEffect(() => {    \r\n        if(token){\r\n            setLogged(true)\r\n        }else{\r\n            setLogged(false)\r\n        }\r\n    }, [])\r\n\r\n    return logged\r\n}\r\n\r\nconst IsAdmin = () => {\r\n    const [isAdmin, setIsAdmin] = useState()\r\n    const token = localStorage.getItem('token')\r\n    const decodedToken = jwt.decode(token)\r\n    const {permission} = decodedToken || 1\r\n    useEffect(() => {\r\n        if(permission == 1){\r\n            setIsAdmin(false)\r\n        }else{\r\n            setIsAdmin(true)\r\n        }\r\n    })\r\n\r\n    return isAdmin\r\n}\r\n\r\nexport const AuthProvider = (props) => {\r\n    const logged = UseIsAuth()\r\n    const isAdmin = IsAdmin()\r\n    return(\r\n        <AuthContext.Provider value={{isAuth: logged, isAdmin: isAdmin}} >\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\n\r\n","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\pages\\Login\\index.js",["222","223","224","225"],"import {React, useState,} from 'react';\r\nimport Logo from '../../img/logo.png'\r\nimport axios from 'axios'\r\nimport {BASE_URL_BACK} from '../../utils/variaveisAmbiente'\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css'; \r\nimport {messages} from '../../utils/messages'\r\nimport {Link} from 'react-router-dom'\r\nimport {BASE_URL_FRONT} from '../../utils/variaveisAmbiente'\r\nimport GoogleLogin from 'react-google-login'\r\nimport FacebookLogin from 'react-facebook-login'\r\n\r\n\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport './index.css'\r\n\r\nconst Login = (props) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    //Pega os valores de e-mail e adiciona no estado\r\n    const onChangeMail = evt => {\r\n        setEmail(evt.target.value)\r\n    }\r\n\r\n    //Pega os valores de password e adiciona no estado\r\n    const onChangePass = evt => {\r\n        setPassword(evt.target.value)\r\n    }\r\n\r\n    //Envia os dados para o backend validar\r\n    const sendBack = (evt) => {\r\n        evt.preventDefault()\r\n\r\n        const data = {\r\n            email,\r\n            password\r\n        }\r\n\r\n        //Faz uma requisição post para o backend\r\n        axios.post(`${BASE_URL_BACK}/login`,data)\r\n        .then(resp => {\r\n            //Caso o login seja feito, é gerado um token e adicionado no localstorage\r\n            //Também é gerada uma mensagem para o usuário\r\n            toast.success('Seja Bem-Vindo(a)!!!')\r\n            localStorage.setItem('token', resp.data.token)\r\n            setTimeout(() => {\r\n                window.location.href = `${BASE_URL_FRONT}/cards`\r\n            }, 5000);\r\n        })\r\n        .catch(err => {\r\n            //Caso dê algum erro é enviada uma mensagem para o usuário\r\n            toast.info(messages(err.response.data.message))\r\n        })\r\n    }\r\n\r\n    //Esta função é utilizad para fazer login pelo google\r\n    const responseGoogle = (resp) => {\r\n        const {profileObj: {email, name, googleId}} = resp\r\n\r\n        //Verifica se existe algum usuário com o e-mail cadastrado no sistema\r\n        axios.get(`${BASE_URL_BACK}/users/${email}`)\r\n        .then(resp => {\r\n            if(resp.data.message == true){\r\n                const data = {\r\n                    email,\r\n                    password: googleId\r\n                }\r\n                //Se existir um usuário cadastrado no sistema ele tenta fazer o login\r\n                //Como existe três sistemas de login, optei por apresentar uma mensagem de erro genérica.\r\n                axios.post(`${BASE_URL_BACK}/login`,data)\r\n                .then(resp => {\r\n                    toast.success('Seja Bem-Vindo(a)!!!')\r\n                    localStorage.setItem('token', resp.data.token)\r\n                    setTimeout(() => {\r\n                        window.location.href = `${BASE_URL_FRONT}/cards`\r\n                    }, 5000);\r\n                })\r\n                .catch(err => {\r\n                    //Caso o usuário tente fazer o login com uma conta do google e já exista um usuário com o mesmo e-mail\r\n                    // O sistema informa que já existe usuário cadastrado\r\n                    toast.info('Existe um usuário em nosso sistema com este e-mail, por favor faça o login através do sistema')\r\n                })\r\n\r\n            }else{\r\n                //Se não existir nenhum e-mail cadastrado no sistema\r\n                //O sistema cadastra o novo e-mail e já efetiva o login\r\n               const data = {\r\n                   name,\r\n                   email,\r\n                   password: googleId\r\n               } \r\n\r\n               //Criação do usuário no backend\r\n               axios.post(`${BASE_URL_BACK}/users`,data)\r\n                .then(resp => {\r\n                    if(resp.data.message == 'user created'){\r\n                        toast.success('Você foi cadastrado com sucesso!!! Aguarde um momento...')\r\n                        const data = {\r\n                            email,\r\n                            password: googleId\r\n                        }\r\n\r\n                        setTimeout(() => {\r\n                            //O sistema apresenta a mensagem do cadastro por 5 segundos e já executa o login\r\n                            axios.post(`${BASE_URL_BACK}/login`,data)\r\n                            .then(resp => {\r\n                                toast.success('Seja Bem-Vindo(a)!!!')\r\n                                localStorage.setItem('token', resp.data.token)\r\n                                setTimeout(() => {\r\n                                    window.location.href = `${BASE_URL_FRONT}/cards`\r\n                                }, 5000);\r\n                            })\r\n                            .catch(err => {\r\n                                //Caso dê algum problema aparece esta mensagem\r\n                                toast.info('Opsss!! Algo deu errado, tente novamente mais tarde')\r\n                            })\r\n                        }, 5000);\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        .catch(err => {\r\n            //Caso dê algum problema aparece esta mensagem\r\n            toast.info('Opsss!! Algo deu errado, tente novamente mais tarde')\r\n        })\r\n        \r\n    }\r\n\r\n    //Esta função é utilizad para fazer login pelo facebook\r\n    const responseFacebook = (resp) => {\r\n        const {email, name, id } = resp\r\n\r\n        //Verifica se existe algum usuário com o e-mail cadastrado no sistema\r\n        axios.get(`${BASE_URL_BACK}/users/${email}`)\r\n        .then(resp => {\r\n            if(resp.data.message == true){\r\n                const data = {\r\n                    email,\r\n                    password: id\r\n                }\r\n                //Se existir um usuário cadastrado no sistema ele tenta fazer o login\r\n                //Como existe três sistemas de login, optei por apresentar uma mensagem de erro genérica.\r\n                axios.post(`${BASE_URL_BACK}/login`,data)\r\n                .then(resp => {\r\n                    toast.success('Seja Bem-Vindo(a)!!!')\r\n                    localStorage.setItem('token', resp.data.token)\r\n                    setTimeout(() => {\r\n                        window.location.href = `${BASE_URL_FRONT}/cards`\r\n                    }, 5000);\r\n                })\r\n                .catch(err => {\r\n                    //Caso o usuário tente fazer o login com uma conta do facebook e já exista um usuário com o mesmo e-mail\r\n                    // O sistema informa que já existe usuário cadastrado\r\n                    toast.info('Existe um usuário em nosso sistema com este e-mail, por favor faça o login através do sistema')\r\n                })\r\n\r\n            }else{\r\n                //Se não existir nenhum e-mail cadastrado no sistema\r\n                //O sistema cadastra o novo e-mail e já efetiva o login\r\n                const data = {\r\n                    name,\r\n                    email,\r\n                    password: id\r\n                } \r\n                //Criação do usuário no backend\r\n               axios.post(`${BASE_URL_BACK}/users`,data)\r\n                .then(resp => {\r\n                    if(resp.data.message == 'user created'){\r\n                        toast.success('Você foi cadastrado com sucesso!!! Aguarde um momento...')\r\n                        const data = {\r\n                            email,\r\n                            password: id\r\n                        }\r\n\r\n                        setTimeout(() => {\r\n                            //O sistema apresenta a mensagem do cadastro por 5 segundos e já executa o login\r\n                            axios.post(`${BASE_URL_BACK}/login`,data)\r\n                            .then(resp => {\r\n                                toast.success('Seja Bem-Vindo(a)!!!')\r\n                                localStorage.setItem('token', resp.data.token)\r\n                                setTimeout(() => {\r\n                                    window.location.href = `${BASE_URL_FRONT}/cards`\r\n                                }, 5000);\r\n                            })\r\n                            .catch(err => {\r\n                                //Caso dê algum problema aparece esta mensagem\r\n                                toast.info('Existe um usuário em nosso sistema com este e-mail, por favor faça o login através do sistema')\r\n                            })\r\n                        }, 5000);\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        .catch(err => {\r\n            //Caso dê algum problema aparece esta mensagem\r\n            toast.info('Opsss!! Algo deu errado, tente novamente mais tarde')\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className='wrapper'>\r\n        <div className='row text-center contentLogin'>\r\n        <div className='col-md-6 offset-md-3 col-10 offset-1'>\r\n            <img src={Logo} className='img-fluid' alt='Logo Magic Collections'/>\r\n            <form onSubmit={sendBack}>\r\n                <div className='row'>\r\n                    <div className='col-md-6 offset-md-3 col-10 offset-1'>\r\n                    <div className='input-group mb-3'>\r\n                        <input type='text' name='email' value={email} onChange={onChangeMail} className='form-control' placeholder='E-mail' autoFocus required />\r\n                        <div className='input-group-prepend'>\r\n                        <span className='input-group-text'><i className='fas fa-envelope'></i></span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='input-group mb-3'>\r\n                        <input type='password' value={password} onChange={onChangePass} className='form-control' placeholder='Senha' required/>\r\n                        <div className='input-group-prepend'>\r\n                        <span className='input-group-text'><i className='fas fa-unlock-alt'></i></span>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <button type='submit' className='btn btn-dark mb-2'>Entrar</button>\r\n                </div>\r\n                <div>\r\n                    <GoogleLogin\r\n                        clientId=\"791822174732-erldq4nsbg2sk70iv0i6p0gcm1gja3qf.apps.googleusercontent.com\"\r\n                        buttonText=\"Login Magic Collections\"\r\n                        onSuccess={responseGoogle}\r\n                        onFailure={responseGoogle}\r\n                        cookiePolicy={'single_host_origin'}\r\n                        className=\"mb-2\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <FacebookLogin\r\n                    appId=\"693791067965683\"\r\n                    fields=\"name,email,picture\"\r\n                    callback={responseFacebook} \r\n                    cssClass=\"my-facebook-button-class mb-2\"\r\n                    />\r\n                </div>\r\n                <p>Não tem uma conta? <Link to='/register'>Crie sua conta agora!</Link></p>\r\n            </form>\r\n            <ToastContainer />\r\n        </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\pages\\UserCollection\\index.js",["226","227","228","229"],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\pages\\Register\\index.js",["230","231","232","233"],"import {React, useState, useEffect} from 'react';\r\nimport Logo from '../../img/logo.png'\r\nimport axios from 'axios'\r\nimport {BASE_URL_BACK, BASE_URL_FRONT} from '../../utils/variaveisAmbiente'\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css'; \r\nimport {messages} from '../../utils/messages'\r\n\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport './index.css'\r\n\r\nconst Login = (props) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [passwordConfirm, setPasswordConfirm] = useState('')\r\n    const [name, setName] = useState('')\r\n\r\n    const onChangeMail = evt => {\r\n        setEmail(evt.target.value)\r\n    }\r\n\r\n    const onChangePass = evt => {\r\n        setPassword(evt.target.value)\r\n    }\r\n\r\n    const onChangePassConfirm = evt => {\r\n        setPasswordConfirm(evt.target.value)\r\n    }\r\n\r\n    const onChangeName = evt => {\r\n        setName(evt.target.value)\r\n    }\r\n\r\n    const sendBack = (evt) => {\r\n        evt.preventDefault()\r\n\r\n        if(password == passwordConfirm){\r\n            const data = {\r\n                name,\r\n                email,\r\n                password\r\n            }\r\n            \r\n            axios.get(`${BASE_URL_BACK}/users/${email}`)\r\n            .then(resp => {\r\n                if(resp.data.message == true){\r\n                    toast.info('Já existe um usuário cadastrado em nosso sistema com este e-mail')\r\n                    setTimeout(() => {\r\n                        window.location.href = `${BASE_URL_FRONT}/login`\r\n                    }, 5000)\r\n                }else{\r\n                    axios.post(`${BASE_URL_BACK}/users`,data)\r\n                    .then(resp => {\r\n                        if(resp.data.message == 'user created'){\r\n                            toast.success('Cadastro realizado com sucesso!! Seja Bem-Vindo(a)!!')\r\n                            setTimeout(() => {\r\n                                window.location.href = `${BASE_URL_FRONT}/login`\r\n                            }, 5000)\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        toast.info(messages(err.response.data.message))\r\n                    })\r\n                }\r\n            })\r\n        }else{\r\n            toast.info('As senhas não coincidem')\r\n        }\r\n            \r\n    }\r\n\r\n    return(\r\n        <div className='wrapper'>\r\n        <div className='row text-center contentLogin'>\r\n        <div className='col-md-6 offset-md-3 col-10 offset-1'>\r\n            <img src={Logo} className='img-fluid' alt='Logo Magic Collections'/>\r\n            <form onSubmit={sendBack}>\r\n                <div className='row'>\r\n                    <div className='col-md-6 offset-md-3 col-10 offset-1'>\r\n                        <div className='input-group mb-3'>\r\n                            <input type='text' name='name' value={name} onChange={onChangeName} className='form-control' placeholder='Nome completo' autoFocus required />\r\n                            <div className='input-group-prepend'>\r\n                            <span className='input-group-text'><i className='fas fa-user'></i></span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='input-group mb-3'>\r\n                            <input type='text' name='email' value={email} onChange={onChangeMail} className='form-control' placeholder='E-mail' required />\r\n                            <div className='input-group-prepend'>\r\n                            <span className='input-group-text'><i className='fas fa-envelope'></i></span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='input-group mb-3'>\r\n                            <input type='password' value={password} onChange={onChangePass} className='form-control' placeholder='Senha' required/>\r\n                            <div className='input-group-prepend'>\r\n                            <span className='input-group-text'><i className='fas fa-unlock-alt'></i></span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='input-group mb-3'>\r\n                            <input type='password' value={passwordConfirm} onChange={onChangePassConfirm} className='form-control' placeholder='Confirme sua senha' required/>\r\n                            <div className='input-group-prepend'>\r\n                            <span className='input-group-text'><i className='fas fa-unlock-alt'></i></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button type='submit' className='btn btn-dark mb-2'>Cadastrar-se</button>\r\n            </form>\r\n            <ToastContainer />\r\n        </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\utils\\variaveisAmbiente.js",[],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\utils\\messages.js",["234","235"],"const messages = (error) => {\r\n    switch (error) {\r\n        case 'user or password invalid':\r\n            return 'Usuário ou senha inválidos'\r\n        case 'invalid email':\r\n            return 'Seu e-mail está inválido'\r\n        case 'user exist':\r\n            return 'Este usuário já está cadastrado'\r\n        case 'user not found':\r\n            return 'Este usuário não está cadastrado'\r\n        case 'Token invalid':\r\n            return 'Opss!! Houve algum problema na autenticação, você será redirecionado para a página de login'\r\n        case 'card exist collection':\r\n            return 'Opss!! Este card já existe na sua coleção'\r\n        case 'card collection created':\r\n            return 'Card criado com sucesso!!'\r\n        case 'card collection updated':\r\n            return 'Card atualizado com sucesso'\r\n        case 'edition created':\r\n            return 'Edição criada com sucesso'\r\n        case 'edition exist':\r\n            return 'Opss!! Esta edição já existe'\r\n        case 'card deleted':\r\n            return 'Card excluído com sucesso'\r\n        case 'card collection deleted':\r\n            return 'Card excluído com sucesso'\r\n        case 'card exist':\r\n            return 'Opss!! Este card já existe'\r\n        case 'card created':\r\n            return 'Card criado com sucess'\r\n        case 'card updated':\r\n            return 'Card atualizado com sucesso'\r\n        case 'user deleted':\r\n            return 'Usuário deletado com sucesso'\r\n        case 'user updated':\r\n            return 'Usuário atualizado com sucesso'\r\n        case 'file not supported':\r\n            return 'Arquivo não suportado. Apenas imagens são suportadas'\r\n        case 'No token provided':\r\n            return 'Houve algum problema no sistema!!!'\r\n        case 'color created':\r\n            return 'Cor criada com sucesso'\r\n        case 'color exist':\r\n            return 'Cor já existe'\r\n        case 'color updated':\r\n            return 'Cor atualizada com sucesso'\r\n        case 'color deleted':\r\n            return 'Cor excluída com sucesso'\r\n        case 'language created':\r\n            return 'Linguagem criada com sucesso'\r\n        case 'language exist':\r\n            return 'Linguagem já existe'\r\n        case 'language updated':\r\n            return 'Linguagem atualizada com sucesso'\r\n        case 'language deleted':\r\n            return 'Linguagem excluída com sucesso'\r\n        case 'quality created':\r\n            return 'Qualitdade criada com sucesso'\r\n        case 'quality exist':\r\n            return 'Qualitdade já existe'\r\n        case 'quality updated':\r\n            return 'Qualitdade atualizada com sucesso'\r\n        case 'quality deleted':\r\n            return 'Qualitdade excluída com sucesso'\r\n        case 'rarity created':\r\n            return 'Raridade criada com sucesso'\r\n        case 'rarity exist':\r\n            return 'Raridade já existe'\r\n        case 'rarity updated':\r\n            return 'Raridade atualizada com sucesso'\r\n        case 'rarity deleted':\r\n            return 'Raridade excluída com sucesso'\r\n        case 'type created':\r\n            return 'Tipo criado com sucesso'\r\n        case 'type exist':\r\n            return 'Tipo já existe'\r\n        case 'type updated':\r\n            return 'Tipo atualizado com sucesso'\r\n        case 'type deleted':\r\n            return 'Tipo excluído com sucesso'\r\n        case 'edition created':\r\n            return 'Edição criada com sucesso'\r\n        case 'edition exist':\r\n            return 'Edição já existe'\r\n        case 'edition updated':\r\n            return 'Edição atualizada com sucesso'\r\n        case 'edition deleted':\r\n            return 'Edição excluída com sucesso'\r\n        case 'Unauthorized':\r\n            return 'Opss!!! Você não é autorizado'\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    messages\r\n}","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\CardView\\index.js",["236","237","238","239","240","241","242"],"import React, {useEffect, useRef, useState, useContext} from 'react';\r\nimport Loading from '../Loading'\r\nimport axios from 'axios';\r\nimport {BASE_URL_BACK, BASE_URL_API_MAGIC, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport BackCard from '../../img/backCard.png'\r\nimport Birds from '../../img/aves_do_paraiso.png'\r\nimport jwt from 'jsonwebtoken'\r\nimport _ from 'lodash'\r\n\r\nconst CardView = (props) => {\r\n\r\n    let {isAuth} = useContext(AuthContext)\r\n    const urlId = props.match.params.id\r\n    const token = localStorage.getItem('token')\r\n    const {id} = jwt.decode(token)\r\n    const [card, setCard] = useState([])\r\n    const [imageUrl, setImageUrl] = useState('')\r\n    const refLoading = useRef()\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/collections/${id}`,configAxios)\r\n        .then(resp => {\r\n            const data = _.filter(resp.data, {'id': parseInt(urlId)})\r\n            setCard(data)\r\n\r\n            axios.get(`${BASE_URL_API_MAGIC}?name=${data[0].card_name}&language=Portuguese (Brazil)`)\r\n            .then(resp => {\r\n                const data = []\r\n\r\n                _.map(resp.data.cards, img => {\r\n                    if(_.has(img, 'imageUrl')){\r\n                        data.push(img)\r\n                    }\r\n                })\r\n\r\n                setImageUrl(data[0].imageUrl)\r\n                setTimeout(() => {\r\n                    refLoading.current.executeLoading()\r\n                }, 1000);\r\n\r\n            })\r\n        })\r\n        .catch(err => {\r\n            if(err.response.data.message == 'token invalid'){\r\n                window.location.href = `${BASE_URL_LOGIN}`\r\n            }\r\n        })\r\n        \r\n    },[urlId])\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    return(\r\n        <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                    <div className=\"col-12 mt-2 mb-2\">\r\n                        <h1>{card[0]?.card_name}</h1>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-2\">\r\n                        <img src={imageUrl || BackCard} alt=\"\" width='90%'/>\r\n                    </div>\r\n                    <div className=\"col-lg-10 mt-2\">\r\n                        <p><b>Nome da Carta:</b> {card[0]?.card_name}</p>\r\n                        <p><b>Tipo da carta:</b> {card[0]?.card_type}</p>\r\n                        <p><b>Cor da carta:</b> {card[0]?.card_color}</p>\r\n                        <p><b>Edição da carta:</b> {card[0]?.edition}</p>\r\n                        <p><b>Raridade da carta:</b> {card[0]?.rarity}</p>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <Loading \r\n                    ref={refLoading}\r\n                />\r\n            </section>\r\n\r\n    )\r\n}\r\n\r\nexport default CardView","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditCardsCollection\\index.js",["243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258"],"import React, { useEffect, useState, useRef, useContext } from 'react';\r\nimport axios from 'axios'\r\nimport jwt from 'jsonwebtoken'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport {messages} from '../../utils/messages'\r\nimport _ from 'lodash'\r\nimport { useHistory, useParams, Link, Redirect } from 'react-router-dom';\r\n\r\nconst EditCardsCollection = (props) => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    const token = localStorage.getItem('token')\r\n    const {id} = useParams()\r\n    const history = useHistory()\r\n    const [cardId, setCardId] = useState()\r\n    const [cardName, setCardName] = useState()\r\n    const [qualityId, setQualityId] = useState('')\r\n    const [cardQuality, setCardQuality] = useState([])\r\n    const [languageId, setLanguageId] = useState([])\r\n    const [cardLanguage, setCardLanguage] = useState([])\r\n    const [quantity, setQuantity] = useState('')\r\n    const [redirectPage, setRedirectPage] = useState(false)\r\n    const refQuality = useRef()\r\n    const refLanguage = useRef()\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n    const jwtId = jwt.decode(token)\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/collections/${jwtId.id}`,configAxios)\r\n        .then(resp => {\r\n            setQualityId(resp.data.filter(card => card.id == id )[0].quality_id);\r\n            setLanguageId(resp.data.filter(card => card.id == id )[0].language_id)\r\n            setCardName(resp.data.filter(card => card.id == id )[0].card_name)\r\n            setQuantity(resp.data.filter(card => card.id == id )[0].quantity)\r\n            setCardId(resp.data.filter(card => card.id == id )[0].card_id)\r\n        })\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardlanguages`,configAxios)\r\n            .then(resp => {\r\n                setCardLanguage(resp.data.language)\r\n            })\r\n    },[languageId])\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardqualities`,configAxios)\r\n            .then(resp => {\r\n                    setCardQuality(resp.data.quality)\r\n            })\r\n    },[qualityId])\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    const cardQuantity = evt => {\r\n        setQuantity(evt.target.value)\r\n    }\r\n\r\n    const saveCard = (evt) => {\r\n        evt.preventDefault()\r\n        const obj = {\r\n            user_id: jwtId.id,\r\n            cardLanguage_id: parseInt(refLanguage.current.value),\r\n            cardQuality_id: parseInt(refQuality.current.value),\r\n            cards_id: cardId,\r\n            quantity: parseInt(quantity)\r\n        }\r\n        \r\n        axios.put(`${BASE_URL_BACK}/collections/${props.match.params.id}`,obj,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message = \"card collection updated\"){\r\n                    toast.success(messages('card collection updated'))\r\n                    setTimeout(() => {\r\n                        history.push('/cards')\r\n                    }, 5000);\r\n                }\r\n            })\r\n    }\r\n\r\n    const renderQuality = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Qualidade da Carta</label>\r\n                <select name={'quality'} className=\"form-control\" ref={refQuality} required>\r\n                   {qualityId > 0 && _.orderBy(cardQuality,[i => i.id == qualityId],['desc']).map(quality => {\r\n                        return(\r\n                            <option key={quality.id} value={quality.id}>{quality.quality}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderLanguage = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Idioma da Carta</label>\r\n                <select className=\"form-control\" name={'language'} ref={refLanguage} required>\r\n                    {languageId > 0 && _.orderBy(cardLanguage,[i => i.id == languageId],['desc']).map(language => {\r\n                        return(\r\n                            <option key={language.id} value={language.id}>{language.language}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                <div className=\"col-12 mt-2 mb-3\">\r\n                    <h1>Cadastro de Cards</h1>\r\n                </div>\r\n                </div>\r\n\r\n                <form onSubmit={saveCard}>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-4\">\r\n                        <div className=\"form-group\">\r\n                        <label>Nome da Carta</label>\r\n                        <input type=\"number\" className=\"form-control\" value={cardName || ''}  placeholder={cardName} disabled={true} />\r\n                        </div>\r\n                    </div>\r\n                    {renderQuality()}\r\n                    {renderLanguage()}\r\n                    <div className=\"col-lg-4\">\r\n                        <div className=\"form-group\">\r\n                        <label>Quantidade de Carta</label>\r\n                        <input type=\"number\" className=\"form-control\" value={quantity} onChange={cardQuantity} placeholder=\"Digite a quantidade de cartas\"  required />\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <button type=\"submit\" className=\"btn btn-dark mr-2\">Atualizar</button>\r\n                        <Link className=\"btn btn-dark mr-2\" to='/cards'>Voltar</Link>\r\n                    </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <ToastContainer />\r\n        </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditCardsCollection","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\Cards\\index.js",["259","260","261","262","263","264"],"import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport './index.css'\r\nimport axios from 'axios'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {messages} from '../../utils/messages'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport jwt from 'jsonwebtoken'\r\nimport $ from 'jquery'\r\nimport Modals from '../Modals'\r\nimport Loading from '../Loading'\r\n\r\nconst Cards = () => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    const history = useHistory()\r\n    const [data, setData] = useState([])\r\n    const token = localStorage.getItem('token')\r\n    const [lineId, setLineId] = useState()\r\n    const refModal = useRef()\r\n    const refLoading = useRef()\r\n    \r\n    useEffect(() => {\r\n            const configAxios = {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            }\r\n    \r\n            const {id} = jwt.decode(token) || 'error'\r\n    \r\n            axios.get(`${BASE_URL_BACK}/collections/${id}`,configAxios)\r\n                .then(resp => {\r\n                    setData(resp.data)\r\n                    $(document).ready(function(){\r\n                        let dataTable = $('#dataTable').DataTable({\r\n                            \"responsive\": true,\r\n                            \"autoWidth\": false,\r\n                            \"lengthChange\": false,\r\n                            \"pageLength\": 10,\r\n                            \"bInfo\" : false,\r\n                            \"language\": {\r\n                                \"paginate\": {\r\n                                  \"previous\": \"Anterior\",\r\n                                  \"next\": \"Próxima\"\r\n                                },\r\n                                \"emptyTable\": \"Não existe dados para serem carregados\"\r\n                            },\r\n                            buttons: [\r\n                                { \r\n                                    extend: 'pdfHtml5',\r\n                                    customize: function(doc) {\r\n                                        doc.styles.tableBodyEven.alignment = 'center';\r\n                                        doc.styles.tableBodyOdd.alignment = 'center'; \r\n                                    },\r\n                                    exportOptions:{\r\n                                        columns: [0,1,2,3,4,5,6,7]\r\n                                    }\r\n                                },\r\n                                { \r\n                                    extend: 'excel',\r\n                                    exportOptions:{\r\n                                        columns: [0,1,2,3,4,5,6,7]\r\n                                    }\r\n                                }\r\n                            ]\r\n                        })\r\n\r\n                        $('#searchBarTec').on('keyup change', function () {\r\n                            dataTable.search(this.value).draw();\r\n                        })\r\n\r\n                        $('#exportExcel').on('click', function() {\r\n                            dataTable.button('.buttons-excel').trigger();\r\n                        });\r\n\r\n                        $('#exportPdf').on('click', function() {\r\n                            dataTable.button('.buttons-pdf').trigger();\r\n                        });\r\n\r\n                        refLoading.current.executeLoading()\r\n                    })\r\n                })\r\n                .catch(err => {\r\n                    toast.info(messages(err.response.data.message))\r\n                    if(err.response.data.message == 'Token invalid'){\r\n                        setTimeout(() => {\r\n                            window.location.href = `${BASE_URL_LOGIN}`\r\n                        }, 5000);\r\n                    }\r\n                })\r\n    },[])\r\n\r\n    if(isAuth == false){\r\n        window.location.href = `${BASE_URL_LOGIN}`\r\n    }\r\n\r\n    const deleteItem = () => {\r\n        const configAxios = {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }\r\n\r\n        axios.delete(`${BASE_URL_BACK}/collections/${lineId}`,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message == 'card collection deleted'){\r\n                    toast.success(messages(resp.data.message))\r\n                    const filtered = data.filter(cards => {\r\n                        return cards.id != lineId\r\n                    })            \r\n                    setData(filtered)\r\n                    refModal.current.openModal()\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const renderRow = () => {\r\n        return data.map(line => (\r\n                <tr key={line.id}>\r\n                    <td>{line.card_name}</td>\r\n                    <td className=\"text-center\">{line.card_type}</td>\r\n                    <td className=\"text-center\">{line.card_color}</td>\r\n                    <td className=\"text-center\">{line.edition}</td>\r\n                    <td className=\"text-center\">{line.rarity}</td>\r\n                    <td className=\"text-center\">{line.quality}</td>\r\n                    <td className=\"text-center\">{line.language}</td>\r\n                    <td className=\"text-center\">{line.quantity}</td>\r\n                    <td className=\"text-center\"><Link className='link_text_pen' to={`cardview/${line.id}`}><i className=\"fas fa-eye click\"></i></Link></td>\r\n                    <td className=\"text-center\"><Link className='link_text_pen' to={`editcard/${line.id}`}><i className=\"fas fa-pencil-alt click\"></i></Link></td>\r\n                    <td className=\"text-center\"><i className=\"fas fa-trash-alt click\" onClick={() => openModal(line.id)}></i></td>\r\n                </tr>\r\n            )\r\n        )\r\n    }\r\n\r\n    const openModal = (id) => {\r\n        setLineId(id)\r\n        refModal.current.openModal()\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            \r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                    <div className=\"col-12 mt-2 mb-2\">\r\n                        <h1>Minha Coleção</h1>\r\n                    </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-9\">\r\n                            <div className=\"input-group mb-3\">\r\n                            <input type=\"email\" className=\"form-control\" id=\"searchBarTec\" placeholder=\"Qual carta você está procurando?\" />\r\n                            <div className=\"input-group-append\">\r\n                                <div className=\"input-group-text\">\r\n                                <i className=\"fas fa-search\"></i>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-3 mb-2 mr-0\">\r\n                            <button type=\"button\" className=\"btn btn-dark mr-1\"><Link className='link_text' to='/addcard'>Adicionar</Link></button>\r\n                            <button type=\"button\" className=\"btn btn-dark mr-1\" id='exportPdf'>PDF</button>\r\n                            <button type=\"button\" className=\"btn btn-dark mr-1\" id='exportExcel'>Excel</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <table id=\"dataTable\" className=\"table table-bordered table-responsive-sm table-responsive-md\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Nome</th>\r\n                            <th className=\"text-center\">Tipo</th>\r\n                            <th className=\"text-center\">Cor</th>\r\n                            <th className=\"text-center\">Edição</th>\r\n                            <th className=\"text-center\">Raridade</th>\r\n                            <th className=\"text-center\">Qualidade</th>\r\n                            <th className=\"text-center\">Idioma</th>\r\n                            <th className=\"text-center\">Quantidade</th>\r\n                            <th className=\"text-center\">Visualizar</th>\r\n                            <th className=\"text-center\">Editar</th>\r\n                            <th className=\"text-center\">Remover</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {renderRow()}\r\n                        </tbody>\r\n                        </table>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <ToastContainer />\r\n            <Modals \r\n                title='Exclusão de card'\r\n                body='Deseja realmente excluir este card?'\r\n                nameButton='Excluir'\r\n                deleteItem={deleteItem}\r\n                ref={refModal}\r\n            />\r\n            <Loading \r\n                ref={refLoading}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\MenuLeft\\index.js",["265","266","267","268","269","270"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport ImgDefault from '../../img/imgDefault.png'\r\nimport jwt from 'jsonwebtoken'\r\nimport {Link, Redirect, useHistory} from 'react-router-dom'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {messages} from '../../utils/messages'\r\nimport axios from 'axios';\r\nimport _ from 'lodash'\r\nimport './index.css'\r\n\r\nconst MenuLeft = () => {\r\n    const history = useHistory()\r\n    const [userName, setUserName] = useState('User')\r\n    const [photo, setPhoto] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const user = jwt.decode(token) || 0\r\n    let {isAdmin} = useContext(AuthContext)\r\n    let {isAuth} = useContext(AuthContext)\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/users`,configAxios)\r\n        .then(resp => {\r\n            const userFilter = _.filter(resp.data, {'id': user.id})\r\n            const userNameFilter = userFilter[0].name\r\n            const photoFilter = userFilter[0].photo\r\n            setPhoto(photoFilter)\r\n            setUserName(userNameFilter)\r\n            \r\n        })\r\n        .catch(err => {\r\n            //Caso dê algum erro é enviada uma mensagem para o usuário\r\n            toast.info(messages(err.response.data.message))\r\n        })\r\n    },[userName])\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            <Redirect to='/login' />\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    const sair = () => {\r\n        localStorage.removeItem('token')\r\n        toast.info('Tchauzinho Planeswalker!!!')\r\n        setTimeout(() => {\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        }, 5000);\r\n    }\r\n    \r\n    return(\r\n        <>\r\n            <nav className=\"main-header navbar navbar-expand navbar-white navbar-light\">\r\n                <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" data-widget=\"pushmenu\" href=\"#\" role=\"button\"><i className=\"fas fa-bars\"></i></a>\r\n                </li>\r\n                </ul>\r\n            </nav>\r\n            <aside className=\"main-sidebar sidebar-dark-primary elevation-4\">\r\n                <a href=\"#\" className=\"brand-link\">\r\n                    <span className=\"brand-text font-weight-bold ml-2\">\r\n                        MAGIC COLLECTIONS\r\n                    </span>\r\n                </a>\r\n                <div className=\"sidebar\">\r\n                    <img src={photo || ImgDefault} className=\"img-circle mx-auto d-block image_avatar\" alt=\"Guilherme Souza\" />\r\n                    <div className=\"text-white text-center ml-2 text-bold\">\r\n                        {isAdmin &&\r\n                            <i className=\"far fa-gem text-warning\"></i> \r\n                        } {userName}\r\n                    </div>\r\n                    <hr className=\"hrWhite\" />\r\n                    <nav>\r\n                        <ul className=\"nav nav-pills nav-sidebar flex-column\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to='/dashboard' className=\"nav-link\">\r\n                                    <i className=\"fas fa-tachometer-alt text-white mr-2\"></i>\r\n                                    <p className=\"text-white text-bold\">Dashboard</p>\r\n                                </Link>\r\n                            </li>\r\n                            {isAdmin &&\r\n                                <li className=\"nav-item\">\r\n                                    <Link to='/dashboardadmin' className=\"nav-link\">                                    \r\n                                        <i className=\"fas fa-tachometer-alt text-white mr-2\"></i>\r\n                                        <p className=\"text-white text-bold\">Dashboard Admin</p>\r\n                                    </Link>\r\n                                </li>\r\n                            }\r\n                            <li className=\"nav-item\">\r\n                                <Link to='/cards' className=\"nav-link\">                                    \r\n                                    <i className=\"fab fa-wizards-of-the-coast text-white mr-2\"></i>\r\n                                    <p className=\"text-white text-bold\">Minha Coleção</p>\r\n                                </Link>\r\n                            </li>\r\n                            {isAdmin &&\r\n                                <li className=\"nav-item\">\r\n                                    <Link to='/editioncards' className=\"nav-link\">                                    \r\n                                        <i className=\"fab fa-wizards-of-the-coast text-white mr-2\"></i>\r\n                                        <p className=\"text-white text-bold\">Cadastro de cards</p>\r\n                                    </Link>\r\n                                </li>\r\n                            }\r\n                            {isAdmin &&\r\n                                <li className=\"nav-item\">\r\n                                    <Link to='/colors' className=\"nav-link\">                                    \r\n                                        <i className=\"fab fa-wizards-of-the-coast text-white mr-2\"></i>\r\n                                        <p className=\"text-white text-bold\">Cadastro de cores</p>\r\n                                    </Link>\r\n                                </li>\r\n                            }\r\n                            {isAdmin &&\r\n                                <li className=\"nav-item\">\r\n                                    <Link to='/languages' className=\"nav-link\">                                    \r\n                                        <i className=\"fab fa-wizards-of-the-coast text-white mr-2\"></i>\r\n                                        <p className=\"text-white text-bold\">Cadastro de idiomas</p>\r\n                                    </Link>\r\n                                </li>\r\n                            }\r\n                            {isAdmin &&\r\n                                <li className=\"nav-item\">\r\n                                    <Link to='/qualities' className=\"nav-link\">                                    \r\n                                        <i className=\"fab fa-wizards-of-the-coast text-white mr-2\"></i>\r\n                                        <p className=\"text-white text-bold\">Cadastro da Qualidade</p>\r\n                                    </Link>\r\n                                </li>\r\n                            }\r\n                            {isAdmin &&\r\n                                <li className=\"nav-item\">\r\n                                    <Link to='/rarities' className=\"nav-link\">                                    \r\n                                        <i className=\"fab fa-wizards-of-the-coast text-white mr-2\"></i>\r\n                                        <p className=\"text-white text-bold\">Cadastro de Raridade</p>\r\n                                    </Link>\r\n                                </li>\r\n                            }\r\n                            {isAdmin &&\r\n                                <li className=\"nav-item\">\r\n                                    <Link to='/types' className=\"nav-link\">                                    \r\n                                        <i className=\"fab fa-wizards-of-the-coast text-white mr-2\"></i>\r\n                                        <p className=\"text-white text-bold\">Cadastro de Tipo</p>\r\n                                    </Link>\r\n                                </li>\r\n                            }\r\n                            {isAdmin &&\r\n                                <li className=\"nav-item\">\r\n                                    <Link to='/editions' className=\"nav-link\">                                    \r\n                                        <i className=\"fab fa-wizards-of-the-coast text-white mr-2\"></i>\r\n                                        <p className=\"text-white text-bold\">Alterar edições</p>\r\n                                    </Link>\r\n                                </li>\r\n                            }\r\n                            {isAdmin &&\r\n                                <li className=\"nav-item\">\r\n                                    <Link to='/users' className=\"nav-link\">                                    \r\n                                        <i className=\"fas fa-users text-white mr-2\"></i>\r\n                                        <p className=\"text-white text-bold\">Administrar Usuários</p>\r\n                                    </Link>\r\n                                </li>\r\n                            }\r\n                            <li className=\"nav-item\">\r\n                                <Link to='/configuser' className=\"nav-link\">                                    \r\n                                    <i className=\"fas fa-user text-white mr-2\"></i>\r\n                                    <p className=\"text-white text-bold\">Configuração do usuário</p>\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"#\" onClick={sair} className=\"nav-link\">                                    \r\n                                    <i className=\"fas fa-sign-out-alt text-white mr-2\"></i>\r\n                                    <p className=\"text-white text-bold\">sair</p>\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n                <ToastContainer />\r\n            </aside>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MenuLeft\r\n\r\n","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddCardsCollection\\index.js",["271","272","273","274","275"],"import React, { useEffect, useRef, useState, useContext } from 'react'\r\nimport './index.css'\r\nimport { Typeahead} from 'react-bootstrap-typeahead'\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css'\r\nimport {messages} from '../../utils/messages'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport {useHistory, Link, Redirect} from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport _ from 'lodash'\r\nimport jwt from 'jsonwebtoken'\r\n\r\nconst AddCardsCollection = () => {\r\n\r\n    let {isAuth} = useContext(AuthContext)\r\n    const history = useHistory()\r\n    const [allcards, setAllCards] = useState([])\r\n    const [cardName, setCardName] = useState([]);\r\n    const [cardSelected, setCardSelected] = useState('')\r\n    const [cardQuality, setCardQuality] = useState([])\r\n    const [cardLanguage, setCardLanguage] = useState([])\r\n    const refQuality = useRef()\r\n    const refLanguage = useRef()\r\n    const [quantity, setQuantity] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const user = jwt.decode(token)\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cards`,configAxios)\r\n            .then(resp => {\r\n                setAllCards(resp.data)\r\n                const data = resp.data.map((cards, index, array) => {                    \r\n                        return `${cards.card_name} - ${cards.edition}`\r\n                })\r\n                setCardName(data)\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n\r\n        axios.get(`${BASE_URL_BACK}/cardqualities`,configAxios)\r\n            .then(resp => {\r\n                setCardQuality(resp.data.quality)\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n\r\n        axios.get(`${BASE_URL_BACK}/cardlanguages`,configAxios)\r\n            .then(resp => {\r\n                setCardLanguage(resp.data.language)\r\n            })\r\n            .catch(err => {\r\n                toast.info(messages(err.response.data.message))\r\n                if(err.response.data.message == 'Token invalid'){\r\n                    setTimeout(() => {\r\n                        window.location.href = `${BASE_URL_LOGIN}`\r\n                    }, 5000);\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    const handleChange = (selected) => {\r\n        setCardSelected(selected)\r\n    }\r\n\r\n    const renderQuality = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Qualidade da Carta</label>\r\n                <select className=\"form-control\" ref={refQuality} required>\r\n                   {cardQuality.map(quality => {\r\n                        return(\r\n                            <option key={quality.id} value={quality.id}>{quality.quality}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderLanguage = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Idioma da Carta</label>\r\n                <select className=\"form-control\" ref={refLanguage} required>\r\n                    {cardLanguage.map(language => {\r\n                        return(\r\n                            <option key={language.id} value={language.id}>{language.language}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const cardQuantity = evt => {\r\n        setQuantity(evt.target.value)\r\n    }\r\n\r\n    const saveCard = evt => {\r\n        evt.preventDefault()\r\n\r\n        const nameArr = cardSelected[0].split('-')\r\n        const nameArrTrim = nameArr.map(name => {\r\n            return name.trim()\r\n        })\r\n        const userCardsSelected = (_.find(allcards, {card_name: nameArrTrim[0], edition: nameArrTrim[1]}));\r\n        const qualityId = refQuality.current.value\r\n        const languageId = refLanguage.current.value\r\n        const userCardsSelectedId = userCardsSelected.id\r\n        const userId = user.id\r\n        const objAddCard = {\r\n            user_id: userId,\r\n            cardLanguage_id: languageId,\r\n            cardQuality_id: qualityId,\r\n            cards_id: userCardsSelectedId,\r\n            quantity\r\n        }\r\n\r\n        axios.post(`${BASE_URL_BACK}/collections`,objAddCard,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/cards')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n        <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                <div className=\"col-12 mt-2 mb-3\">\r\n                    <h1>Cadastro de cartas na sua coleção</h1>\r\n                </div>\r\n                </div>\r\n\r\n                <form onSubmit={saveCard}>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-4 mb-5\">\r\n                        <div className=\"form-group\">\r\n                        <label>Nome da Carta</label>\r\n                            <Typeahead\r\n                                id=\"cardsName\"\r\n                                onChange={(selected) => {\r\n                                    handleChange(selected)\r\n                                }}\r\n                                options={cardName}\r\n                                minLength={2}\r\n                                inputProps={{ required: true }}\r\n                                >\r\n                            </Typeahead>\r\n                        </div>\r\n                    </div>\r\n                    {renderQuality()}\r\n                    {renderLanguage()}\r\n                    <div className=\"col-lg-4\">\r\n                        <div className=\"form-group\">\r\n                        <label>Quantidade de Carta</label>\r\n                        <input type=\"number\" className=\"form-control\" value={quantity} placeholder=\"Digite a quantidade de cartas\" onChange={cardQuantity} required min=\"1\" />\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <button type=\"submit\" className=\"btn btn-dark mr-2\">Cadastrar</button>\r\n                        <Link className=\"btn btn-dark mr-2\" to='/cards'>Voltar</Link>\r\n                    </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <ToastContainer />\r\n        </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddCardsCollection","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditionCards\\index.js",["276","277","278","279","280","281","282","283","284"],"import React, { useEffect, useRef, useState, useContext } from 'react'\r\nimport './index.css'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport {messages} from '../../utils/messages'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport {toast, ToastContainer } from 'react-toastify'\r\nimport Modals from '../Modals'\r\nimport _ from 'lodash'\r\nimport $ from 'jquery'\r\n\r\n\r\nconst EditionCards = () => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [cardEditions, setCardEditions] = useState([])\r\n    const [cardFilterEdition, setCardFilterEdition] = useState([])\r\n    const [lineId, setLineId] = useState()\r\n    const token = localStorage.getItem('token')\r\n    const refEdition = useRef()\r\n    const refModal = useRef()\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardeditions`,configAxios)\r\n            .then(resp => {\r\n                setCardEditions(resp.data.edition)\r\n                let dataTable = $('#dataTableEditionCards').DataTable({\r\n                    \"responsive\": true,\r\n                    \"autoWidth\": false,\r\n                    \"lengthChange\": false,\r\n                    \"pageLength\": 10,\r\n                    \"bInfo\" : false,\r\n                    \"language\": {\r\n                        \"paginate\": {\r\n                          \"previous\": \"Anterior\",\r\n                          \"next\": \"Próxima\"\r\n                        },\r\n                        \"emptyTable\": \"Não existe dados para serem carregados\"\r\n                    },\r\n                    buttons: [\r\n                        { \r\n                            extend: 'pdfHtml5',\r\n                            customize: function(doc) {\r\n                                doc.styles.tableBodyEven.alignment = 'center';\r\n                                doc.styles.tableBodyOdd.alignment = 'center'; \r\n                            },\r\n                            exportOptions:{\r\n                                columns: [0,1,2,3,4,5,6,7]\r\n                            }\r\n                        },\r\n                        { \r\n                            extend: 'excel',\r\n                            exportOptions:{\r\n                                columns: [0,1,2,3,4,5,6,7]\r\n                            }\r\n                        }\r\n                    ]\r\n                })\r\n\r\n                $('#searchBarTec').on('keyup change', function () {\r\n                    dataTable.search(this.value).draw()\r\n                })\r\n\r\n                $('#exportExcel').on('click', function() {\r\n                    dataTable.button('.buttons-excel').trigger()\r\n                })\r\n\r\n                $('#exportPdf').on('click', function() {\r\n                    dataTable.button('.buttons-pdf').trigger()\r\n                })\r\n            })\r\n            .catch(err => {\r\n                toast.info(messages(err.response.data.message))\r\n                if(err.response.data.message == 'Token invalid'){\r\n                    setTimeout(() => {\r\n                        window.location.href = `${BASE_URL_LOGIN}`\r\n                    }, 5000);\r\n                }\r\n            })\r\n    \r\n    }, [])\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/cards' />\r\n        )\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n\r\n\r\n    const handleChangeOptions = (e) => {\r\n        const idEdition = refEdition.current.value\r\n\r\n        axios.get(`${BASE_URL_BACK}/cards`,configAxios)\r\n            .then(resp => {\r\n                $('#dataTableEditionCards').DataTable().destroy();\r\n                setCardFilterEdition(_.filter(resp.data, {'edition_id': parseInt(idEdition)}))\r\n                let dataTable = $('#dataTableEditionCards').DataTable({\r\n                    \"responsive\": true,\r\n                    \"autoWidth\": false,\r\n                    \"lengthChange\": false,\r\n                    \"pageLength\": 10,\r\n                    \"bInfo\" : false,\r\n                    \"language\": {\r\n                        \"paginate\": {\r\n                          \"previous\": \"Anterior\",\r\n                          \"next\": \"Próxima\"\r\n                        },\r\n                        \"emptyTable\": \"Não existe dados para serem carregados\"\r\n                    },\r\n                    buttons: [\r\n                        { \r\n                            extend: 'pdfHtml5',\r\n                            customize: function(doc) {\r\n                                doc.styles.tableBodyEven.alignment = 'center';\r\n                                doc.styles.tableBodyOdd.alignment = 'center'; \r\n                            },\r\n                            exportOptions:{\r\n                                columns: [0,1,2,3,4,5,6,7]\r\n                            }\r\n                        },\r\n                        { \r\n                            extend: 'excel',\r\n                            exportOptions:{\r\n                                columns: [0,1,2,3,4,5,6,7]\r\n                            }\r\n                        }\r\n                    ]\r\n                })\r\n\r\n                $('#searchBarTec').on('keyup change', function () {\r\n                    dataTable.search(this.value).draw()\r\n                })\r\n\r\n                $('#exportExcel').on('click', function() {\r\n                    dataTable.button('.buttons-excel').trigger()\r\n                })\r\n\r\n                $('#exportPdf').on('click', function() {\r\n                    dataTable.button('.buttons-pdf').trigger()\r\n                })\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }\r\n\r\n    const renderEditions = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mt-3\">\r\n                <div className=\"form-group\">\r\n                <label>Selecione a edição</label>\r\n                <select className=\"form-control\" ref={refEdition} onChange={e => handleChangeOptions(e)} required>\r\n                    <option>Selecione uma edição</option>\r\n                    {cardEditions.map(edition => {\r\n                        return(\r\n                            <option key={edition.id} value={edition.id}>{edition.edition}</option>\r\n                        )\r\n                    })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderRow = () => {\r\n        return cardFilterEdition.map(line => (\r\n                <tr key={line.id}>\r\n                    <td>{line.card_name}</td>\r\n                    <td className=\"text-center\">{line.card_type}</td>\r\n                    <td className=\"text-center\">{line.card_color}</td>\r\n                    <td className=\"text-center\">{line.edition}</td>\r\n                    <td className=\"text-center\">{line.rarity}</td>\r\n                    <td className=\"text-center\"><Link className='link_text_pen' to={`/editioncards/${line.id}`}><i className=\"fas fa-pencil-alt click\"></i></Link></td>\r\n                    <td className=\"text-center\"><i className=\"fas fa-trash-alt click\" onClick={() => openModal(line.id)}></i></td>\r\n                </tr>\r\n            )\r\n        )\r\n    }\r\n\r\n    const openModal = (id) => {\r\n        setLineId(id)\r\n        refModal.current.openModal()\r\n    }\r\n\r\n    const deleteItem = () => {\r\n        axios.delete(`${BASE_URL_BACK}/cards/${lineId}`,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message == 'card deleted'){\r\n                    toast.success(messages(resp.data.message))\r\n                    const filtered = cardFilterEdition.filter(cards => {\r\n                        return cards.id != lineId\r\n                    })            \r\n                    setCardFilterEdition(filtered)\r\n                    refModal.current.openModal()\r\n                }\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }\r\n\r\n    const saveNewEdition = (evt) => {\r\n        evt.preventDefault()\r\n        const objAddEdtion = {\r\n            'edition': evt.target.newEdition.value.trim(),\r\n            'code': evt.target.codeNewEdition.value.trim()\r\n        }\r\n\r\n        axios.post(`${BASE_URL_BACK}/cardeditions`,objAddEdtion,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                axios.get(`${BASE_URL_BACK}/cardeditions`,configAxios)\r\n                    .then(resp => {\r\n                        setCardEditions(resp.data.edition)\r\n                    })\r\n\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }\r\n\r\n    return(\r\n        <section className=\"content\">\r\n           <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 mt-2 mb-3\">\r\n                    <h1>Edições e Cards</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {renderEditions()}\r\n                    <div className=\"col-lg-4 mt-5\">                \r\n                        <button type=\"button\" data-toggle=\"collapse\" href=\"#addNewEdition\" className=\"btn btn-dark mb-3\">Nova Edição</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <form onSubmit={saveNewEdition}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-4\">\r\n                            <div className=\"collapse multi-collapse\" id=\"addNewEdition\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-6\">\r\n                                        <input type=\"text\" name='newEdition' className=\"form-control mb-3\" placeholder=\"Qual o nome da edição?\" />\r\n                                    </div>\r\n                                    <div className=\"col-lg-6\">\r\n                                        <input type=\"text\" name='codeNewEdition' className=\"form-control mb-3\" placeholder=\"Qual o código da edição?\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-4\">\r\n                            <div className=\"collapse multi-collapse\" id=\"addNewEdition\">\r\n                                <button type=\"submit\" className=\"btn btn-dark mr-2\">Salvar</button>\r\n                                <a href=\"https://pt.wikipedia.org/wiki/Expans%C3%B5es_de_Magic:_The_Gathering\" target='_blank'><i className=\"fas fa-question-circle text-primary helpme\" title='Código da edição'></i></a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n                <hr className=\"mb-4\"></hr>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 mt-2 mb-3\">\r\n                    <h1>Cards</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-11\">\r\n                        <div className=\"input-group mb-3\">\r\n                            <input type=\"email\" className=\"form-control\" id=\"searchBarTec\" placeholder=\"Qual carta você está procurando?\" />\r\n                            <div className=\"input-group-append\">\r\n                            <div className=\"input-group-text\">\r\n                                <i className=\"fas fa-search\"></i>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-1 mb-2\">\r\n                        <Link className=\"btn btn-dark\" to='/addeditioncards'>Adicionar</Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                    <div className=\"col-lg-12\">\r\n                        <table id=\"dataTableEditionCards\" className=\"table table-bordered table-responsive-sm table-responsive-md\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Nome</th>\r\n                            <th className=\"text-center\">Tipo</th>\r\n                            <th className=\"text-center\">Cor</th>\r\n                            <th className=\"text-center\">Edição</th>\r\n                            <th className=\"text-center\">Raridade</th>\r\n                            <th className=\"text-center\">Editar</th>\r\n                            <th className=\"text-center\">Remover</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {renderRow()}\r\n                        </tbody>\r\n                        </table>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n           </div>\r\n           <ToastContainer />\r\n           <Modals \r\n                title='Exclusão de card'\r\n                body='Deseja realmente excluir este card? Se você fizer isso, este card será removido de todos os usuários'\r\n                nameButton='Excluir'\r\n                deleteItem={deleteItem}\r\n                ref={refModal}\r\n            />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default EditionCards\r\n","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditEditionCards\\index.js",["285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301"],"import React, { useEffect, useRef, useState, useContext } from 'react';\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {messages} from '../../utils/messages'\r\nimport { useHistory, useParams, Link, Redirect } from 'react-router-dom';\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios';\r\nimport _ from 'lodash'\r\n\r\nconst EditEditionCards = (props) => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [card, setCard] = useState([])\r\n    const [cardName, setCardName] = useState('')\r\n    const [typeId, setTypeId] = useState([])\r\n    const [cardType, setCardType] = useState([])\r\n    const [cardColor, setCardColor] = useState([])\r\n    const [cardEdition, setCardEdition] = useState([])\r\n    const [cardRarity, setCardRarity] = useState([])\r\n    const token = localStorage.getItem('token')\r\n    const history = useHistory()\r\n    const {id} = props.match.params\r\n    const refCardType = useRef()\r\n    const refCardColor = useRef()\r\n    const refCardEdition = useRef()\r\n    const refCardRarity = useRef()\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        axios.get(`${BASE_URL_BACK}/cards`,configAxios)\r\n            .then(resp => {\r\n                setCardName(_.filter(resp.data, {'id': parseInt(id)})[0].card_name)\r\n                setCard(_.filter(resp.data, {'id': parseInt(id)})[0])\r\n\r\n            })\r\n    },[id])\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardtypes`,configAxios)\r\n            .then(resp => {\r\n                setCardType(resp.data.type)\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    },[card.type_id])\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardcolors`,configAxios)\r\n            .then(resp => {\r\n                setCardColor(resp.data.color)\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }, [card.color_id])\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardeditions`,configAxios)\r\n            .then(resp => {\r\n                setCardEdition(resp.data.edition)\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }, [card.edition_id])\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardrarities`,configAxios)\r\n            .then(resp => {\r\n                setCardRarity(resp.data.rarity)\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    },[card.rarity_id])\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }\r\n\r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/cards' />\r\n        )\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    \r\n\r\n    const renderCardType = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Tipo da Carta</label>\r\n                <select className=\"form-control\" ref={refCardType} required>\r\n                    {card.type_id > 0 && _.orderBy(cardType,[i => i.id == card.type_id],['desc']).map(type => {\r\n                        return(\r\n                            <option key={type.id} value={type.id}>{type.type}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderCardColor = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Cor da Carta</label>\r\n                <select className=\"form-control\" ref={refCardColor} required>\r\n                    {card.color_id > 0 && _.orderBy(cardColor,[i => i.id == card.color_id],['desc']).map(color => {\r\n                        return(\r\n                            <option key={color.id} value={color.id}>{color.color}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderEdition = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Edição da Carta</label>\r\n                <select className=\"form-control\" ref={refCardEdition} required>\r\n                    {card.edition_id > 0 && _.orderBy(cardEdition,[i => i.id == card.edition_id],['desc']).map(edition => {\r\n                        return(\r\n                            <option key={edition.id} value={edition.id}>{edition.edition}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderRarity = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Raridade da Carta</label>\r\n                <select className=\"form-control\" ref={refCardRarity} required>\r\n                    {card.rarity_id > 0 && _.orderBy(cardRarity,[i => i.id == card.rarity_id],['desc']).map(rarity => {\r\n                        return(\r\n                            <option key={rarity.id} value={rarity.id}>{rarity.rarity}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const handleChangeName = (evt) => {\r\n        setCardName(evt.target.value)\r\n    }\r\n\r\n\r\n    const saveCard = (evt) => {\r\n        evt.preventDefault()\r\n\r\n        const objAddCard = {\r\n            cardName: evt.target.cardName.value.trim(),\r\n            cardColor_id: refCardColor.current.value.trim(),\r\n            cardEdition_id: refCardEdition.current.value.trim(),\r\n            cardType_id: refCardType.current.value.trim(),\r\n            cardRarity_id: refCardRarity.current.value.trim()\r\n        }\r\n\r\n        axios.put(`${BASE_URL_BACK}/cards/${id}`,objAddCard,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message == 'card updated'){\r\n                    toast.success(messages(resp.data.message))\r\n                    setTimeout(() => {\r\n                        history.push('/editioncards')\r\n                    }, 5000);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }\r\n\r\n    return(\r\n        <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                <div className=\"col-12 mt-2 mb-3\">\r\n                    <h1>Cadastro de Cards</h1>\r\n                </div>\r\n                </div>\r\n\r\n                <form onSubmit={saveCard}>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-4 mb-5\">\r\n                        <div className=\"form-group\">\r\n                        <label>Nome da Carta</label>\r\n                            <input type=\"text\" name='cardName' value={cardName} onChange={handleChangeName} className=\"form-control\" placeholder=\"Digite a quantidade de cartas\" required />\r\n                        </div>\r\n                    </div>\r\n                    {renderCardType()}\r\n                    {renderCardColor()}\r\n                    {renderEdition()}\r\n                    {renderRarity()}\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <button type=\"submit\" className=\"btn btn-dark mr-2\">Atualizar</button>\r\n                        <Link className=\"btn btn-dark mr-2\" to='/editioncards'>Voltar</Link>\r\n                    </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <ToastContainer />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default EditEditionCards","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddEditionCards\\index.js",["302","303","304","305","306"],"import React, { useEffect, useRef, useState, useContext } from 'react';\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {messages} from '../../utils/messages'\r\nimport {useHistory, Link, Redirect} from 'react-router-dom'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios';\r\n\r\nconst AddEditionCards = () => {\r\n\r\n    let {isAuth} = useContext(AuthContext)\r\n    const [cardType, setCardType] = useState([])\r\n    const [cardColor, setCardColor] = useState([])\r\n    const [cardEdition, setCardEdition] = useState([])\r\n    const [cardRarity, setCardRarity] = useState([])\r\n    const token = localStorage.getItem('token')\r\n    const refCardType = useRef()\r\n    const refCardColor = useRef()\r\n    const refCardEdition = useRef()\r\n    const refCardRarity = useRef()\r\n    const history = useHistory()\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardtypes`,configAxios)\r\n            .then(resp => {\r\n                setCardType(resp.data.type)\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n\r\n        axios.get(`${BASE_URL_BACK}/cardcolors`,configAxios)\r\n            .then(resp => {\r\n                setCardColor(resp.data.color)\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n\r\n        axios.get(`${BASE_URL_BACK}/cardeditions`,configAxios)\r\n            .then(resp => {\r\n                setCardEdition(resp.data.edition)\r\n            })\r\n            .catch(err => {\r\n                toast.info(messages(err.response.data.message))\r\n                if(err.response.data.message == 'Token invalid'){\r\n                    setTimeout(() => {\r\n                        window.location.href = `${BASE_URL_LOGIN}`\r\n                    }, 5000);\r\n                }\r\n            })\r\n\r\n        axios.get(`${BASE_URL_BACK}/cardrarities`,configAxios)\r\n            .then(resp => {\r\n                setCardRarity(resp.data.rarity)\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    },[])\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            <Redirect to='/login' />\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    const renderCardType = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Tipo da Carta</label>\r\n                <select className=\"form-control\" ref={refCardType} required>\r\n                   {cardType.map(type => {\r\n                        return(\r\n                            <option key={type.id} value={type.id}>{type.type}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderCardColor = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Cor da Carta</label>\r\n                <select className=\"form-control\" ref={refCardColor} required>\r\n                   {cardColor.map(color => {\r\n                        return(\r\n                            <option key={color.id} value={color.id}>{color.color}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderEdition = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Edição da Carta</label>\r\n                <select className=\"form-control\" ref={refCardEdition} required>\r\n                   {cardEdition.map(edition => {\r\n                        return(\r\n                            <option key={edition.id} value={edition.id}>{edition.edition}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderRarity = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Raridade da Carta</label>\r\n                <select className=\"form-control\" ref={refCardRarity} required>\r\n                   {cardRarity.map(rarity => {\r\n                        return(\r\n                            <option key={rarity.id} value={rarity.id}>{rarity.rarity}</option>\r\n                        )\r\n                   })}\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    const saveCard = (evt) => {\r\n        evt.preventDefault()\r\n\r\n        const objAddCard = {\r\n            cardName: evt.target.cardName.value.trim(),\r\n            cardColor_id: refCardColor.current.value.trim(),\r\n            cardEdition_id: refCardEdition.current.value.trim(),\r\n            cardType_id: refCardType.current.value.trim(),\r\n            cardRarity_id: refCardRarity.current.value.trim()\r\n        }\r\n\r\n        axios.post(`${BASE_URL_BACK}/cards`,objAddCard,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message == 'card created'){\r\n                    toast.success(messages(resp.data.message))\r\n                    setTimeout(() => {\r\n                        history.push('/editioncards')\r\n                    }, 5000);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }\r\n\r\n    return(\r\n        <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                <div className=\"col-12 mt-2 mb-3\">\r\n                    <h1>Cadastro de Cards</h1>\r\n                </div>\r\n                </div>\r\n\r\n                <form onSubmit={saveCard}>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-4 mb-5\">\r\n                        <div className=\"form-group\">\r\n                        <label>Nome da Carta</label>\r\n                            <input type=\"text\" name='cardName' className=\"form-control\" placeholder=\"Digite o nome da carta\" required />\r\n                        </div>\r\n                    </div>\r\n                    {renderCardType()}\r\n                    {renderCardColor()}\r\n                    {renderEdition()}\r\n                    {renderRarity()}\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <button type=\"submit\" className=\"btn btn-dark mr-2\">Cadastrar</button>\r\n                        <Link className=\"btn btn-dark mr-2\" to='/editioncards'>Voltar</Link>\r\n                    </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <ToastContainer />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default AddEditionCards","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\Users\\index.js",["307","308","309","310","311","312","313","314","315","316"],"import React, {useEffect, useState, useRef, useContext} from 'react';\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport Modals from '../Modals'\r\nimport {messages} from '../../utils/messages'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport _ from 'lodash'\r\nimport $ from 'jquery'\r\nimport axios from 'axios';\r\n\r\nconst Users = () => {\r\n    const token = localStorage.getItem('token')\r\n    const [data, setData] = useState([])\r\n    const [lineId, setLineId] = useState()\r\n    const refModal = useRef()\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/users`,configAxios)\r\n            .then(resp => {\r\n                setData(resp.data)\r\n                $(document).ready(function(){\r\n                    let dataTable = $('#dataTableUser').DataTable({\r\n                        \"responsive\": true,\r\n                        \"autoWidth\": false,\r\n                        \"lengthChange\": false,\r\n                        \"pageLength\": 10,\r\n                        \"bInfo\" : false,\r\n                        \"language\": {\r\n                            \"paginate\": {\r\n                              \"previous\": \"Anterior\",\r\n                              \"next\": \"Próxima\"\r\n                            },\r\n                            \"emptyTable\": \"Não existe dados para serem carregados\"\r\n                        },\r\n                        buttons: [\r\n                            { \r\n                                extend: 'pdfHtml5',\r\n                                customize: function(doc) {\r\n                                    doc.styles.tableBodyEven.alignment = 'center';\r\n                                    doc.styles.tableBodyOdd.alignment = 'center'; \r\n                                },\r\n                                exportOptions:{\r\n                                    columns: [0,1,2,3,4,5,6,7]\r\n                                }\r\n                            },\r\n                            { \r\n                                extend: 'excel',\r\n                                exportOptions:{\r\n                                    columns: [0,1,2,3,4,5,6,7]\r\n                                }\r\n                            }\r\n                        ]\r\n                    })\r\n\r\n                    $('#searchBarTecUser').on('keyup change', function () {\r\n                        dataTable.search(this.value).draw();\r\n                    })\r\n                })\r\n            })\r\n            .catch(err => {\r\n              toast.info(messages(err.response.data.message))\r\n              if(err.response.data.message == 'Token invalid'){\r\n                  setTimeout(() => {\r\n                      window.location.href = `${BASE_URL_LOGIN}`\r\n                  }, 5000);\r\n              }\r\n            })\r\n    },[])\r\n\r\n    const openModal = (id) => {\r\n      setLineId(id)\r\n      refModal.current.openModal()\r\n    }\r\n\r\n    const deleteItem = () => {\r\n      const configAxios = {\r\n          headers: {\r\n              Authorization: `Bearer ${token}`\r\n          }\r\n      }\r\n\r\n      axios.get(`${BASE_URL_BACK}/users/`,configAxios)\r\n        .then(resp => {\r\n            const users = resp.data\r\n            const user = _.filter(resp.data, {'id': lineId})\r\n            const email = user[0].email\r\n            axios.delete(`${BASE_URL_BACK}/users/${email}`,configAxios)\r\n                .then(resp => {\r\n                    if(resp.data.message == 'user deleted'){\r\n                        toast.success(messages(resp.data.message))\r\n                        const filtered = _.filter(users, (o) => {\r\n                          return o.email != email\r\n                        })           \r\n                        setData(filtered)\r\n                        refModal.current.openModal()\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                  toast.info(messages(err.response.data.message))\r\n                })\r\n        })\r\n\r\n  }\r\n\r\n    if(isAuth == false){\r\n      return (\r\n          window.location.href = `${BASE_URL_LOGIN}`\r\n      )\r\n    }else{\r\n        \r\n    }\r\n\r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n    \r\n    if(isAdmin == false){\r\n      return (\r\n          <Redirect to='/users' />\r\n      )\r\n    }else{\r\n        \r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    const renderRow = () => {\r\n        return data.map(line => (\r\n                <tr key={line.id}>\r\n                    <td>{line.name}</td>\r\n                    <td className=\"text-center\">{line.email}</td>\r\n                    <td className=\"text-center\">{line.permission == 0 ? 'Admin' : 'User'}</td>\r\n                    <td className=\"text-center\"><Link className='link_text_pen' to={`/edituser/${line.id}`}><i className=\"fas fa-pencil-alt click\"></i></Link></td>\r\n                    <td className=\"text-center\"><i className=\"fas fa-trash-alt click\" onClick={() => openModal(line.id)}></i></td>\r\n                </tr>\r\n            )\r\n        )\r\n    }\r\n\r\n    return (\r\n        <section className=\"content\">\r\n        <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n            <div className=\"col-12 mt-2 mb-3\">\r\n              <h1>Usuários</h1>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"input-group mb-3\">\r\n                <input type=\"email\" id=\"searchBarTecUser\" className=\"form-control\" placeholder=\"Qual usuário você está procurando?\" />\r\n                <div className=\"input-group-append\">\r\n                  <div className=\"input-group-text\">\r\n                    <i className=\"fas fa-search\"></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n              <table id=\"dataTableUser\" className=\"table table-bordered table-responsive-sm table-responsive-md\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Usuário</th>\r\n                    <th className=\"text-center\">E-mail</th>\r\n                    <th className=\"text-center\">Tipo</th>\r\n                    <th className=\"text-center\">Editar</th>\r\n                    <th className=\"text-center\">Excluir</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {renderRow()}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Modals \r\n            title='Exclusão de card'\r\n            body='Tem certeza que deseja excluir este usuário? Se excluir, a coleção do usuário também será excluída'\r\n            nameButton='Excluir'\r\n            deleteItem={deleteItem}\r\n            ref={refModal}\r\n        />\r\n      <ToastContainer />\r\n      </section>\r\n    )\r\n}\r\n\r\nexport default Users","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\DashboardAdmin\\index.js",["317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332"],"C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditUser\\index.js",["333","334","335","336","337","338","339","340","341","342"],"import React, { useEffect, useRef, useState, useContext } from 'react';\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport { useHistory, useParams, Link, Redirect } from 'react-router-dom'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {messages} from '../../utils/messages'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios';\r\nimport _ from 'lodash'\r\n\r\nconst EditUser = (props) => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    const {id} = props.match.params\r\n    const token = localStorage.getItem('token')\r\n    const [nameUser, setNameUser] = useState('')\r\n    const [emailUser, setEmailUser] = useState('')\r\n    const [permissionId, setPermissionId] = useState()\r\n    const history = useHistory()\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        axios.get(`${BASE_URL_BACK}/users`,configAxios)\r\n            .then(resp => {\r\n               const user = _.filter(resp.data, {'id': parseInt(id)})\r\n               setNameUser(user[0].name)\r\n               setEmailUser(user[0].email)\r\n               setPermissionId(user[0].permission)\r\n            })\r\n            .catch(err => {\r\n                toast.info(messages(err.response.data.error))\r\n                if(err.response.data.error == 'Token invalid'){\r\n                    setTimeout(() => {\r\n                        window.location.href = `${BASE_URL_LOGIN}`\r\n                    }, 5000);\r\n                }\r\n            })\r\n    },[id])\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n\r\n    const saveCard = (evt) => {\r\n        evt.preventDefault()\r\n\r\n        const objUser = {\r\n            name: nameUser,\r\n            email: emailUser,\r\n            permission: parseInt(permissionId)\r\n            \r\n        }\r\n\r\n        axios.put(`${BASE_URL_BACK}/users/${emailUser}`,objUser,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message == 'user updated'){\r\n                    toast.success(messages(resp.data.message))\r\n                    setTimeout(() => {\r\n                        history.push('/users')\r\n                    }, 5000);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }\r\n\r\n    const handlePermissionId = (evt) => {\r\n        setPermissionId(evt.target.value)\r\n    }\r\n\r\n    const renderPermission = () => {\r\n        return(\r\n            <div className=\"col-lg-4 mb-5\">\r\n                <div className=\"form-group\">\r\n                <label>Edição da Carta</label>\r\n                <select className=\"form-control\" onChange={handlePermissionId}  required>\r\n                    {permissionId == 0 &&\r\n                        <>\r\n                            <option value='0'>Admin</option>\r\n                            <option value='1'>User</option>\r\n                        </>\r\n                    }\r\n\r\n                    {permissionId == 1 &&\r\n                        <>\r\n                            <option value='1'>User</option>\r\n                            <option value='0'>Admin</option>\r\n                        </>\r\n                    }\r\n                </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const handleNameUser = (evt) =>{\r\n        setNameUser(evt.target.value)\r\n    }\r\n\r\n    const handleEmailUser = (evt) =>{\r\n        setEmailUser(evt.target.value)\r\n    }\r\n\r\n    return(\r\n        <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                <div className=\"col-12 mt-2 mb-3\">\r\n                    <h1>Edição de cartas</h1>\r\n                </div>\r\n                </div>\r\n\r\n                <form onSubmit={saveCard}>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-4 mb-5\">\r\n                        <div className=\"form-group\">\r\n                        <label>Usuário</label>\r\n                            <input type=\"text\" name='nameUser' value={nameUser} className=\"form-control\" onChange={handleNameUser} placeholder=\"Digite o seu usuário\" required />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-4 mb-5\">\r\n                        <div className=\"form-group\">\r\n                        <label>E-mail</label>\r\n                            <input type=\"text\" name='emailUser' value={emailUser} className=\"form-control\" onChange={handleEmailUser} placeholder=\"Digite seu e-mail\" required />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {renderPermission()}\r\n                    \r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <button type=\"submit\" className=\"btn btn-dark mr-2\">Atualizar</button>\r\n                        <Link className=\"btn btn-dark mr-2\" to='/users'>Voltar</Link>\r\n                    </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <ToastContainer />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default EditUser","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\Dashboard\\index.js",["343","344","345","346","347","348"],"import React, { useEffect, useRef, useState, useContext } from 'react';\r\nimport Loading from '../Loading'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport './index.css'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {messages} from '../../utils/messages'\r\nimport SwampImage from '../../img/pantano_branco.svg'\r\nimport PlainsImage from '../../img/planicie_branco.svg'\r\nimport MountainImage from '../../img/montanha_branco.svg'\r\nimport IslandImage from '../../img/ilha_branco.svg'\r\nimport FlorestImage from '../../img/floresta_branco.svg'\r\nimport MultiColorImage from '../../img/multicolor_branco.svg'\r\nimport ArtifactImage from '../../img/artefato_branco.svg'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport axios from 'axios';\r\nimport jwt from 'jsonwebtoken'\r\nimport _ from 'lodash'\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nconst Dashboard = () => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    const token = localStorage.getItem('token')\r\n    const {id} = jwt.decode(token) || 'error'\r\n    const [cardsBlack, setCardsBlack] = useState(0)\r\n    const [cardsYellow, setCardsYellow] = useState(0)\r\n    const [cardsRed, setCardsRed] = useState(0)\r\n    const [cardsBlue, setCardsBlue] = useState(0)\r\n    const [cardsGreen, setCardsGreen] = useState(0)\r\n    const [cardsMultiColor, setCardsMultiColor] = useState(0)\r\n    const [cardsColorLess, setCardsColorLess] = useState(0)\r\n    \r\n    const [cardsCreature, setCardsCreature] = useState(0)\r\n    const [cardsInstant, setCardsInstant] = useState(0)\r\n    const [cardsSorcery, setCardsSorcery] = useState(0)\r\n    const [cardsEnchantment, setCardsEnchantment] = useState(0)\r\n    const [cardsPlaneswalker, setCardsPlaneswalker] = useState(0)\r\n    const [M, setM] = useState(0)\r\n    const [NM, setNM] = useState(0)\r\n    const [SP, setSP] = useState(0)\r\n    const [HP, setHP] = useState(0)\r\n    const [DM, setDM] = useState(0)\r\n    const [comum, setComum] = useState(0)\r\n    const [incomum, setIncomum] = useState(0)\r\n    const [rara, setRara] = useState(0)\r\n    const [lendaria, setLendaria] = useState(0)\r\n    const refLoading = useRef()\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/collections/${id}`,configAxios)\r\n        .then(resp => {\r\n\r\n            setCardsBlack(_.reduce(_.map(_.filter(resp.data, {'card_color':'Preto'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setCardsYellow(_.reduce(_.map(_.filter(resp.data, {'card_color':'Branco'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setCardsRed(_.reduce(_.map(_.filter(resp.data, {'card_color':'Vermelho'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setCardsBlue(_.reduce(_.map(_.filter(resp.data, {'card_color':'Azul'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setCardsGreen(_.reduce(_.map(_.filter(resp.data, {'card_color':'Verde'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setCardsMultiColor(_.reduce(_.map(_.filter(resp.data, {'card_color':'Multicolor'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setCardsColorLess(_.reduce(_.map(_.filter(resp.data, {'card_color':'Incolor'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setCardsCreature(_.reduce(_.map(_.filter(resp.data, {'card_type':'Criatura'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setCardsInstant(_.reduce(_.map(_.filter(resp.data, {'card_type':'Mágica Instântanea'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setCardsSorcery(_.reduce(_.map(_.filter(resp.data, {'card_type':'Feitiço'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setCardsEnchantment(_.reduce(_.map(_.filter(resp.data, {'card_type':'Encantamento'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setCardsPlaneswalker(_.reduce(_.map(_.filter(resp.data, {'card_type':'Planeswalker'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setM(_.reduce(_.map(_.filter(resp.data, {'quality':'M'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setNM(_.reduce(_.map(_.filter(resp.data, {'quality':'NM'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setSP(_.reduce(_.map(_.filter(resp.data, {'quality':'SP'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setHP( _.reduce(_.map(_.filter(resp.data, {'quality':'HP'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setDM(_.reduce(_.map(_.filter(resp.data, {'quality':'DM'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setComum(_.reduce(_.map(_.filter(resp.data, {'rarity':'Comum'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setIncomum(_.reduce(_.map(_.filter(resp.data, {'rarity':'Incomum'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setRara(_.reduce(_.map(_.filter(resp.data, {'rarity':'Rara'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            setLendaria(_.reduce(_.map(_.filter(resp.data, {'rarity':'Lendaria'}), 'quantity'), (sum,n) => {\r\n                return sum + n\r\n            }) || 0)\r\n\r\n            refLoading.current.executeLoading()\r\n        })\r\n        .catch(err => {\r\n            toast.info(messages(err.response.data.message))\r\n            if(err.response.data.message == 'Token invalid'){\r\n                setTimeout(() => {\r\n                    window.location.href = `${BASE_URL_LOGIN}`\r\n                }, 5000);\r\n            }\r\n        })\r\n    },[id])\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    return(\r\n        <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                <div className=\"col-12 mt-2\">\r\n                    <h1>Dashboard</h1>\r\n                </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                <div className=\"col-lg-3 col-12\">\r\n                    <div className=\"info-box mb-3 bg-black\">\r\n                    <div className=\"info-box-content\">\r\n                        <span className=\"info-box-number\"><h1 className=\"text-white text-bold\">{cardsBlack}</h1></span>\r\n                        <span className=\"info-box-text\"><h4 className=\"text-white text-bold\">{cardsBlack > 1 ? 'Cartas' : 'Carta'}</h4></span>\r\n                    </div>\r\n                        <span className=\"info-box-icon\"><img src={SwampImage} alt=\"\"/></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-3 col-12\">\r\n                    <div className=\"info-box mb-3 bg-warning\">\r\n                    <div className=\"info-box-content\">\r\n                        <span className=\"info-box-number\"><h1 className=\"text-white text-bold\">{cardsYellow}</h1></span>\r\n                        <span className=\"info-box-text\"><h4 className=\"text-white text-bold\">{cardsYellow > 1 ? 'Cartas' : 'Carta'}</h4></span>\r\n                    </div>\r\n                        <span className=\"info-box-icon\"><img src={PlainsImage} alt=\"\"/></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-3 col-12\">\r\n                    <div className=\"info-box mb-3 bg-danger\">\r\n                    <div className=\"info-box-content\">\r\n                        <span className=\"info-box-number\"><h1 className=\"text-white text-bold\">{cardsRed}</h1></span>\r\n                        <span className=\"info-box-text\"><h4 className=\"text-white text-bold\">{cardsRed > 1 ? 'Cartas' : 'Carta'}</h4></span>\r\n                    </div>\r\n                        <span className=\"info-box-icon\"><img src={MountainImage} alt=\"\"/></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-3 col-12\">\r\n                    <div className=\"info-box mb-3 bg-primary\">\r\n                    <div className=\"info-box-content\">\r\n                        <span className=\"info-box-number\"><h1 className=\"text-white text-bold\">{cardsBlue}</h1></span>\r\n                        <span className=\"info-box-text\"><h4 className=\"text-white text-bold\">{cardsBlue > 1 ? 'Cartas' : 'Carta'}</h4></span>\r\n                    </div>\r\n                        <span className=\"info-box-icon\"><img src={IslandImage} alt=\"\"/></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-3 col-12\">\r\n                    <div className=\"info-box mb-3 bg-success\">\r\n                    <div className=\"info-box-content\">\r\n                        <span className=\"info-box-number\"><h1 className=\"text-white text-bold\">{cardsGreen}</h1></span>\r\n                        <span className=\"info-box-text\"><h4 className=\"text-white text-bold\">{cardsGreen > 1 ? 'Cartas' : 'Carta'}</h4></span>\r\n                    </div>\r\n                        <span className=\"info-box-icon\"><img src={FlorestImage} alt=\"\"/></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-3 col-12\">\r\n                    <div className=\"info-box mb-3 bgMultiColor\">\r\n                    <div className=\"info-box-content\">\r\n                        <span className=\"info-box-number\"><h1 className=\"text-white text-bold\">{cardsMultiColor}</h1></span>\r\n                        <span className=\"info-box-text\"><h4 className=\"text-white text-bold\">{cardsMultiColor > 1 ? 'Cartas' : 'Carta'}</h4></span>\r\n                    </div>\r\n                        <span className=\"info-box-icon\"><img src={MultiColorImage} alt=\"\"/></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-3 col-12\">\r\n                    <div className=\"info-box mb-3 bg-secondary\">\r\n                    <div className=\"info-box-content\">\r\n                        <span className=\"info-box-number\"><h1 className=\"text-white text-bold\">{cardsColorLess}</h1></span>\r\n                        <span className=\"info-box-text\"><h4 className=\"text-white text-bold\">{cardsColorLess > 1 ? 'Cartas' : 'Carta'}</h4></span>\r\n                    </div>\r\n                        <span className=\"info-box-icon\"><img src={ArtifactImage} alt=\"\"/></span>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-6\">\r\n                        <div className=\"card card-danger\">\r\n                        <div className=\"card-header\">\r\n                            <h3 className=\"card-title\">Porcentagem por tipo de cartas</h3>\r\n                            <div className=\"card-tools\">\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"chart\">\r\n                                <div>\r\n                                    <Chart\r\n                                    chartType=\"PieChart\"\r\n                                    loader={<div>Carregando o gráfico</div>}\r\n                                    data={[\r\n                                        ['Card Type', 'Number'],\r\n                                        ['Criatura', cardsCreature],\r\n                                        ['Mágica Instântanea', cardsInstant],\r\n                                        ['Feitiço', cardsSorcery],\r\n                                        ['Encanamento', cardsEnchantment],\r\n                                        ['Planeswalker', cardsPlaneswalker],\r\n                                    ]}\r\n                                    options={{\r\n                                        chartArea: { left: 0, top: 0, right: 0, bottom: 10 },\r\n                                        legend: {position: 'right', textStyle: {fontSize: 20}}, \r\n                                        is3D: true,                                       \r\n                                    }}\r\n                                    rootProps={{ 'data-testid': '1' }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-6\">\r\n                        <div className=\"card card-danger\">\r\n                        <div className=\"card-header\">\r\n                            <h3 className=\"card-title\">Porcentagem de cartas por cor</h3>\r\n                            <div className=\"card-tools\">\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"chart\">\r\n                                <div>\r\n                                    <Chart\r\n                                    chartType=\"PieChart\"\r\n                                    loader={<div>Carregando o gráfico</div>}\r\n                                    data={[\r\n                                        ['Card Type', 'Number'],\r\n                                        ['Preto', cardsBlack],\r\n                                        ['Branco', cardsYellow],\r\n                                        ['Vermelho', cardsRed],\r\n                                        ['Azul', cardsBlue],\r\n                                        ['Verde', cardsGreen],\r\n                                        ['Multicolorida', cardsMultiColor],\r\n                                        ['Artefato', cardsColorLess],\r\n                                    ]}\r\n                                    options={{\r\n                                        chartArea: { left: 0, top: 0, right: 0, bottom: 10 },\r\n                                        legend: {\r\n                                            position: 'right', \r\n                                            textStyle: {fontSize: 20},\r\n                                            scrollArrows: { inactiveColor: \"black\", activeColor: \"black\" },\r\n                                            pagingTextStyle: { color: 'black'},\r\n                                        },\r\n                                        colors: ['black','#ffc107', '#dc3545', '#007bff', '#28a745', '#a69b00', '#6c757d'],\r\n                                        is3D: true,\r\n                                    }}\r\n                                    rootProps={{ 'data-testid': '2' }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n                <div className=\"row\">\r\n                <div className=\"col-lg-6\">\r\n                    <div className=\"card card-success\">\r\n                    <div className=\"card-header\">\r\n                        <h3 className=\"card-title\">Qualidade vs Quantidade</h3>\r\n                        <div className=\"card-tools\">\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <Chart\r\n                            chartType=\"ColumnChart\"\r\n                            loader={<div>Carregando o gráfico</div>}\r\n                            data={[\r\n                            ['Qualidade', 'Quantidade'],\r\n                            ['M', M],\r\n                            ['NM', NM],\r\n                            ['SP', SP],\r\n                            ['HP', HP],\r\n                            ['DM', DM],\r\n                            ]}\r\n                            options={{\r\n                                legend: {\r\n                                    position: 'none',\r\n                                },\r\n                                colors: ['black'],\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-6\">\r\n                    <div className=\"card card-success\">\r\n                    <div className=\"card-header\">\r\n                        <h3 className=\"card-title\">Raridade vs Quantidade</h3>\r\n\r\n                        <div className=\"card-tools\">\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <Chart\r\n                            chartType=\"ColumnChart\"\r\n                            loader={<div>Carregando o gráfico</div>}\r\n                            data={[\r\n                            ['Raridade', 'Quantidade'],\r\n                            ['Comum', comum],\r\n                            ['Incomum', incomum],\r\n                            ['Rara', rara],\r\n                            ['Lendária', lendaria]\r\n                            ]}\r\n                            options={{\r\n                                legend: {\r\n                                    position: 'none',\r\n                                },\r\n                                colors: ['black'],\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <Loading\r\n                    ref={refLoading}\r\n                />\r\n                <ToastContainer />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Dashboard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\Loading\\index.js",["349","350","351"],"import React, { forwardRef, useImperativeHandle, useState } from 'react';\r\nimport './index.css'\r\n\r\nconst Loading = forwardRef((props, ref) => {\r\n\r\n    const [showLoading, setShowLoading] = useState(true)\r\n    \r\n    useImperativeHandle(\r\n        ref,\r\n        () => ({\r\n            executeLoading(){\r\n                {showLoading == false ? setShowLoading(true) : setShowLoading(false)}\r\n            }\r\n        })\r\n    )\r\n\r\n    if(showLoading == false){\r\n        return null\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n            <div className=\"d-flex justify-content-center loading\">\r\n                <div className=\"spinner-grow text-dark\" role=\"status\">\r\n                </div>\r\n                <div className=\"spinner-grow text-dark\" role=\"status\">\r\n                </div>\r\n                <div className=\"spinner-grow text-dark\" role=\"status\">\r\n                </div>\r\n                <div className=\"spinner-grow text-dark\" role=\"status\">\r\n                </div>\r\n                <div className=\"spinner-grow text-dark\" role=\"status\">\r\n                </div>\r\n                <div className=\"spinner-grow text-dark\" role=\"status\">\r\n                </div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-center loading-text\">\r\n                <h5>Carregando...</h5>\r\n            </div>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default Loading","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\Modals\\index.js",["352","353"],"import React, { useState, useImperativeHandle, forwardRef } from 'react';\r\nimport {Modal, Button} from 'react-bootstrap'\r\n\r\nconst Modals = forwardRef((props, ref) => {\r\n\r\n    const [showModal, setShow] = useState(false)\r\n    const handleClose = () => setShow(false)\r\n    \r\n\r\n    useImperativeHandle(\r\n        ref,\r\n        () => ({\r\n            openModal () {\r\n                {showModal == true ? setShow(false) : setShow(true)}\r\n            }\r\n        })\r\n    )\r\n\r\n    return(\r\n        <>\r\n            <div className=\"d-flex align-items-center justify-content-center\">\r\n            </div>\r\n            <Modal show={showModal} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>{props.title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>{props.body}</Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"btn btn-dark\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"btn btn-dark\" onClick={props.deleteItem}>\r\n                    {props.nameButton}\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default Modals","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\ConfigUser\\index.js",["354","355","356","357","358","359"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport jwt from 'jsonwebtoken'\r\nimport {useHistory, Link, Redirect} from 'react-router-dom'\r\nimport {BASE_URL_BACK, BASE_URL_PHOTO, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {messages} from '../../utils/messages'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios';\r\nimport _ from 'lodash'\r\n\r\nconst ConfigUser = () => {\r\n    \r\n    let {isAuth} = useContext(AuthContext)\r\n    const token = localStorage.getItem('token')\r\n    const {id} = jwt.decode(token) || 'error'\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/users`,configAxios)\r\n        .then(resp => {\r\n            const user = _.filter(resp.data, {'id': id})\r\n            const name = user[0].name\r\n            const email = user[0].email\r\n            setName(name)\r\n            setEmail(email)\r\n        })\r\n        .catch(err => {\r\n            toast.info(messages(err.response.data.message))\r\n            if(err.response.data.message == 'Token invalid'){\r\n                setTimeout(() => {\r\n                    window.location.href = `${BASE_URL_LOGIN}`\r\n                }, 5000);\r\n            }\r\n        })\r\n    },[id])\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    const changeName = evt => {\r\n        setName(evt.target.value)\r\n    }\r\n\r\n    const changeNameFile = evt => {\r\n        const label = document.querySelector('.custom-file-label')\r\n        label.innerHTML = evt.target.files[0].name\r\n    }\r\n\r\n    const saveUser = (evt) => {\r\n        evt.preventDefault()\r\n        if(evt.target[1].files[0]){\r\n            const formData = new FormData()\r\n            formData.append('img', evt.target[1].files[0])\r\n\r\n            axios.post(`${BASE_URL_BACK}/upload`,formData,configAxios)\r\n            .then(resp => {\r\n                    const objUser = {\r\n                        name,\r\n                        photo: `${BASE_URL_PHOTO}/${resp.data.filename}`,                    \r\n                    }\r\n                    axios.put(`${BASE_URL_BACK}/users/${email}`,objUser,configAxios)\r\n                    .then(resp => {\r\n                        toast.success(messages(resp.data.message))\r\n                        setTimeout(() => {\r\n                            document.location.reload()\r\n                        }, 5000);\r\n                    })\r\n                    .catch(err => {\r\n                        //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                        toast.info(messages(err.response.data.message))\r\n                    })\r\n                })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n        }else{\r\n            const objUser = {\r\n                name                 \r\n            }\r\n            axios.put(`${BASE_URL_BACK}/users/${email}`,objUser,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    document.location.reload()\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n        }        \r\n\r\n    }\r\n\r\n    return(\r\n        <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                <div className=\"col-12 mt-2 mb-3\">\r\n                    <h1>Configurações do Usuário</h1>\r\n                </div>\r\n                </div>\r\n\r\n                <form onSubmit={saveUser}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-4 mb-5\">\r\n                            <div className=\"form-group\">\r\n                            <label>Nome</label>\r\n                                <input type=\"text\" name='nameUser' value={name} onChange={changeName} className=\"form-control\" placeholder=\"Digite o seu nome\" required />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-4 mb-5\">\r\n                            <div className=\"form-group\">\r\n                                <label>Foto do avatar</label>\r\n                                <div className=\"custom-file\">\r\n                                    <input type=\"file\" onChange={changeNameFile} className=\"custom-file-input\" name=\"img\"/>\r\n                                    <label className=\"custom-file-label\">Escolha a foto</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <button type=\"submit\" className=\"btn btn-dark mr-2\">Alterar</button>\r\n                            <Link className=\"btn btn-dark mr-2\" to='/dashboard'>Voltar</Link>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <ToastContainer />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ConfigUser","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\ColorsCard\\index.js",["360","361","362","363","364","365","366","367","368"],"import React, { useEffect, useContext, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../../utils/auth'\r\nimport { BASE_URL_BACK, BASE_URL_LOGIN } from '../../utils/variaveisAmbiente'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport {messages} from '../../utils/messages'\r\nimport Loading from '../Loading'\r\nimport Modals from '../Modals'\r\nimport $ from 'jquery'\r\n\r\nconst ColorsCard = () => {\r\n    const [data, setData] = useState([])\r\n    const [lineId, setLineId] = useState()\r\n    const token = localStorage.getItem('token')\r\n    const refLoading = useRef()\r\n    const refModal = useRef()\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!isAdmin){\r\n            return null\r\n        }\r\n        axios.get(`${BASE_URL_BACK}/cardcolors`, configAxios)\r\n        .then(resp => {\r\n            setData(resp.data.color)\r\n            $(document).ready(function(){\r\n                let dataTable = $('#dataTable').DataTable({\r\n                    \"responsive\": true,\r\n                    \"autoWidth\": false,\r\n                    \"lengthChange\": false,\r\n                    \"pageLength\": 10,\r\n                    \"bInfo\" : false,\r\n                    \"language\": {\r\n                        \"paginate\": {\r\n                          \"previous\": \"Anterior\",\r\n                          \"next\": \"Próxima\"\r\n                        },\r\n                        \"emptyTable\": \"Não existe dados para serem carregados\"\r\n                    }\r\n                })\r\n\r\n                $('#searchBarTec').on('keyup change', function () {\r\n                    dataTable.search(this.value).draw();\r\n                })\r\n\r\n                refLoading.current.executeLoading()\r\n            })\r\n        })\r\n        .catch(err => {\r\n            toast.info(messages(err.response.data.message))\r\n            if(err.response.data.message == 'Token invalid'){\r\n                setTimeout(() => {\r\n                    window.location.href = `${BASE_URL_LOGIN}`\r\n                }, 5000);\r\n            }\r\n        })\r\n    },[isAdmin])\r\n\r\n    const renderRow = () => {\r\n        return data.map(line => (\r\n                <tr key={line.id}>\r\n                    <td>{line.color}</td>\r\n                    <td className=\"text-center\"><Link className='link_text_pen' to={`editcolorscard/${line.id}`}><i className=\"fas fa-pencil-alt click\"></i></Link></td>\r\n                    <td className=\"text-center\"><i className=\"fas fa-trash-alt click\" onClick={() => openModal(line.id)}></i></td>\r\n                </tr>\r\n            )\r\n        )\r\n    }\r\n\r\n    const openModal = (id) => {\r\n        setLineId(id)\r\n        refModal.current.openModal()\r\n    }\r\n\r\n    const deleteItem = () => {\r\n        axios.delete(`${BASE_URL_BACK}/cardcolors/${lineId}`,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message == 'color deleted'){\r\n                    toast.success(messages(resp.data.message))\r\n                    const filtered = data.filter(color => {\r\n                        return color.id != lineId\r\n                    })            \r\n                    setData(filtered)\r\n                    refModal.current.openModal()\r\n                }\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }\r\n\r\n    if (isAuth == false) {\r\n        window.location.href = `${BASE_URL_LOGIN}`\r\n    }\r\n\r\n    if (isAuth == false) {\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/cards' />\r\n        )\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-2\">\r\n                            <h1>Cores das cartas</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-9\">\r\n                            <div className=\"input-group mb-3\">\r\n                                <input type=\"email\" className=\"form-control\" id=\"searchBarTec\" placeholder=\"Qual cor você está procurando?\" />\r\n                                <div className=\"input-group-append\">\r\n                                    <div className=\"input-group-text\">\r\n                                        <i className=\"fas fa-search\"></i>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-3 mb-2 mr-0\">\r\n                            <button type=\"button\" className=\"btn btn-dark mr-1\"><Link className='link_text' to='/addcolorscard'>Adicionar</Link></button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <table id=\"dataTable\" className=\"table table-bordered table-responsive-sm table-responsive-md\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Cor</th>\r\n                                        <th className=\"text-center\">Editar</th>\r\n                                        <th className=\"text-center\">Remover</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {renderRow()}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <ToastContainer />\r\n            <Modals\r\n                title='Exclusão de card'\r\n                body='Deseja realmente excluir esta cor? Se excluir, todo os cards desta cor serão removidos automaticamente'\r\n                nameButton='Excluir'\r\n                deleteItem={deleteItem}\r\n                ref={refModal}\r\n            />\r\n            <Loading\r\n                ref={refLoading}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ColorsCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddColorsCard\\index.js",["369","370","371","372"],"import React, { useState, useContext } from 'react';\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios'\r\nimport {messages} from '../../utils/messages'\r\n\r\nconst AddColorsCard = () => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [color, setColor] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const history = useHistory()\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    const changeColor = evt => {\r\n        setColor(evt.target.value)\r\n    }\r\n\r\n    const saveColor = evt => {\r\n        evt.preventDefault()\r\n\r\n        const objColorCard ={\r\n            color\r\n        }\r\n\r\n        axios.post(`${BASE_URL_BACK}/cardcolors`,objColorCard,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/colors')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                console.log({err});\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n        \r\n    }\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/colors' />\r\n        )\r\n    }else{\r\n        \r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-3\">\r\n                            <h1>Cadastrar Cores</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <form onSubmit={saveColor}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Nome da cor</label>\r\n                                    <input type=\"text\" className=\"form-control\" value={color} placeholder=\"Digite a cor\" onChange={changeColor} required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <button type=\"submit\" className=\"btn btn-dark mr-2\">Cadastrar</button>\r\n                                <Link className=\"btn btn-dark mr-2\" to='/colors'>Voltar</Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <ToastContainer />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddColorsCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditColorsCard\\index.js",["373","374","375","376","377"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios'\r\nimport {messages} from '../../utils/messages'\r\nimport _ from 'lodash'\r\n\r\nconst EditColorsCard = (props) => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [color, setColor] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const history = useHistory()\r\n    const {id} = props.match.params\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardcolors`,configAxios)\r\n            .then(resp => {\r\n                // console.log(resp.data.color);\r\n                const colorFilter = _.filter(resp.data.color, {'id': parseInt(id)})\r\n                setColor(colorFilter[0].color)\r\n            })\r\n    },[id])\r\n\r\n    const changeColor = evt => {\r\n        setColor(evt.target.value)\r\n    }\r\n\r\n    const saveColor = evt => {\r\n        evt.preventDefault()\r\n\r\n        const objColorCard ={\r\n            color\r\n        }\r\n\r\n        axios.put(`${BASE_URL_BACK}/cardcolors/${id}`,objColorCard,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/colors')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                console.log({err});\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n        \r\n    }\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/cards' />\r\n        )\r\n    }else{\r\n        \r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-3\">\r\n                            <h1>Editar cor</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <form onSubmit={saveColor}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Cor</label>\r\n                                    <input type=\"text\" className=\"form-control\" value={color} placeholder=\"Digite a cor\" onChange={changeColor} required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <button type=\"submit\" className=\"btn btn-dark mr-2\">Alterar</button>\r\n                                <Link className=\"btn btn-dark mr-2\" to='/colors'>Voltar</Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <ToastContainer />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditColorsCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\LanguageCard\\index.js",["378","379","380","381","382","383","384","385","386"],"import React, { useEffect, useContext, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../../utils/auth'\r\nimport { BASE_URL_BACK, BASE_URL_LOGIN } from '../../utils/variaveisAmbiente'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport {messages} from '../../utils/messages'\r\nimport Loading from '../Loading'\r\nimport Modals from '../Modals'\r\nimport $ from 'jquery'\r\n\r\nconst LanguageCard = () => {\r\n    const [data, setData] = useState([])\r\n    const [lineId, setLineId] = useState()\r\n    const token = localStorage.getItem('token')\r\n    const refLoading = useRef()\r\n    const refModal = useRef()\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!isAdmin){\r\n            return null\r\n        }\r\n        axios.get(`${BASE_URL_BACK}/cardlanguages`, configAxios)\r\n        .then(resp => {\r\n            setData(resp.data.language)\r\n            $(document).ready(function(){\r\n                let dataTable = $('#dataTable').DataTable({\r\n                    \"responsive\": true,\r\n                    \"autoWidth\": false,\r\n                    \"lengthChange\": false,\r\n                    \"pageLength\": 10,\r\n                    \"bInfo\" : false,\r\n                    \"language\": {\r\n                        \"paginate\": {\r\n                          \"previous\": \"Anterior\",\r\n                          \"next\": \"Próxima\"\r\n                        },\r\n                        \"emptyTable\": \"Não existe dados para serem carregados\"\r\n                    }\r\n                })\r\n\r\n                $('#searchBarTec').on('keyup change', function () {\r\n                    dataTable.search(this.value).draw();\r\n                })\r\n\r\n                refLoading.current.executeLoading()\r\n            })\r\n        })\r\n        .catch(err => {\r\n            toast.info(messages(err.response.data.message))\r\n            if(err.response.data.message == 'Token invalid'){\r\n                setTimeout(() => {\r\n                    window.location.href = `${BASE_URL_LOGIN}`\r\n                }, 5000);\r\n            }\r\n        })\r\n    },[isAdmin])\r\n\r\n    const renderRow = () => {\r\n        return data.map(line => (\r\n                <tr key={line.id}>\r\n                    <td>{line.language}</td>\r\n                    <td className=\"text-center\"><Link className='link_text_pen' to={`editlanguagescard/${line.id}`}><i className=\"fas fa-pencil-alt click\"></i></Link></td>\r\n                    <td className=\"text-center\"><i className=\"fas fa-trash-alt click\" onClick={() => openModal(line.id)}></i></td>\r\n                </tr>\r\n            )\r\n        )\r\n    }\r\n\r\n    const openModal = (id) => {\r\n        setLineId(id)\r\n        refModal.current.openModal()\r\n    }\r\n\r\n    const deleteItem = () => {\r\n        axios.delete(`${BASE_URL_BACK}/cardlanguages/${lineId}`,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message == 'language deleted'){\r\n                    toast.success(messages(resp.data.message))\r\n                    const filtered = data.filter(language => {\r\n                        return language.id != lineId\r\n                    })            \r\n                    setData(filtered)\r\n                    refModal.current.openModal()\r\n                }\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }\r\n\r\n    if (isAuth == false) {\r\n        window.location.href = `${BASE_URL_LOGIN}`\r\n    }\r\n\r\n    if (isAuth == false) {\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/cards' />\r\n        )\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-2\">\r\n                            <h1>Idiomas das cartas</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-9\">\r\n                            <div className=\"input-group mb-3\">\r\n                                <input type=\"email\" className=\"form-control\" id=\"searchBarTec\" placeholder=\"Qual idioma você está procurando?\" />\r\n                                <div className=\"input-group-append\">\r\n                                    <div className=\"input-group-text\">\r\n                                        <i className=\"fas fa-search\"></i>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-3 mb-2 mr-0\">\r\n                            <button type=\"button\" className=\"btn btn-dark mr-1\"><Link className='link_text' to='/addlanguagescard'>Adicionar</Link></button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <table id=\"dataTable\" className=\"table table-bordered table-responsive-sm table-responsive-md\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Linguagem</th>\r\n                                        <th className=\"text-center\">Editar</th>\r\n                                        <th className=\"text-center\">Remover</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {renderRow()}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <ToastContainer />\r\n            <Modals\r\n                title='Exclusão de card'\r\n                body='Deseja realmente excluir este idioma? Se excluir, todo os cards com este idioma serão removidos automaticamente'\r\n                nameButton='Excluir'\r\n                deleteItem={deleteItem}\r\n                ref={refModal}\r\n            />\r\n            <Loading\r\n                ref={refLoading}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LanguageCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddLanguagesCard\\index.js",["387","388","389","390"],"import React, { useState, useContext } from 'react';\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios'\r\nimport {messages} from '../../utils/messages'\r\n\r\nconst AddLanguagesCard = () => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [language, setLanguage] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const history = useHistory()\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    const changeLanguage = evt => {\r\n        setLanguage(evt.target.value)\r\n    }\r\n\r\n    const saveLanguage = evt => {\r\n        evt.preventDefault()\r\n\r\n        const objLanguage ={\r\n            language\r\n        }\r\n\r\n        axios.post(`${BASE_URL_BACK}/cardlanguages`,objLanguage,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/languages')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                console.log({err});\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n        \r\n    }\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/cards' />\r\n        )\r\n    }else{\r\n        \r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-3\">\r\n                            <h1>Cadastrar Idiomas</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <form onSubmit={saveLanguage}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Nome da idioma</label>\r\n                                    <input type=\"text\" className=\"form-control\" value={language} placeholder=\"Digite o idioma\" onChange={changeLanguage} required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <button type=\"submit\" className=\"btn btn-dark mr-2\">Cadastrar</button>\r\n                                <Link className=\"btn btn-dark mr-2\" to='/languages'>Voltar</Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <ToastContainer />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddLanguagesCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditLanguagesCard\\index.js",["391","392","393","394","395"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios'\r\nimport {messages} from '../../utils/messages'\r\nimport _ from 'lodash'\r\n\r\nconst EditLanguagesCard = (props) => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [language, setLanguage] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const history = useHistory()\r\n    const {id} = props.match.params\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardlanguages`,configAxios)\r\n            .then(resp => {\r\n                const colorFilter = _.filter(resp.data.language, {'id': parseInt(id)})\r\n                setLanguage(colorFilter[0].language)\r\n            })\r\n    },[id])\r\n\r\n    const changeColor = evt => {\r\n        setLanguage(evt.target.value)\r\n    }\r\n\r\n    const saveColor = evt => {\r\n        evt.preventDefault()\r\n\r\n        const objLanguage ={\r\n            language \r\n        }\r\n\r\n        axios.put(`${BASE_URL_BACK}/cardlanguages/${id}`,objLanguage,configAxios)\r\n            .then(resp => {\r\n                console.log(resp.data);\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/languages')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                console.log({err});\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n        \r\n    }\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/cards' />\r\n        )\r\n    }else{\r\n        \r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-3\">\r\n                            <h1>Editar linguagem</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <form onSubmit={saveColor}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Linguagem</label>\r\n                                    <input type=\"text\" className=\"form-control\" value={language} placeholder=\"Digite a linguagem\" onChange={changeColor} required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <button type=\"submit\" className=\"btn btn-dark mr-2\">Alterar</button>\r\n                                <Link className=\"btn btn-dark mr-2\" to='/languages'>Voltar</Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <ToastContainer />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditLanguagesCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddQualityCard\\index.js",["396","397","398","399"],"import React, { useState, useContext } from 'react';\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios'\r\nimport {messages} from '../../utils/messages'\r\n\r\nconst AddQualityCard = () => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [quality, setQuality] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const history = useHistory()\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    const changeQuality = evt => {\r\n        setQuality(evt.target.value)\r\n    }\r\n\r\n    const saveQuality = evt => {\r\n        evt.preventDefault()\r\n\r\n        const objQuality ={\r\n            quality\r\n        }\r\n\r\n        axios.post(`${BASE_URL_BACK}/cardqualities`,objQuality,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/qualities')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                console.log({err});\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n        \r\n    }\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/cards' />\r\n        )\r\n    }else{\r\n        \r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-3\">\r\n                            <h1>Cadastrar Qualidade</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <form onSubmit={saveQuality}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Nome da qualidade</label>\r\n                                    <input type=\"text\" className=\"form-control\" value={quality} placeholder=\"Digite a qualidade\" onChange={changeQuality} required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <button type=\"submit\" className=\"btn btn-dark mr-2\">Cadastrar</button>\r\n                                <Link className=\"btn btn-dark mr-2\" to='/languages'>Voltar</Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <ToastContainer />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddQualityCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditQualitiesCard\\index.js",["400","401","402","403","404"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios'\r\nimport {messages} from '../../utils/messages'\r\nimport _ from 'lodash'\r\n\r\nconst EditQualitiesCard = (props) => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [quality, setQuality] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const history = useHistory()\r\n    const {id} = props.match.params\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardqualities`,configAxios)\r\n            .then(resp => {\r\n                const colorFilter = _.filter(resp.data.quality, {'id': parseInt(id)})\r\n                setQuality(colorFilter[0].quality)\r\n            })\r\n    },[id])\r\n\r\n    const changeQuality = evt => {\r\n        setQuality(evt.target.value)\r\n    }\r\n\r\n    const saveColor = evt => {\r\n        evt.preventDefault()\r\n\r\n        const objQuality ={\r\n            quality \r\n        }\r\n\r\n        axios.put(`${BASE_URL_BACK}/cardqualities/${id}`,objQuality,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/qualities')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n        \r\n    }\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/cards' />\r\n        )\r\n    }else{\r\n        \r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-3\">\r\n                            <h1>Qualidade</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <form onSubmit={saveColor}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Qualidade</label>\r\n                                    <input type=\"text\" className=\"form-control\" value={quality} placeholder=\"Digite a qualidade\" onChange={changeQuality} required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <button type=\"submit\" className=\"btn btn-dark mr-2\">Alterar</button>\r\n                                <Link className=\"btn btn-dark mr-2\" to='/languages'>Voltar</Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <ToastContainer />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditQualitiesCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\QualitiesCard\\index.js",["405","406","407","408","409","410","411","412","413"],"import React, { useEffect, useContext, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../../utils/auth'\r\nimport { BASE_URL_BACK, BASE_URL_LOGIN } from '../../utils/variaveisAmbiente'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport {messages} from '../../utils/messages'\r\nimport Loading from '../Loading'\r\nimport Modals from '../Modals'\r\nimport $ from 'jquery'\r\n\r\nconst QualitiesCard = () => {\r\n    const [data, setData] = useState([])\r\n    const [lineId, setLineId] = useState()\r\n    const token = localStorage.getItem('token')\r\n    const refLoading = useRef()\r\n    const refModal = useRef()\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!isAdmin){\r\n            return null\r\n        }\r\n        axios.get(`${BASE_URL_BACK}/cardqualities`, configAxios)\r\n        .then(resp => {\r\n            setData(resp.data.quality)\r\n            $(document).ready(function(){\r\n                let dataTable = $('#dataTable').DataTable({\r\n                    \"responsive\": true,\r\n                    \"autoWidth\": false,\r\n                    \"lengthChange\": false,\r\n                    \"pageLength\": 10,\r\n                    \"bInfo\" : false,\r\n                    \"language\": {\r\n                        \"paginate\": {\r\n                          \"previous\": \"Anterior\",\r\n                          \"next\": \"Próxima\"\r\n                        },\r\n                        \"emptyTable\": \"Não existe dados para serem carregados\"\r\n                    }\r\n                })\r\n\r\n                $('#searchBarTec').on('keyup change', function () {\r\n                    dataTable.search(this.value).draw();\r\n                })\r\n\r\n                refLoading.current.executeLoading()\r\n            })\r\n        })\r\n        .catch(err => {\r\n            toast.info(messages(err.response.data.message))\r\n            if(err.response.data.message == 'Token invalid'){\r\n                setTimeout(() => {\r\n                    window.location.href = `${BASE_URL_LOGIN}`\r\n                }, 5000);\r\n            }\r\n        })\r\n    },[isAdmin])\r\n\r\n    const renderRow = () => {\r\n        return data.map(line => (\r\n                <tr key={line.id}>\r\n                    <td>{line.quality}</td>\r\n                    <td className=\"text-center\"><Link className='link_text_pen' to={`editqualitiescard/${line.id}`}><i className=\"fas fa-pencil-alt click\"></i></Link></td>\r\n                    <td className=\"text-center\"><i className=\"fas fa-trash-alt click\" onClick={() => openModal(line.id)}></i></td>\r\n                </tr>\r\n            )\r\n        )\r\n    }\r\n\r\n    const openModal = (id) => {\r\n        setLineId(id)\r\n        refModal.current.openModal()\r\n    }\r\n\r\n    const deleteItem = () => {\r\n        axios.delete(`${BASE_URL_BACK}/cardqualities/${lineId}`,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message == 'quality deleted'){\r\n                    toast.success(messages(resp.data.message))\r\n                    const filtered = data.filter(qualities => {\r\n                        return qualities.id != lineId\r\n                    })            \r\n                    setData(filtered)\r\n                    refModal.current.openModal()\r\n                }\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }\r\n\r\n    if (isAuth == false) {\r\n        window.location.href = `${BASE_URL_LOGIN}`\r\n    }\r\n\r\n    if (isAuth == false) {\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/cards' />\r\n        )\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-2\">\r\n                            <h1>Qualidade das cartas</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-9\">\r\n                            <div className=\"input-group mb-3\">\r\n                                <input type=\"email\" className=\"form-control\" id=\"searchBarTec\" placeholder=\"Qual qualidade você está procurando?\" />\r\n                                <div className=\"input-group-append\">\r\n                                    <div className=\"input-group-text\">\r\n                                        <i className=\"fas fa-search\"></i>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-3 mb-2 mr-0\">\r\n                            <button type=\"button\" className=\"btn btn-dark mr-1\"><Link className='link_text' to='/addqualitiescard'>Adicionar</Link></button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <table id=\"dataTable\" className=\"table table-bordered table-responsive-sm table-responsive-md\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Qualitdade</th>\r\n                                        <th className=\"text-center\">Editar</th>\r\n                                        <th className=\"text-center\">Remover</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {renderRow()}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <ToastContainer />\r\n            <Modals\r\n                title='Exclusão de card'\r\n                body='Deseja realmente excluir esta qualidade? Se excluir, todo os cards com esta qualidade serão removidos automaticamente'\r\n                nameButton='Excluir'\r\n                deleteItem={deleteItem}\r\n                ref={refModal}\r\n            />\r\n            <Loading\r\n                ref={refLoading}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QualitiesCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\RaritiesCard\\index.js",["414","415","416","417","418","419","420","421","422"],"import React, { useEffect, useContext, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../../utils/auth'\r\nimport { BASE_URL_BACK, BASE_URL_LOGIN } from '../../utils/variaveisAmbiente'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport {messages} from '../../utils/messages'\r\nimport Loading from '../Loading'\r\nimport Modals from '../Modals'\r\nimport $ from 'jquery'\r\n\r\nconst RaritiesCard = () => {\r\n    const [data, setData] = useState([])\r\n    const [lineId, setLineId] = useState()\r\n    const token = localStorage.getItem('token')\r\n    const refLoading = useRef()\r\n    const refModal = useRef()\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!isAdmin){\r\n            return null\r\n        }\r\n        axios.get(`${BASE_URL_BACK}/cardrarities`, configAxios)\r\n        .then(resp => {\r\n            setData(resp.data.rarity)\r\n            $(document).ready(function(){\r\n                let dataTable = $('#dataTable').DataTable({\r\n                    \"responsive\": true,\r\n                    \"autoWidth\": false,\r\n                    \"lengthChange\": false,\r\n                    \"pageLength\": 10,\r\n                    \"bInfo\" : false,\r\n                    \"language\": {\r\n                        \"paginate\": {\r\n                          \"previous\": \"Anterior\",\r\n                          \"next\": \"Próxima\"\r\n                        },\r\n                        \"emptyTable\": \"Não existe dados para serem carregados\"\r\n                    }\r\n                })\r\n\r\n                $('#searchBarTec').on('keyup change', function () {\r\n                    dataTable.search(this.value).draw();\r\n                })\r\n\r\n                refLoading.current.executeLoading()\r\n            })\r\n        })\r\n        .catch(err => {\r\n            toast.info(messages(err.response.data.message))\r\n            if(err.response.data.message == 'Token invalid'){\r\n                setTimeout(() => {\r\n                    window.location.href = `${BASE_URL_LOGIN}`\r\n                }, 5000);\r\n            }\r\n        })\r\n    },[isAdmin])\r\n\r\n    const renderRow = () => {\r\n        return data.map(line => (\r\n                <tr key={line.id}>\r\n                    <td>{line.rarity}</td>\r\n                    <td className=\"text-center\"><Link className='link_text_pen' to={`editraritiescard/${line.id}`}><i className=\"fas fa-pencil-alt click\"></i></Link></td>\r\n                    <td className=\"text-center\"><i className=\"fas fa-trash-alt click\" onClick={() => openModal(line.id)}></i></td>\r\n                </tr>\r\n            )\r\n        )\r\n    }\r\n\r\n    const openModal = (id) => {\r\n        setLineId(id)\r\n        refModal.current.openModal()\r\n    }\r\n\r\n    const deleteItem = () => {\r\n        axios.delete(`${BASE_URL_BACK}/cardrarities/${lineId}`,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message == 'rarity deleted'){\r\n                    toast.success(messages(resp.data.message))\r\n                    const filtered = data.filter(rarity => {\r\n                        return rarity.id != lineId\r\n                    })            \r\n                    setData(filtered)\r\n                    refModal.current.openModal()\r\n                }\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }\r\n\r\n    if (isAuth == false) {\r\n        window.location.href = `${BASE_URL_LOGIN}`\r\n    }\r\n\r\n    if (isAuth == false) {\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/cards' />\r\n        )\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-2\">\r\n                            <h1>Raridade das cartas</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-9\">\r\n                            <div className=\"input-group mb-3\">\r\n                                <input type=\"email\" className=\"form-control\" id=\"searchBarTec\" placeholder=\"Qual raridade você está procurando?\" />\r\n                                <div className=\"input-group-append\">\r\n                                    <div className=\"input-group-text\">\r\n                                        <i className=\"fas fa-search\"></i>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-3 mb-2 mr-0\">\r\n                            <button type=\"button\" className=\"btn btn-dark mr-1\"><Link className='link_text' to='/addraritiescard'>Adicionar</Link></button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <table id=\"dataTable\" className=\"table table-bordered table-responsive-sm table-responsive-md\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Qualitdade</th>\r\n                                        <th className=\"text-center\">Editar</th>\r\n                                        <th className=\"text-center\">Remover</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {renderRow()}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <ToastContainer />\r\n            <Modals\r\n                title='Exclusão de card'\r\n                body='Deseja realmente excluir esta raridade? Se excluir, todo os cards com esta raridade serão removidos automaticamente'\r\n                nameButton='Excluir'\r\n                deleteItem={deleteItem}\r\n                ref={refModal}\r\n            />\r\n            <Loading\r\n                ref={refLoading}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RaritiesCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddRarityCard\\index.js",["423","424","425","426"],"import React, { useState, useContext } from 'react';\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios'\r\nimport {messages} from '../../utils/messages'\r\n\r\nconst AddRarityCard = () => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [rarity, setRarity] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const history = useHistory()\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    const changeRarity = evt => {\r\n        setRarity(evt.target.value)\r\n    }\r\n\r\n    const saveRarity = evt => {\r\n        evt.preventDefault()\r\n\r\n        const objRarity ={\r\n            rarity\r\n        }\r\n\r\n        axios.post(`${BASE_URL_BACK}/cardrarities`,objRarity,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/rarities')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                console.log({err});\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n        \r\n    }\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/cards' />\r\n        )\r\n    }else{\r\n        \r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-3\">\r\n                            <h1>Cadastrar Raridade</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <form onSubmit={saveRarity}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Nome da Raridade</label>\r\n                                    <input type=\"text\" className=\"form-control\" value={rarity} placeholder=\"Digite a raridade\" onChange={changeRarity} required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <button type=\"submit\" className=\"btn btn-dark mr-2\">Cadastrar</button>\r\n                                <Link className=\"btn btn-dark mr-2\" to='/rarities'>Voltar</Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <ToastContainer />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddRarityCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditRaritiesCard\\index.js",["427","428","429","430","431"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios'\r\nimport {messages} from '../../utils/messages'\r\nimport _ from 'lodash'\r\n\r\nconst EditRaritiesCard = (props) => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [rarity, setRarity] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const history = useHistory()\r\n    const {id} = props.match.params\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardrarities`,configAxios)\r\n            .then(resp => {\r\n                const colorFilter = _.filter(resp.data.rarity, {'id': parseInt(id)})\r\n                setRarity(colorFilter[0].rarity)\r\n            })\r\n    },[id])\r\n\r\n    const changeRarity = evt => {\r\n        setRarity(evt.target.value)\r\n    }\r\n\r\n    const saveRarity = evt => {\r\n        evt.preventDefault()\r\n\r\n        const objRarity ={\r\n            rarity \r\n        }\r\n\r\n        axios.put(`${BASE_URL_BACK}/cardrarities/${id}`,objRarity,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/rarities')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n        \r\n    }\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/cards' />\r\n        )\r\n    }else{\r\n        \r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-3\">\r\n                            <h1>Raridade</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <form onSubmit={saveRarity}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Raridade</label>\r\n                                    <input type=\"text\" className=\"form-control\" value={rarity} placeholder=\"Digite a raridade\" onChange={changeRarity} required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <button type=\"submit\" className=\"btn btn-dark mr-2\">Alterar</button>\r\n                                <Link className=\"btn btn-dark mr-2\" to='/rarities'>Voltar</Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <ToastContainer />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditRaritiesCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\TypesCard\\index.js",["432","433","434","435","436","437","438","439","440"],"import React, { useEffect, useContext, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../../utils/auth'\r\nimport { BASE_URL_BACK, BASE_URL_LOGIN } from '../../utils/variaveisAmbiente'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport {messages} from '../../utils/messages'\r\nimport Loading from '../Loading'\r\nimport Modals from '../Modals'\r\nimport $ from 'jquery'\r\n\r\nconst TypesCard = () => {\r\n    const [data, setData] = useState([])\r\n    const [lineId, setLineId] = useState()\r\n    const token = localStorage.getItem('token')\r\n    const refLoading = useRef()\r\n    const refModal = useRef()\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!isAdmin){\r\n            return null\r\n        }\r\n        axios.get(`${BASE_URL_BACK}/cardtypes`, configAxios)\r\n        .then(resp => {\r\n            setData(resp.data.type)\r\n            $(document).ready(function(){\r\n                let dataTable = $('#dataTable').DataTable({\r\n                    \"responsive\": true,\r\n                    \"autoWidth\": false,\r\n                    \"lengthChange\": false,\r\n                    \"pageLength\": 10,\r\n                    \"bInfo\" : false,\r\n                    \"language\": {\r\n                        \"paginate\": {\r\n                          \"previous\": \"Anterior\",\r\n                          \"next\": \"Próxima\"\r\n                        },\r\n                        \"emptyTable\": \"Não existe dados para serem carregados\"\r\n                    }\r\n                })\r\n\r\n                $('#searchBarTec').on('keyup change', function () {\r\n                    dataTable.search(this.value).draw();\r\n                })\r\n\r\n                refLoading.current.executeLoading()\r\n            })\r\n        })\r\n        .catch(err => {\r\n            toast.info(messages(err.response.data.message))\r\n            if(err.response.data.message == 'Token invalid'){\r\n                setTimeout(() => {\r\n                    window.location.href = `${BASE_URL_LOGIN}`\r\n                }, 5000);\r\n            }\r\n        })\r\n    },[isAdmin])\r\n\r\n    const renderRow = () => {\r\n        return data.map(line => (\r\n                <tr key={line.id}>\r\n                    <td>{line.type}</td>\r\n                    <td className=\"text-center\"><Link className='link_text_pen' to={`edittypescard/${line.id}`}><i className=\"fas fa-pencil-alt click\"></i></Link></td>\r\n                    <td className=\"text-center\"><i className=\"fas fa-trash-alt click\" onClick={() => openModal(line.id)}></i></td>\r\n                </tr>\r\n            )\r\n        )\r\n    }\r\n\r\n    const openModal = (id) => {\r\n        setLineId(id)\r\n        refModal.current.openModal()\r\n    }\r\n\r\n    const deleteItem = () => {\r\n        axios.delete(`${BASE_URL_BACK}/cardtypes/${lineId}`,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message == 'type deleted'){\r\n                    toast.success(messages(resp.data.message))\r\n                    const filtered = data.filter(rarity => {\r\n                        return rarity.id != lineId\r\n                    })            \r\n                    setData(filtered)\r\n                    refModal.current.openModal()\r\n                }\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }\r\n\r\n    if (isAuth == false) {\r\n        window.location.href = `${BASE_URL_LOGIN}`\r\n    }\r\n\r\n    if (isAuth == false) {\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/cards' />\r\n        )\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-2\">\r\n                            <h1>Tipo das cartas</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-9\">\r\n                            <div className=\"input-group mb-3\">\r\n                                <input type=\"email\" className=\"form-control\" id=\"searchBarTec\" placeholder=\"Qual tipo você está procurando?\" />\r\n                                <div className=\"input-group-append\">\r\n                                    <div className=\"input-group-text\">\r\n                                        <i className=\"fas fa-search\"></i>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-3 mb-2 mr-0\">\r\n                            <button type=\"button\" className=\"btn btn-dark mr-1\"><Link className='link_text' to='/addtypescard'>Adicionar</Link></button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <table id=\"dataTable\" className=\"table table-bordered table-responsive-sm table-responsive-md\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Tipo</th>\r\n                                        <th className=\"text-center\">Editar</th>\r\n                                        <th className=\"text-center\">Remover</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {renderRow()}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <ToastContainer />\r\n            <Modals\r\n                title='Exclusão de card'\r\n                body='Deseja realmente excluir este tipo? Se excluir, todo os cards com este tipo serão removidos automaticamente'\r\n                nameButton='Excluir'\r\n                deleteItem={deleteItem}\r\n                ref={refModal}\r\n            />\r\n            <Loading\r\n                ref={refLoading}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TypesCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\AddTypesCard\\index.js",["441","442","443","444"],"import React, { useState, useContext } from 'react';\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios'\r\nimport {messages} from '../../utils/messages'\r\n\r\nconst AddTypesCard = () => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [type, setType] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const history = useHistory()\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    const changeType = evt => {\r\n        setType(evt.target.value)\r\n    }\r\n\r\n    const saveType = evt => {\r\n        evt.preventDefault()\r\n\r\n        const objType ={\r\n            type\r\n        }\r\n\r\n        axios.post(`${BASE_URL_BACK}/cardtypes`,objType,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/types')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                console.log({err});\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n        \r\n    }\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/cards' />\r\n        )\r\n    }else{\r\n        \r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-3\">\r\n                            <h1>Cadastrar Tipos</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <form onSubmit={saveType}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Nome do Tipo</label>\r\n                                    <input type=\"text\" className=\"form-control\" value={type} placeholder=\"Digite o tipo\" onChange={changeType} required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <button type=\"submit\" className=\"btn btn-dark mr-2\">Cadastrar</button>\r\n                                <Link className=\"btn btn-dark mr-2\" to='/types'>Voltar</Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <ToastContainer />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddTypesCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditTypesCard\\index.js",["445","446","447","448","449"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios'\r\nimport {messages} from '../../utils/messages'\r\nimport _ from 'lodash'\r\n\r\nconst EditTypesCard = (props) => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [type, setType] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const history = useHistory()\r\n    const {id} = props.match.params\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardtypes`,configAxios)\r\n            .then(resp => {\r\n                const colorFilter = _.filter(resp.data.type, {'id': parseInt(id)})\r\n                setType(colorFilter[0].type)\r\n            })\r\n    },[id])\r\n\r\n    const changeType = evt => {\r\n        setType(evt.target.value)\r\n    }\r\n\r\n    const saveType = evt => {\r\n        evt.preventDefault()\r\n\r\n        const objType ={\r\n            type \r\n        }\r\n\r\n        axios.put(`${BASE_URL_BACK}/cardtypes/${id}`,objType,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/types')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n        \r\n    }\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/cards' />\r\n        )\r\n    }else{\r\n        \r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-3\">\r\n                            <h1>Raridade</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <form onSubmit={saveType}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Tipo</label>\r\n                                    <input type=\"text\" className=\"form-control\" value={type} placeholder=\"Digite o tipo\" onChange={changeType} required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <button type=\"submit\" className=\"btn btn-dark mr-2\">Alterar</button>\r\n                                <Link className=\"btn btn-dark mr-2\" to='/types'>Voltar</Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <ToastContainer />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditTypesCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditionsCards\\index.js",["450","451","452","453","454","455","456","457","458"],"import React, { useEffect, useContext, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../../utils/auth'\r\nimport { BASE_URL_BACK, BASE_URL_LOGIN } from '../../utils/variaveisAmbiente'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport {messages} from '../../utils/messages'\r\nimport Loading from '../Loading'\r\nimport Modals from '../Modals'\r\nimport $ from 'jquery'\r\n\r\nconst EditionsCard = () => {\r\n    const [data, setData] = useState([])\r\n    const [lineId, setLineId] = useState()\r\n    const token = localStorage.getItem('token')\r\n    const refLoading = useRef()\r\n    const refModal = useRef()\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!isAdmin){\r\n            return null\r\n        }\r\n        axios.get(`${BASE_URL_BACK}/cardeditions`, configAxios)\r\n        .then(resp => {\r\n            setData(resp.data.edition)\r\n            $(document).ready(function(){\r\n                let dataTable = $('#dataTable').DataTable({\r\n                    \"responsive\": true,\r\n                    \"autoWidth\": false,\r\n                    \"lengthChange\": false,\r\n                    \"pageLength\": 10,\r\n                    \"bInfo\" : false,\r\n                    \"language\": {\r\n                        \"paginate\": {\r\n                          \"previous\": \"Anterior\",\r\n                          \"next\": \"Próxima\"\r\n                        },\r\n                        \"emptyTable\": \"Não existe dados para serem carregados\"\r\n                    }\r\n                })\r\n\r\n                $('#searchBarTec').on('keyup change', function () {\r\n                    dataTable.search(this.value).draw();\r\n                })\r\n\r\n                refLoading.current.executeLoading()\r\n            })\r\n        })\r\n        .catch(err => {\r\n            toast.info(messages(err.response.data.message))\r\n            if(err.response.data.message == 'Token invalid'){\r\n                setTimeout(() => {\r\n                    window.location.href = `${BASE_URL_LOGIN}`\r\n                }, 5000);\r\n            }\r\n        })\r\n    },[isAdmin])\r\n\r\n    const renderRow = () => {\r\n        return data.map(line => (\r\n                <tr key={line.id}>\r\n                    <td>{line.edition}</td>\r\n                    <td className=\"text-center\"><Link className='link_text_pen' to={`editeditionscards/${line.id}`}><i className=\"fas fa-pencil-alt click\"></i></Link></td>\r\n                    <td className=\"text-center\"><i className=\"fas fa-trash-alt click\" onClick={() => openModal(line.id)}></i></td>\r\n                </tr>\r\n            )\r\n        )\r\n    }\r\n\r\n    const openModal = (id) => {\r\n        setLineId(id)\r\n        refModal.current.openModal()\r\n    }\r\n\r\n    const deleteItem = () => {\r\n        axios.delete(`${BASE_URL_BACK}/cardeditions/${lineId}`,configAxios)\r\n            .then(resp => {\r\n                if(resp.data.message == 'edition deleted'){\r\n                    toast.success(messages(resp.data.message))\r\n                    const filtered = data.filter(color => {\r\n                        return color.id != lineId\r\n                    })            \r\n                    setData(filtered)\r\n                    refModal.current.openModal()\r\n                }\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n    }\r\n\r\n    if (isAuth == false) {\r\n        window.location.href = `${BASE_URL_LOGIN}`\r\n    }\r\n\r\n    if (isAuth == false) {\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/cards' />\r\n        )\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-2\">\r\n                            <h1>Edições das cartas</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-9\">\r\n                            <div className=\"input-group mb-3\">\r\n                                <input type=\"email\" className=\"form-control\" id=\"searchBarTec\" placeholder=\"Qual edição você está procurando?\" />\r\n                                <div className=\"input-group-append\">\r\n                                    <div className=\"input-group-text\">\r\n                                        <i className=\"fas fa-search\"></i>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <table id=\"dataTable\" className=\"table table-bordered table-responsive-sm table-responsive-md\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Cor</th>\r\n                                        <th className=\"text-center\">Editar</th>\r\n                                        <th className=\"text-center\">Remover</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {renderRow()}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <ToastContainer />\r\n            <Modals\r\n                title='Exclusão de card'\r\n                body='Deseja realmente excluir esta edição? Se excluir, todo os cards desta edição serão removidos automaticamente'\r\n                nameButton='Excluir'\r\n                deleteItem={deleteItem}\r\n                ref={refModal}\r\n            />\r\n            <Loading\r\n                ref={refLoading}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditionsCard","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\EditEditionsCards\\index.js",["459","460","461","462","463","464"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport {Link, useHistory, Redirect} from 'react-router-dom'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport {BASE_URL_BACK, BASE_URL_LOGIN} from '../../utils/variaveisAmbiente'\r\nimport {AuthContext} from '../../utils/auth'\r\nimport axios from 'axios'\r\nimport {messages} from '../../utils/messages'\r\nimport _ from 'lodash'\r\n\r\nconst EditEditionsCards = (props) => {\r\n    let {isAuth} = useContext(AuthContext)\r\n    let {isAdmin} = useContext(AuthContext)\r\n    const [edition, setEdition] = useState('')\r\n    const [code, setCode] = useState('')\r\n    const token = localStorage.getItem('token')\r\n    const history = useHistory()\r\n    const {id} = props.match.params\r\n\r\n    const configAxios = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL_BACK}/cardeditions`,configAxios)\r\n            .then(resp => {\r\n                const colorFilter = _.filter(resp.data.edition, {'id': parseInt(id)})\r\n                const code = _.filter(resp.data.edition, {'id': parseInt(id)})\r\n                setEdition(colorFilter[0].edition)\r\n                setCode(colorFilter[0].code)\r\n            })\r\n    },[id])\r\n\r\n    const changeEdition = evt => {\r\n        setEdition(evt.target.value)\r\n    }\r\n\r\n    const changeCode = evt => {\r\n        setCode(evt.target.value)\r\n    }\r\n\r\n    const saveColor = evt => {\r\n        evt.preventDefault()\r\n\r\n        const objLanguage ={\r\n            edition,\r\n            code\r\n        }\r\n\r\n        axios.put(`${BASE_URL_BACK}/cardeditions/${id}`,objLanguage,configAxios)\r\n            .then(resp => {\r\n                toast.success(messages(resp.data.message))\r\n                setTimeout(() => {\r\n                    history.push('/editions')\r\n                }, 5000);\r\n            })\r\n            .catch(err => {\r\n                //Caso dê algum erro é enviada uma mensagem para o usuário\r\n                console.log({err});\r\n                toast.info(messages(err.response.data.message))\r\n            })\r\n        \r\n    }\r\n\r\n    if(isAuth == false){\r\n        return (\r\n            window.location.href = `${BASE_URL_LOGIN}`\r\n        )\r\n    }else{\r\n        \r\n    }\r\n    \r\n    if(isAuth == false){\r\n        return null\r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return (\r\n            <Redirect to='/cards' />\r\n        )\r\n    }else{\r\n        \r\n    }\r\n\r\n    if(isAdmin == false){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2 mb-3\">\r\n                            <h1>Editar edição</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <form onSubmit={saveColor}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Edição</label>\r\n                                    <input type=\"text\" className=\"form-control\" value={edition} placeholder=\"Digite a linguagem\" onChange={changeEdition} required />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Código</label>\r\n                                    <input type=\"text\" className=\"form-control\" value={code} placeholder=\"Digite a linguagem\" onChange={changeCode} required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <button type=\"submit\" className=\"btn btn-dark mr-2\">Alterar</button>\r\n                                <Link className=\"btn btn-dark mr-2\" to='/editions'>Voltar</Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <ToastContainer />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditEditionsCards","C:\\Users\\sauloseytiyamade\\Documents\\dev\\tccFrontend\\src\\components\\LogView\\index.js",["465","466","467","468","469","470","471","472","473","474"],{"ruleId":"475","replacedBy":"476"},{"ruleId":"477","replacedBy":"478"},{"ruleId":"479","severity":1,"message":"480","line":7,"column":1,"nodeType":"481","endLine":17,"endColumn":2},{"ruleId":"482","severity":1,"message":"483","line":1,"column":10,"nodeType":"484","messageId":"485","endLine":1,"endColumn":27},{"ruleId":"486","severity":1,"message":"487","line":16,"column":8,"nodeType":"488","endLine":16,"endColumn":10,"suggestions":"489"},{"ruleId":"486","severity":1,"message":"490","line":26,"column":5,"nodeType":"484","endLine":26,"endColumn":14,"suggestions":"491"},{"ruleId":"492","severity":1,"message":"493","line":27,"column":23,"nodeType":"494","messageId":"495","endLine":27,"endColumn":25},{"ruleId":"492","severity":1,"message":"493","line":64,"column":34,"nodeType":"494","messageId":"495","endLine":64,"endColumn":36},{"ruleId":"492","severity":1,"message":"493","line":97,"column":42,"nodeType":"494","messageId":"495","endLine":97,"endColumn":44},{"ruleId":"492","severity":1,"message":"493","line":137,"column":34,"nodeType":"494","messageId":"495","endLine":137,"endColumn":36},{"ruleId":"492","severity":1,"message":"493","line":169,"column":42,"nodeType":"494","messageId":"495","endLine":169,"endColumn":44},{"ruleId":"482","severity":1,"message":"496","line":2,"column":25,"nodeType":"484","messageId":"485","endLine":2,"endColumn":33},{"ruleId":"482","severity":1,"message":"497","line":5,"column":9,"nodeType":"484","messageId":"485","endLine":5,"endColumn":22},{"ruleId":"492","severity":1,"message":"493","line":48,"column":15,"nodeType":"494","messageId":"495","endLine":48,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":52,"column":15,"nodeType":"494","messageId":"495","endLine":52,"endColumn":17},{"ruleId":"482","severity":1,"message":"498","line":1,"column":26,"nodeType":"484","messageId":"485","endLine":1,"endColumn":35},{"ruleId":"492","severity":1,"message":"493","line":37,"column":21,"nodeType":"494","messageId":"495","endLine":37,"endColumn":23},{"ruleId":"492","severity":1,"message":"493","line":46,"column":38,"nodeType":"494","messageId":"495","endLine":46,"endColumn":40},{"ruleId":"492","severity":1,"message":"493","line":54,"column":46,"nodeType":"494","messageId":"495","endLine":54,"endColumn":48},{"ruleId":"499","severity":1,"message":"500","line":81,"column":9,"nodeType":"501","messageId":"495","endLine":82,"endColumn":47},{"ruleId":"499","severity":1,"message":"500","line":83,"column":9,"nodeType":"501","messageId":"495","endLine":84,"endColumn":38},{"ruleId":"482","severity":1,"message":"502","line":5,"column":9,"nodeType":"484","messageId":"485","endLine":5,"endColumn":13},{"ruleId":"482","severity":1,"message":"496","line":5,"column":15,"nodeType":"484","messageId":"485","endLine":5,"endColumn":23},{"ruleId":"482","severity":1,"message":"503","line":8,"column":8,"nodeType":"484","messageId":"485","endLine":8,"endColumn":13},{"ruleId":"492","severity":1,"message":"493","line":52,"column":42,"nodeType":"494","messageId":"495","endLine":52,"endColumn":44},{"ruleId":"486","severity":1,"message":"504","line":57,"column":7,"nodeType":"488","endLine":57,"endColumn":14,"suggestions":"505"},{"ruleId":"492","severity":1,"message":"493","line":59,"column":15,"nodeType":"494","messageId":"495","endLine":59,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":67,"column":15,"nodeType":"494","messageId":"495","endLine":67,"endColumn":17},{"ruleId":"482","severity":1,"message":"496","line":9,"column":39,"nodeType":"484","messageId":"485","endLine":9,"endColumn":47},{"ruleId":"482","severity":1,"message":"506","line":23,"column":12,"nodeType":"484","messageId":"485","endLine":23,"endColumn":24},{"ruleId":"482","severity":1,"message":"507","line":23,"column":26,"nodeType":"484","messageId":"485","endLine":23,"endColumn":41},{"ruleId":"492","severity":1,"message":"493","line":36,"column":59,"nodeType":"494","messageId":"495","endLine":36,"endColumn":61},{"ruleId":"492","severity":1,"message":"493","line":37,"column":60,"nodeType":"494","messageId":"495","endLine":37,"endColumn":62},{"ruleId":"492","severity":1,"message":"493","line":38,"column":58,"nodeType":"494","messageId":"495","endLine":38,"endColumn":60},{"ruleId":"492","severity":1,"message":"493","line":39,"column":58,"nodeType":"494","messageId":"495","endLine":39,"endColumn":60},{"ruleId":"492","severity":1,"message":"493","line":40,"column":56,"nodeType":"494","messageId":"495","endLine":40,"endColumn":58},{"ruleId":"486","severity":1,"message":"508","line":42,"column":7,"nodeType":"488","endLine":42,"endColumn":9,"suggestions":"509"},{"ruleId":"486","severity":1,"message":"510","line":49,"column":7,"nodeType":"488","endLine":49,"endColumn":19,"suggestions":"511"},{"ruleId":"486","severity":1,"message":"510","line":56,"column":7,"nodeType":"488","endLine":56,"endColumn":18,"suggestions":"512"},{"ruleId":"492","severity":1,"message":"493","line":58,"column":15,"nodeType":"494","messageId":"495","endLine":58,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":66,"column":15,"nodeType":"494","messageId":"495","endLine":66,"endColumn":17},{"ruleId":"513","severity":1,"message":"514","line":86,"column":20,"nodeType":"515","messageId":"516","endLine":86,"endColumn":65},{"ruleId":"492","severity":1,"message":"493","line":101,"column":71,"nodeType":"494","messageId":"495","endLine":101,"endColumn":73},{"ruleId":"492","severity":1,"message":"493","line":118,"column":74,"nodeType":"494","messageId":"495","endLine":118,"endColumn":76},{"ruleId":"482","severity":1,"message":"517","line":16,"column":11,"nodeType":"484","messageId":"485","endLine":16,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":86,"column":50,"nodeType":"494","messageId":"495","endLine":86,"endColumn":52},{"ruleId":"486","severity":1,"message":"487","line":92,"column":7,"nodeType":"488","endLine":92,"endColumn":9,"suggestions":"518"},{"ruleId":"492","severity":1,"message":"493","line":94,"column":15,"nodeType":"494","messageId":"495","endLine":94,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":107,"column":38,"nodeType":"494","messageId":"495","endLine":107,"endColumn":40},{"ruleId":"492","severity":1,"message":"519","line":110,"column":41,"nodeType":"494","messageId":"495","endLine":110,"endColumn":43},{"ruleId":"482","severity":1,"message":"517","line":14,"column":11,"nodeType":"484","messageId":"485","endLine":14,"endColumn":18},{"ruleId":"486","severity":1,"message":"520","line":42,"column":7,"nodeType":"488","endLine":42,"endColumn":17,"suggestions":"521"},{"ruleId":"492","severity":1,"message":"493","line":44,"column":15,"nodeType":"494","messageId":"495","endLine":44,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":52,"column":15,"nodeType":"494","messageId":"495","endLine":52,"endColumn":17},{"ruleId":"522","severity":1,"message":"523","line":69,"column":21,"nodeType":"524","endLine":69,"endColumn":91},{"ruleId":"522","severity":1,"message":"523","line":74,"column":17,"nodeType":"524","endLine":74,"endColumn":52},{"ruleId":"482","severity":1,"message":"496","line":9,"column":27,"nodeType":"484","messageId":"485","endLine":9,"endColumn":35},{"ruleId":"492","severity":1,"message":"493","line":63,"column":46,"nodeType":"494","messageId":"495","endLine":63,"endColumn":48},{"ruleId":"486","severity":1,"message":"510","line":69,"column":8,"nodeType":"488","endLine":69,"endColumn":10,"suggestions":"525"},{"ruleId":"492","severity":1,"message":"493","line":146,"column":15,"nodeType":"494","messageId":"495","endLine":146,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":154,"column":15,"nodeType":"494","messageId":"495","endLine":154,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":80,"column":46,"nodeType":"494","messageId":"495","endLine":80,"endColumn":48},{"ruleId":"486","severity":1,"message":"510","line":87,"column":8,"nodeType":"488","endLine":87,"endColumn":10,"suggestions":"526"},{"ruleId":"492","severity":1,"message":"493","line":89,"column":15,"nodeType":"494","messageId":"495","endLine":89,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":97,"column":15,"nodeType":"494","messageId":"495","endLine":97,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":101,"column":16,"nodeType":"494","messageId":"495","endLine":101,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":107,"column":16,"nodeType":"494","messageId":"495","endLine":107,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":212,"column":38,"nodeType":"494","messageId":"495","endLine":212,"endColumn":40},{"ruleId":"492","severity":1,"message":"519","line":215,"column":41,"nodeType":"494","messageId":"495","endLine":215,"endColumn":43},{"ruleId":"527","severity":1,"message":"528","line":281,"column":33,"nodeType":"524","endLine":281,"endColumn":128},{"ruleId":"482","severity":1,"message":"529","line":5,"column":22,"nodeType":"484","messageId":"485","endLine":5,"endColumn":31},{"ruleId":"482","severity":1,"message":"530","line":15,"column":12,"nodeType":"484","messageId":"485","endLine":15,"endColumn":18},{"ruleId":"482","severity":1,"message":"531","line":15,"column":20,"nodeType":"484","messageId":"485","endLine":15,"endColumn":29},{"ruleId":"486","severity":1,"message":"510","line":42,"column":7,"nodeType":"488","endLine":42,"endColumn":11,"suggestions":"532"},{"ruleId":"486","severity":1,"message":"510","line":53,"column":7,"nodeType":"488","endLine":53,"endColumn":21,"suggestions":"533"},{"ruleId":"486","severity":1,"message":"510","line":64,"column":8,"nodeType":"488","endLine":64,"endColumn":23,"suggestions":"534"},{"ruleId":"486","severity":1,"message":"510","line":75,"column":8,"nodeType":"488","endLine":75,"endColumn":25,"suggestions":"535"},{"ruleId":"486","severity":1,"message":"510","line":86,"column":7,"nodeType":"488","endLine":86,"endColumn":23,"suggestions":"536"},{"ruleId":"492","severity":1,"message":"493","line":88,"column":15,"nodeType":"494","messageId":"495","endLine":88,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":94,"column":15,"nodeType":"494","messageId":"495","endLine":94,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":98,"column":16,"nodeType":"494","messageId":"495","endLine":98,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":104,"column":16,"nodeType":"494","messageId":"495","endLine":104,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":116,"column":72,"nodeType":"494","messageId":"495","endLine":116,"endColumn":74},{"ruleId":"492","severity":1,"message":"493","line":133,"column":74,"nodeType":"494","messageId":"495","endLine":133,"endColumn":76},{"ruleId":"492","severity":1,"message":"493","line":150,"column":78,"nodeType":"494","messageId":"495","endLine":150,"endColumn":80},{"ruleId":"492","severity":1,"message":"493","line":167,"column":76,"nodeType":"494","messageId":"495","endLine":167,"endColumn":78},{"ruleId":"492","severity":1,"message":"493","line":196,"column":38,"nodeType":"494","messageId":"495","endLine":196,"endColumn":40},{"ruleId":"492","severity":1,"message":"493","line":54,"column":46,"nodeType":"494","messageId":"495","endLine":54,"endColumn":48},{"ruleId":"486","severity":1,"message":"510","line":69,"column":7,"nodeType":"488","endLine":69,"endColumn":9,"suggestions":"537"},{"ruleId":"492","severity":1,"message":"493","line":71,"column":15,"nodeType":"494","messageId":"495","endLine":71,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":79,"column":15,"nodeType":"494","messageId":"495","endLine":79,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":165,"column":38,"nodeType":"494","messageId":"495","endLine":165,"endColumn":40},{"ruleId":"482","severity":1,"message":"538","line":2,"column":15,"nodeType":"484","messageId":"485","endLine":2,"endColumn":25},{"ruleId":"492","severity":1,"message":"493","line":70,"column":44,"nodeType":"494","messageId":"495","endLine":70,"endColumn":46},{"ruleId":"486","severity":1,"message":"510","line":76,"column":7,"nodeType":"488","endLine":76,"endColumn":9,"suggestions":"539"},{"ruleId":"492","severity":1,"message":"493","line":97,"column":42,"nodeType":"494","messageId":"495","endLine":97,"endColumn":44},{"ruleId":"492","severity":1,"message":"519","line":100,"column":42,"nodeType":"494","messageId":"495","endLine":100,"endColumn":44},{"ruleId":"492","severity":1,"message":"493","line":113,"column":15,"nodeType":"494","messageId":"495","endLine":113,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":121,"column":15,"nodeType":"494","messageId":"495","endLine":121,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":125,"column":16,"nodeType":"494","messageId":"495","endLine":125,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":133,"column":16,"nodeType":"494","messageId":"495","endLine":133,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":142,"column":66,"nodeType":"494","messageId":"495","endLine":142,"endColumn":68},{"ruleId":"482","severity":1,"message":"540","line":10,"column":8,"nodeType":"484","messageId":"485","endLine":10,"endColumn":11},{"ruleId":"486","severity":1,"message":"510","line":40,"column":8,"nodeType":"488","endLine":40,"endColumn":10,"suggestions":"541"},{"ruleId":"492","severity":1,"message":"493","line":73,"column":46,"nodeType":"494","messageId":"495","endLine":73,"endColumn":48},{"ruleId":"486","severity":1,"message":"510","line":79,"column":7,"nodeType":"488","endLine":79,"endColumn":9,"suggestions":"542"},{"ruleId":"492","severity":1,"message":"519","line":86,"column":65,"nodeType":"494","messageId":"495","endLine":86,"endColumn":67},{"ruleId":"492","severity":1,"message":"493","line":91,"column":39,"nodeType":"494","messageId":"495","endLine":91,"endColumn":41},{"ruleId":"543","severity":1,"message":"544","line":96,"column":34,"nodeType":"545","messageId":"546","endLine":96,"endColumn":36},{"ruleId":"486","severity":1,"message":"510","line":102,"column":7,"nodeType":"488","endLine":102,"endColumn":20,"suggestions":"547"},{"ruleId":"486","severity":1,"message":"510","line":109,"column":7,"nodeType":"488","endLine":109,"endColumn":9,"suggestions":"548"},{"ruleId":"486","severity":1,"message":"549","line":120,"column":7,"nodeType":"488","endLine":120,"endColumn":9,"suggestions":"550"},{"ruleId":"486","severity":1,"message":"510","line":143,"column":7,"nodeType":"488","endLine":143,"endColumn":9,"suggestions":"551"},{"ruleId":"492","severity":1,"message":"493","line":159,"column":15,"nodeType":"494","messageId":"495","endLine":159,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":167,"column":15,"nodeType":"494","messageId":"495","endLine":167,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":171,"column":16,"nodeType":"494","messageId":"495","endLine":171,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":179,"column":16,"nodeType":"494","messageId":"495","endLine":179,"endColumn":18},{"ruleId":"552","severity":1,"message":"553","line":243,"column":41,"nodeType":"554","messageId":"495","endLine":243,"endColumn":47},{"ruleId":"482","severity":1,"message":"555","line":1,"column":28,"nodeType":"484","messageId":"485","endLine":1,"endColumn":34},{"ruleId":"482","severity":1,"message":"529","line":3,"column":22,"nodeType":"484","messageId":"485","endLine":3,"endColumn":31},{"ruleId":"482","severity":1,"message":"496","line":3,"column":39,"nodeType":"484","messageId":"485","endLine":3,"endColumn":47},{"ruleId":"492","severity":1,"message":"493","line":36,"column":44,"nodeType":"494","messageId":"495","endLine":36,"endColumn":46},{"ruleId":"486","severity":1,"message":"510","line":42,"column":7,"nodeType":"488","endLine":42,"endColumn":11,"suggestions":"556"},{"ruleId":"492","severity":1,"message":"493","line":44,"column":15,"nodeType":"494","messageId":"495","endLine":44,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":52,"column":15,"nodeType":"494","messageId":"495","endLine":52,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":69,"column":38,"nodeType":"494","messageId":"495","endLine":69,"endColumn":40},{"ruleId":"492","severity":1,"message":"493","line":92,"column":35,"nodeType":"494","messageId":"495","endLine":92,"endColumn":37},{"ruleId":"492","severity":1,"message":"493","line":99,"column":35,"nodeType":"494","messageId":"495","endLine":99,"endColumn":37},{"ruleId":"482","severity":1,"message":"502","line":3,"column":9,"nodeType":"484","messageId":"485","endLine":3,"endColumn":13},{"ruleId":"482","severity":1,"message":"496","line":3,"column":15,"nodeType":"484","messageId":"485","endLine":3,"endColumn":23},{"ruleId":"492","severity":1,"message":"493","line":147,"column":42,"nodeType":"494","messageId":"495","endLine":147,"endColumn":44},{"ruleId":"486","severity":1,"message":"510","line":153,"column":7,"nodeType":"488","endLine":153,"endColumn":11,"suggestions":"557"},{"ruleId":"492","severity":1,"message":"493","line":155,"column":15,"nodeType":"494","messageId":"495","endLine":155,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":163,"column":15,"nodeType":"494","messageId":"495","endLine":163,"endColumn":17},{"ruleId":"558","severity":1,"message":"559","line":12,"column":17,"nodeType":"560","messageId":"561","endLine":12,"endColumn":86},{"ruleId":"492","severity":1,"message":"493","line":12,"column":30,"nodeType":"494","messageId":"495","endLine":12,"endColumn":32},{"ruleId":"492","severity":1,"message":"493","line":17,"column":20,"nodeType":"494","messageId":"495","endLine":17,"endColumn":22},{"ruleId":"558","severity":1,"message":"559","line":14,"column":17,"nodeType":"560","messageId":"561","endLine":14,"endColumn":69},{"ruleId":"492","severity":1,"message":"493","line":14,"column":28,"nodeType":"494","messageId":"495","endLine":14,"endColumn":30},{"ruleId":"482","severity":1,"message":"538","line":3,"column":9,"nodeType":"484","messageId":"485","endLine":3,"endColumn":19},{"ruleId":"482","severity":1,"message":"496","line":3,"column":27,"nodeType":"484","messageId":"485","endLine":3,"endColumn":35},{"ruleId":"492","severity":1,"message":"493","line":36,"column":42,"nodeType":"494","messageId":"495","endLine":36,"endColumn":44},{"ruleId":"486","severity":1,"message":"510","line":42,"column":7,"nodeType":"488","endLine":42,"endColumn":11,"suggestions":"562"},{"ruleId":"492","severity":1,"message":"493","line":44,"column":15,"nodeType":"494","messageId":"495","endLine":44,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":52,"column":15,"nodeType":"494","messageId":"495","endLine":52,"endColumn":17},{"ruleId":"482","severity":1,"message":"538","line":6,"column":15,"nodeType":"484","messageId":"485","endLine":6,"endColumn":25},{"ruleId":"492","severity":1,"message":"493","line":58,"column":42,"nodeType":"494","messageId":"495","endLine":58,"endColumn":44},{"ruleId":"486","severity":1,"message":"510","line":64,"column":7,"nodeType":"488","endLine":64,"endColumn":16,"suggestions":"563"},{"ruleId":"492","severity":1,"message":"493","line":85,"column":38,"nodeType":"494","messageId":"495","endLine":85,"endColumn":40},{"ruleId":"492","severity":1,"message":"519","line":88,"column":41,"nodeType":"494","messageId":"495","endLine":88,"endColumn":43},{"ruleId":"492","severity":1,"message":"493","line":100,"column":16,"nodeType":"494","messageId":"495","endLine":100,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":104,"column":16,"nodeType":"494","messageId":"495","endLine":104,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":108,"column":16,"nodeType":"494","messageId":"495","endLine":108,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":114,"column":16,"nodeType":"494","messageId":"495","endLine":114,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":48,"column":15,"nodeType":"494","messageId":"495","endLine":48,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":56,"column":15,"nodeType":"494","messageId":"495","endLine":56,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":60,"column":16,"nodeType":"494","messageId":"495","endLine":60,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":68,"column":16,"nodeType":"494","messageId":"495","endLine":68,"endColumn":18},{"ruleId":"486","severity":1,"message":"510","line":31,"column":7,"nodeType":"488","endLine":31,"endColumn":11,"suggestions":"564"},{"ruleId":"492","severity":1,"message":"493","line":59,"column":15,"nodeType":"494","messageId":"495","endLine":59,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":67,"column":15,"nodeType":"494","messageId":"495","endLine":67,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":71,"column":16,"nodeType":"494","messageId":"495","endLine":71,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":79,"column":16,"nodeType":"494","messageId":"495","endLine":79,"endColumn":18},{"ruleId":"482","severity":1,"message":"538","line":6,"column":15,"nodeType":"484","messageId":"485","endLine":6,"endColumn":25},{"ruleId":"492","severity":1,"message":"493","line":58,"column":42,"nodeType":"494","messageId":"495","endLine":58,"endColumn":44},{"ruleId":"486","severity":1,"message":"510","line":64,"column":7,"nodeType":"488","endLine":64,"endColumn":16,"suggestions":"565"},{"ruleId":"492","severity":1,"message":"493","line":85,"column":38,"nodeType":"494","messageId":"495","endLine":85,"endColumn":40},{"ruleId":"492","severity":1,"message":"519","line":88,"column":44,"nodeType":"494","messageId":"495","endLine":88,"endColumn":46},{"ruleId":"492","severity":1,"message":"493","line":100,"column":16,"nodeType":"494","messageId":"495","endLine":100,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":104,"column":16,"nodeType":"494","messageId":"495","endLine":104,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":108,"column":16,"nodeType":"494","messageId":"495","endLine":108,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":114,"column":16,"nodeType":"494","messageId":"495","endLine":114,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":48,"column":15,"nodeType":"494","messageId":"495","endLine":48,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":56,"column":15,"nodeType":"494","messageId":"495","endLine":56,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":60,"column":16,"nodeType":"494","messageId":"495","endLine":60,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":68,"column":16,"nodeType":"494","messageId":"495","endLine":68,"endColumn":18},{"ruleId":"486","severity":1,"message":"510","line":30,"column":7,"nodeType":"488","endLine":30,"endColumn":11,"suggestions":"566"},{"ruleId":"492","severity":1,"message":"493","line":59,"column":15,"nodeType":"494","messageId":"495","endLine":59,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":67,"column":15,"nodeType":"494","messageId":"495","endLine":67,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":71,"column":16,"nodeType":"494","messageId":"495","endLine":71,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":79,"column":16,"nodeType":"494","messageId":"495","endLine":79,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":48,"column":15,"nodeType":"494","messageId":"495","endLine":48,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":56,"column":15,"nodeType":"494","messageId":"495","endLine":56,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":60,"column":16,"nodeType":"494","messageId":"495","endLine":60,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":68,"column":16,"nodeType":"494","messageId":"495","endLine":68,"endColumn":18},{"ruleId":"486","severity":1,"message":"510","line":30,"column":7,"nodeType":"488","endLine":30,"endColumn":11,"suggestions":"567"},{"ruleId":"492","severity":1,"message":"493","line":57,"column":15,"nodeType":"494","messageId":"495","endLine":57,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":65,"column":15,"nodeType":"494","messageId":"495","endLine":65,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":69,"column":16,"nodeType":"494","messageId":"495","endLine":69,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":77,"column":16,"nodeType":"494","messageId":"495","endLine":77,"endColumn":18},{"ruleId":"482","severity":1,"message":"538","line":6,"column":15,"nodeType":"484","messageId":"485","endLine":6,"endColumn":25},{"ruleId":"492","severity":1,"message":"493","line":58,"column":42,"nodeType":"494","messageId":"495","endLine":58,"endColumn":44},{"ruleId":"486","severity":1,"message":"510","line":64,"column":7,"nodeType":"488","endLine":64,"endColumn":16,"suggestions":"568"},{"ruleId":"492","severity":1,"message":"493","line":85,"column":38,"nodeType":"494","messageId":"495","endLine":85,"endColumn":40},{"ruleId":"492","severity":1,"message":"519","line":88,"column":45,"nodeType":"494","messageId":"495","endLine":88,"endColumn":47},{"ruleId":"492","severity":1,"message":"493","line":100,"column":16,"nodeType":"494","messageId":"495","endLine":100,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":104,"column":16,"nodeType":"494","messageId":"495","endLine":104,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":108,"column":16,"nodeType":"494","messageId":"495","endLine":108,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":114,"column":16,"nodeType":"494","messageId":"495","endLine":114,"endColumn":18},{"ruleId":"482","severity":1,"message":"538","line":6,"column":15,"nodeType":"484","messageId":"485","endLine":6,"endColumn":25},{"ruleId":"492","severity":1,"message":"493","line":58,"column":42,"nodeType":"494","messageId":"495","endLine":58,"endColumn":44},{"ruleId":"486","severity":1,"message":"510","line":64,"column":7,"nodeType":"488","endLine":64,"endColumn":16,"suggestions":"569"},{"ruleId":"492","severity":1,"message":"493","line":85,"column":38,"nodeType":"494","messageId":"495","endLine":85,"endColumn":40},{"ruleId":"492","severity":1,"message":"519","line":88,"column":42,"nodeType":"494","messageId":"495","endLine":88,"endColumn":44},{"ruleId":"492","severity":1,"message":"493","line":100,"column":16,"nodeType":"494","messageId":"495","endLine":100,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":104,"column":16,"nodeType":"494","messageId":"495","endLine":104,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":108,"column":16,"nodeType":"494","messageId":"495","endLine":108,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":114,"column":16,"nodeType":"494","messageId":"495","endLine":114,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":48,"column":15,"nodeType":"494","messageId":"495","endLine":48,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":56,"column":15,"nodeType":"494","messageId":"495","endLine":56,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":60,"column":16,"nodeType":"494","messageId":"495","endLine":60,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":68,"column":16,"nodeType":"494","messageId":"495","endLine":68,"endColumn":18},{"ruleId":"486","severity":1,"message":"510","line":30,"column":7,"nodeType":"488","endLine":30,"endColumn":11,"suggestions":"570"},{"ruleId":"492","severity":1,"message":"493","line":57,"column":15,"nodeType":"494","messageId":"495","endLine":57,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":65,"column":15,"nodeType":"494","messageId":"495","endLine":65,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":69,"column":16,"nodeType":"494","messageId":"495","endLine":69,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":77,"column":16,"nodeType":"494","messageId":"495","endLine":77,"endColumn":18},{"ruleId":"482","severity":1,"message":"538","line":6,"column":15,"nodeType":"484","messageId":"485","endLine":6,"endColumn":25},{"ruleId":"492","severity":1,"message":"493","line":58,"column":42,"nodeType":"494","messageId":"495","endLine":58,"endColumn":44},{"ruleId":"486","severity":1,"message":"510","line":64,"column":7,"nodeType":"488","endLine":64,"endColumn":16,"suggestions":"571"},{"ruleId":"492","severity":1,"message":"493","line":85,"column":38,"nodeType":"494","messageId":"495","endLine":85,"endColumn":40},{"ruleId":"492","severity":1,"message":"519","line":88,"column":42,"nodeType":"494","messageId":"495","endLine":88,"endColumn":44},{"ruleId":"492","severity":1,"message":"493","line":100,"column":16,"nodeType":"494","messageId":"495","endLine":100,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":104,"column":16,"nodeType":"494","messageId":"495","endLine":104,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":108,"column":16,"nodeType":"494","messageId":"495","endLine":108,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":114,"column":16,"nodeType":"494","messageId":"495","endLine":114,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":48,"column":15,"nodeType":"494","messageId":"495","endLine":48,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":56,"column":15,"nodeType":"494","messageId":"495","endLine":56,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":60,"column":16,"nodeType":"494","messageId":"495","endLine":60,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":68,"column":16,"nodeType":"494","messageId":"495","endLine":68,"endColumn":18},{"ruleId":"486","severity":1,"message":"510","line":30,"column":7,"nodeType":"488","endLine":30,"endColumn":11,"suggestions":"572"},{"ruleId":"492","severity":1,"message":"493","line":57,"column":15,"nodeType":"494","messageId":"495","endLine":57,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":65,"column":15,"nodeType":"494","messageId":"495","endLine":65,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":69,"column":16,"nodeType":"494","messageId":"495","endLine":69,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":77,"column":16,"nodeType":"494","messageId":"495","endLine":77,"endColumn":18},{"ruleId":"482","severity":1,"message":"538","line":6,"column":15,"nodeType":"484","messageId":"485","endLine":6,"endColumn":25},{"ruleId":"492","severity":1,"message":"493","line":58,"column":42,"nodeType":"494","messageId":"495","endLine":58,"endColumn":44},{"ruleId":"486","severity":1,"message":"510","line":64,"column":7,"nodeType":"488","endLine":64,"endColumn":16,"suggestions":"573"},{"ruleId":"492","severity":1,"message":"493","line":85,"column":38,"nodeType":"494","messageId":"495","endLine":85,"endColumn":40},{"ruleId":"492","severity":1,"message":"519","line":88,"column":41,"nodeType":"494","messageId":"495","endLine":88,"endColumn":43},{"ruleId":"492","severity":1,"message":"493","line":100,"column":16,"nodeType":"494","messageId":"495","endLine":100,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":104,"column":16,"nodeType":"494","messageId":"495","endLine":104,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":108,"column":16,"nodeType":"494","messageId":"495","endLine":108,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":114,"column":16,"nodeType":"494","messageId":"495","endLine":114,"endColumn":18},{"ruleId":"482","severity":1,"message":"574","line":29,"column":23,"nodeType":"484","messageId":"485","endLine":29,"endColumn":27},{"ruleId":"486","severity":1,"message":"510","line":33,"column":7,"nodeType":"488","endLine":33,"endColumn":11,"suggestions":"575"},{"ruleId":"492","severity":1,"message":"493","line":66,"column":15,"nodeType":"494","messageId":"495","endLine":66,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":74,"column":15,"nodeType":"494","messageId":"495","endLine":74,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":78,"column":16,"nodeType":"494","messageId":"495","endLine":78,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":86,"column":16,"nodeType":"494","messageId":"495","endLine":86,"endColumn":18},{"ruleId":"482","severity":1,"message":"576","line":5,"column":24,"nodeType":"484","messageId":"485","endLine":5,"endColumn":42},{"ruleId":"482","severity":1,"message":"502","line":6,"column":9,"nodeType":"484","messageId":"485","endLine":6,"endColumn":13},{"ruleId":"482","severity":1,"message":"496","line":6,"column":15,"nodeType":"484","messageId":"485","endLine":6,"endColumn":23},{"ruleId":"482","severity":1,"message":"577","line":8,"column":8,"nodeType":"484","messageId":"485","endLine":8,"endColumn":16},{"ruleId":"482","severity":1,"message":"503","line":9,"column":8,"nodeType":"484","messageId":"485","endLine":9,"endColumn":13},{"ruleId":"482","severity":1,"message":"540","line":10,"column":8,"nodeType":"484","messageId":"485","endLine":10,"endColumn":11},{"ruleId":"492","severity":1,"message":"493","line":38,"column":42,"nodeType":"494","messageId":"495","endLine":38,"endColumn":44},{"ruleId":"486","severity":1,"message":"510","line":43,"column":7,"nodeType":"488","endLine":43,"endColumn":14,"suggestions":"578"},{"ruleId":"492","severity":1,"message":"493","line":45,"column":15,"nodeType":"494","messageId":"495","endLine":45,"endColumn":17},{"ruleId":"492","severity":1,"message":"493","line":53,"column":15,"nodeType":"494","messageId":"495","endLine":53,"endColumn":17},"no-native-reassign",["579"],"no-negated-in-lhs",["580"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'JsonWebTokenError' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["581"],"React Hook useEffect contains a call to 'setIsAdmin'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [permission] as a second argument to the useEffect Hook.",["582"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Redirect' is defined but never used.","'BASE_URL_BACK' is defined but never used.","'useEffect' is defined but never used.","no-duplicate-case","Duplicate case label.","SwitchCase","'Link' is defined but never used.","'Birds' is defined but never used.","React Hook useEffect has missing dependencies: 'configAxios' and 'id'. Either include them or remove the dependency array.",["583"],"'redirectPage' is assigned a value but never used.","'setRedirectPage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'configAxios', 'id', and 'jwtId.id'. Either include them or remove the dependency array.",["584"],"React Hook useEffect has a missing dependency: 'configAxios'. Either include it or remove the dependency array.",["585"],["586"],"no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'history' is assigned a value but never used.",["587"],"Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'configAxios' and 'user.id'. Either include them or remove the dependency array.",["588"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["589"],["590"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'useParams' is defined but never used.","'typeId' is assigned a value but never used.","'setTypeId' is assigned a value but never used.",["591"],["592"],["593"],["594"],["595"],["596"],"'useHistory' is defined but never used.",["597"],"'jwt' is defined but never used.",["598"],["599"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["600"],["601"],"React Hook useEffect has missing dependencies: 'configAxios' and 'isAdmin'. Either include them or remove the dependency array.",["602"],["603"],"no-dupe-keys","Duplicate key 'legend'.","ObjectExpression","'useRef' is defined but never used.",["604"],["605"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["606"],["607"],["608"],["609"],["610"],["611"],["612"],["613"],["614"],["615"],["616"],["617"],"'code' is assigned a value but never used.",["618"],"'BASE_URL_API_MAGIC' is defined but never used.","'BackCard' is defined but never used.",["619"],"no-global-assign","no-unsafe-negation",{"desc":"620","fix":"621"},{"desc":"622","fix":"623"},{"desc":"624","fix":"625"},{"desc":"626","fix":"627"},{"desc":"628","fix":"629"},{"desc":"630","fix":"631"},{"desc":"620","fix":"632"},{"desc":"633","fix":"634"},{"desc":"635","fix":"636"},{"desc":"635","fix":"637"},{"desc":"638","fix":"639"},{"desc":"640","fix":"641"},{"desc":"642","fix":"643"},{"desc":"644","fix":"645"},{"desc":"646","fix":"647"},{"desc":"635","fix":"648"},{"desc":"635","fix":"649"},{"desc":"635","fix":"650"},{"desc":"635","fix":"651"},{"desc":"652","fix":"653"},{"desc":"635","fix":"654"},{"desc":"655","fix":"656"},{"desc":"635","fix":"657"},{"desc":"638","fix":"658"},{"desc":"638","fix":"659"},{"desc":"638","fix":"660"},{"desc":"655","fix":"661"},{"desc":"638","fix":"662"},{"desc":"655","fix":"663"},{"desc":"638","fix":"664"},{"desc":"638","fix":"665"},{"desc":"655","fix":"666"},{"desc":"655","fix":"667"},{"desc":"638","fix":"668"},{"desc":"655","fix":"669"},{"desc":"638","fix":"670"},{"desc":"655","fix":"671"},{"desc":"638","fix":"672"},{"desc":"673","fix":"674"},"Update the dependencies array to be: [token]",{"range":"675","text":"676"},"Add dependencies array: [permission]",{"range":"677","text":"678"},"Update the dependencies array to be: [configAxios, id, urlId]",{"range":"679","text":"680"},"Update the dependencies array to be: [configAxios, id, jwtId.id]",{"range":"681","text":"682"},"Update the dependencies array to be: [configAxios, languageId]",{"range":"683","text":"684"},"Update the dependencies array to be: [configAxios, qualityId]",{"range":"685","text":"686"},{"range":"687","text":"676"},"Update the dependencies array to be: [configAxios, user.id, userName]",{"range":"688","text":"689"},"Update the dependencies array to be: [configAxios]",{"range":"690","text":"691"},{"range":"692","text":"691"},"Update the dependencies array to be: [configAxios, id]",{"range":"693","text":"694"},"Update the dependencies array to be: [card.type_id, configAxios]",{"range":"695","text":"696"},"Update the dependencies array to be: [card.color_id, configAxios]",{"range":"697","text":"698"},"Update the dependencies array to be: [card.edition_id, configAxios]",{"range":"699","text":"700"},"Update the dependencies array to be: [card.rarity_id, configAxios]",{"range":"701","text":"702"},{"range":"703","text":"691"},{"range":"704","text":"691"},{"range":"705","text":"691"},{"range":"706","text":"691"},"Update the dependencies array to be: [cardEdition, configAxios]",{"range":"707","text":"708"},{"range":"709","text":"691"},"Update the dependencies array to be: [configAxios, isAdmin]",{"range":"710","text":"711"},{"range":"712","text":"691"},{"range":"713","text":"694"},{"range":"714","text":"694"},{"range":"715","text":"694"},{"range":"716","text":"711"},{"range":"717","text":"694"},{"range":"718","text":"711"},{"range":"719","text":"694"},{"range":"720","text":"694"},{"range":"721","text":"711"},{"range":"722","text":"711"},{"range":"723","text":"694"},{"range":"724","text":"711"},{"range":"725","text":"694"},{"range":"726","text":"711"},{"range":"727","text":"694"},"Update the dependencies array to be: [configAxios, urlId]",{"range":"728","text":"729"},[450,452],"[token]",[835,835],", [permission]",[1879,1886],"[configAxios, id, urlId]",[1841,1843],"[configAxios, id, jwtId.id]",[2040,2052],"[configAxios, languageId]",[2251,2262],"[configAxios, qualityId]",[3887,3889],[1523,1533],"[configAxios, user.id, userName]",[2704,2706],"[configAxios]",[3346,3348],[1574,1578],"[configAxios, id]",[1949,1963],"[card.type_id, configAxios]",[2338,2353],"[card.color_id, configAxios]",[2734,2751],"[card.edition_id, configAxios]",[3129,3145],"[card.rarity_id, configAxios]",[2572,2574],[3080,3082],[1437,1439],[3051,3053],[3816,3829],"[cardEdition, configAxios]",[4009,4011],[4269,4271],"[configAxios, isAdmin]",[5029,5031],[1568,1572],[6317,6321],[1449,1453],[2290,2299],[1129,1133],[2298,2307],[1100,1104],[1095,1099],[2298,2307],[2295,2304],[1088,1092],[2287,2296],[1072,1076],[2296,2305],[1262,1266],[1495,1502],"[configAxios, urlId]"]